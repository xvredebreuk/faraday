{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#rethink-vulnerability-management-for-your-network-security","title":"Rethink Vulnerability Management for your Network Security","text":"<p>Security faces two challenging objectives: developing intelligent methods for obtaining new information and effectively managing and enhancing remediation efforts. With the utilization of Faraday, you can prioritize vulnerability discovery while we assist you with the remaining tasks. Simply access Faraday through your terminal and effortlessly organize your work on the go.</p> <p>Faraday was specifically designed to enable you to leverage the diverse range of tools within the security community, fostering a truly collaborative multiuser environment.</p> <p>By consolidating and standardizing the data you input, Faraday empowers you to explore it through various visualizations that prove valuable to both managers and analysts.</p> <p>Faraday is meticulously crafted to optimize the process of Vulnerability Management. It excels at normalizing, tracking, and identifying assets and vulnerability data from over 90 different security tools.</p> <p></p> <p></p> <p>To read about the latest features check out the release notes!</p>"},{"location":"#getting-started","title":"Getting Started","text":"<p>Learn about Faraday holistic approach and rethink vulnerability management.</p> <ul> <li> <p>Centralize your vulnerability data</p> </li> <li> <p>Automate the scanners you need</p> </li> </ul>"},{"location":"#integrating-faraday-in-your-cicd","title":"Integrating faraday in your CI/CD","text":"<p>Setup Bandit and OWASP ZAP in your pipeline</p> <ul> <li> <p>GitHub [PDF]</p> </li> <li> <p>Jenkins [PDF]</p> </li> <li> <p>TravisCI  [PDF]</p> </li> </ul> <p>Setup Bandit, OWASP ZAP and SonarQube in your pipeline</p> <ul> <li>Gitlab [PDF]</li> </ul>"},{"location":"#faraday-cli","title":"Faraday Cli","text":"<p>Faraday-cli is our command line client, providing easy access to the console tools, work in faraday directly from the terminal!</p> <p>This is a great way to automate scans,  integrate it to CI/CD pipeline  or just get metrics from a workspace</p> <pre><code>$ pip3 install faraday-cli\n</code></pre> <p>Check our faraday-cli repo</p> <p>Check out the documentation here.</p> <p></p>"},{"location":"#faraday-agents","title":"Faraday Agents","text":"<p>Faraday Agents Dispatcher is a tool that gives Faraday the ability to run scanners or tools remotely from the platform and get the results.</p>"},{"location":"#actionable-reporting-and-vulnerability-templates","title":"Actionable reporting and Vulnerability templates","text":"<p>Every company has a different approach to reporting. Faraday provides a way for companies to export their data into their own compliance-ready formats.</p>"},{"location":"#plugins","title":"Plugins","text":"<p>Connect you favorite tools through our plugins. Right now there are more than 80+ supported tools, among which you will find:</p> <p></p> <p>Missing your favorite one? Create a Pull Request!</p> <p>There are two Plugin types:</p> <p>Console plugins which interpret the output of the tools you execute.</p> <pre><code>$ faraday-cli tool run \\\"nmap www.exampledomain.com\\\"\n\ud83d\udcbb Processing Nmap command\nStarting Nmap 7.80 ( https://nmap.org ) at 2021-02-22 14:13 -03\nNmap scan report for www.exampledomain.com (10.196.205.130)\nHost is up (0.17s latency).\nrDNS record for 10.196.205.130: 10.196.205.130.bc.example.com\nNot shown: 996 filtered ports\nPORT     STATE  SERVICE\n80/tcp   open   http\n443/tcp  open   https\n2222/tcp open   EtherNetIP-1\n3306/tcp closed mysql\nNmap done: 1 IP address (1 host up) scanned in 11.12 seconds\n\u2b06 Sending data to workspace: test\n\u2714 Done\n</code></pre> <p>Report plugins which allows you to import previously generated artifacts like XMLs, JSONs.</p> <pre><code>faraday-cli tool report burp.xml\n</code></pre> <p>Creating custom plugins is super easy, Read more about Plugins. Vulnerability Templates</p> <p>Quickly fill out the gaps in your vulnerability data with Templates from your personalized Knowledge Base.</p> <p>Reduce and Prioritize</p> <p>An interface built around collaboration and simplicity: manage, tag, prioritize with ease.</p> <p>Faraday Client</p> <p>Our Shell allows you to upload results while pentesting actively.</p>"},{"location":"#custom-workflows-and-seamless-deduplication","title":"Custom Workflows and seamless Deduplication","text":"<p>Trigger any action with custom events built to avoid repetitive tasks. Import all your data and never worry about duplicates, as Faraday automatically identifies and merges duplicated issues.</p>"},{"location":"#easily-schedule-scanners-and-jobs-with-agents","title":"Easily schedule scanners and jobs with Agents","text":"<p>Agents are a lightweight, highly-scalable way to automate repetitive scheduled scans or triggered jobs that unnecessarily take up team resources.</p>"},{"location":"#jira-gitlab-servicenow-solarwinds-2nd-factor-authentication-2fa-and-ldap","title":"Jira, GitLab, ServiceNow, SolarWinds, 2nd Factor Authentication (2FA) and LDAP","text":"<p>Synchronize your favorite ticketing systems (JIRA, GitLab, ServiceNow, SolarWinds) and integrate with your existing Direct Access Protocol (LDAP).</p> <p>We are continuously adding new integrations based on customer requests.</p> <p></p>"},{"location":"#easy-to-use-rest-api","title":"Easy-to-use REST API","text":"<p>Leverage our REST API to scale your own strategy by directly accessing integrations, analytics capabilities, and reporting depending on your needs.</p> <p></p>"},{"location":"#presentations","title":"Presentations","text":"Some of the leading Security Conferences we present Faraday <ul> <li> <p>Ekoparty :     2010 -     2014 -     2017 -     2018</p> </li> <li> <p>Black Hat:</p> <ul> <li> <p>USA :     2011 -     2015 -     2016 -     2017 -     2018</p> </li> <li> <p>Asia :     2016 -     2017 -     2018</p> </li> <li> <p>Europe :     2015 -     2016</p> </li> </ul> </li> <li> <p>RSA USA :     2015</p> </li> <li> <p>HITBSecConf Dubai :    2018</p> </li> <li> <p>SecurityWeekly :    2016</p> </li> <li> <p>Zero Nights :    2016</p> </li> <li> <p>AVTokyo :     2016 -     2018</p> </li> <li> <p>Tel Aviv-Yafo :    2018</p> </li> <li> <p>SECCON :    2018</p> </li> <li> <p>PyConAr :    2018</p> </li> <li> <p>8.8 Chile :    2018</p> </li> <li> <p>CharruaCon :    2018</p> </li> <li> <p>NotPinkCon :    2018</p> </li> <li> <p>plusCODE :    2018</p> </li> <li> <p>BSides LATAM :    2016</p> </li> </ul>"},{"location":"#links","title":"Links","text":"<ul> <li> <p>Homepage: faradaysec.com</p> </li> <li> <p>Documentation: Faraday Docs</p> </li> <li> <p>Download: Download .deb/.rpm from releases page</p> </li> <li> <p>Issue tracker and feedback: Github issue tracker</p> </li> <li> <p>Frequently Asked Questions: FaradaySEC FAQ</p> </li> <li> <p>Twitter: @faradaysec</p> </li> <li> <p>Try one of our Demos</p> </li> </ul>"},{"location":"2-Factor-Authentication/","title":"Faraday supports 2nd Factor Authentication. We support any apps, e.g: (V3 Deprecated)","text":"<ol> <li>Google Authenticator Android</li> <li>Google Authenticator iOS</li> <li>Authy Android</li> <li>Authy iOS</li> <li>OTP Authenticator Android, Open Source</li> </ol>"},{"location":"2-Factor-Authentication/#activate-2fa","title":"Activate 2FA","text":"<ul> <li>Click on the Faraday slider menu on the top right of the screen, select Account and go to the Two Factor Authentication tab.</li> </ul> <p> * Once you enable 2FA, Faraday will show you a QR code and thus you can scan it with your chosen app.</p> <p></p> <p>As with every app using 2FA, the time on your phone and on your machine must be synchronized.</p>"},{"location":"API-Server/","title":"API Server","text":""},{"location":"API-Server/#faraday-server-api","title":"Faraday Server API","text":"<p>Faraday has a RESTful API under <code>_api</code> url prefix where the server is configured (example: https://server.faradaysec.com:5985/_api/v3/)</p> <p>The Faraday REST API enables you to interact with our server. Use this API to interact or integrate with Faraday server. [This page] documents the REST API, with HTTP response codes and example requests and responses.</p> <p>We have a Swagger page to explore the api here:</p>"},{"location":"API-Server/#faraday-server-api-description","title":"Faraday Server API Description","text":"<p>Faraday has a Server RESTful API by default running on 127.0.0.1:5985. </p> <p>INFO: On cloud, you have to replace this with \"https://yourdomain.faradaysec.com/\"</p> <p>You can check all API endpoints with the command:</p> <pre><code>$ faraday-manage show-urls\n</code></pre>"},{"location":"API-Server/#methods","title":"Methods","text":"<p>POST: creates objects</p> <p>GET: get a list of objects or get one object given its object_id</p> <p>PUT: update object</p> <p>DELETE: delete object</p>"},{"location":"API-Server/#headers","title":"Headers","text":"<p>Our API endpoints support JSON and you must always include the header:</p> <pre><code>Content-Type: application/json\n</code></pre>"},{"location":"API-Server/#authentication","title":"Authentication","text":"<p>The server API requires authentication. Currently, we support cookie authentication.</p> <p>The endpoint for login is /_api/login and the json payload is: <pre><code>{\"email\": \"USERNAME\", \"password\": \"SECRET_PASSWORD\"}\n</code></pre></p> <p>Endpoints Faraday Config: Here are the list of API endpoints for license, users, workspace and authentication:</p> <pre><code>(HEAD, POST, OPTIONS, GET) -&gt; '/login' \n(HEAD, OPTIONS, GET) -&gt; '/logout' \n(HEAD, OPTIONS, GET) -&gt; '/session'\n(HEAD, POST, OPTIONS, GET) -&gt; '/change' \n(HEAD, OPTIONS, GET) -&gt; '/config' \n(HEAD, OPTIONS, GET) -&gt; '/_api/v3/licenses/'\n(POST, OPTIONS) -&gt; '/_api/v3/licenses/'\n(OPTIONS, DELETE) -&gt; '/_api/v3/licenses/&lt;object_id&gt;/'\n(HEAD, OPTIONS, GET) -&gt; '/_api/v3/licenses/&lt;object_id&gt;/'\n(PUT, OPTIONS) -&gt; '/_api/v3/licenses/&lt;object_id&gt;/'\n(OPTIONS, DELETE) -&gt; '/_api/v3/users/&lt;object_id&gt;/'\n(HEAD, OPTIONS, GET) -&gt; '/_api/v3/users/&lt;object_id&gt;/'\n(PUT, OPTIONS) -&gt; '/_api/v3/users/&lt;object_id&gt;/'\n(HEAD, OPTIONS, GET) -&gt; '/_api/v3/users/'\n(POST, OPTIONS) -&gt; '/_api/v3/users/'\n(HEAD, OPTIONS, GET) -&gt; '/_api/v3/in'\n(HEAD, OPTIONS, GET) -&gt; '/_api/v3/ws/'\n(POST, OPTIONS) -&gt; '/_api/v3/ws/'\n(OPTIONS, DELETE) -&gt; '/_api/v3/ws/&lt;object_id&gt;/'\n(HEAD, OPTIONS, GET) -&gt; '/_api/v3/ws/&lt;object_id&gt;/'\n(PUT, OPTIONS) -&gt; '/_api/v3/ws/&lt;object_id&gt;/'\n</code></pre>"},{"location":"API-Server/#host","title":"Host","text":"<p>This API endpoint allows you to change the Host objects:</p> <p><pre><code>(HEAD, OPTIONS, GET) -&gt; '/_api/v3/ws/&lt;workspace_name&gt;/hosts/'\n(POST, OPTIONS) -&gt; '/_api/v3/ws/&lt;workspace_name&gt;/hosts/'\n(HEAD, OPTIONS, GET) -&gt; '/_api/v3/ws/&lt;workspace_name&gt;/hosts/count/'\n(HEAD, OPTIONS, GET) -&gt; '/_api/v3/ws/&lt;workspace_name&gt;/hosts/countVulns/'\n(OPTIONS, DELETE) -&gt; '/_api/v3/ws/&lt;workspace_name&gt;/hosts/&lt;object_id&gt;/'\n(HEAD, OPTIONS, GET) -&gt; '/_api/v3/ws/&lt;workspace_name&gt;/hosts/&lt;object_id&gt;/'\n(PUT, OPTIONS) -&gt; '/_api/v3/ws/&lt;workspace_name&gt;/hosts/&lt;object_id&gt;/'\n(HEAD, OPTIONS, GET) -&gt; '/_api/v3/ws/&lt;workspace_name&gt;/hosts/&lt;host_id&gt;/services/'\n(DELETE, OPTIONS) -&gt; '/_api/v3/ws/&lt;workspace_name&gt;/hosts/bulk_delete/'\n</code></pre> JSON Body of the Host object:</p> <pre><code>{\n    \"ip\":\"test\",\n    \"hostnames\": [],\n    \"mac\":\"00:00:00:00:00:00\",\n    \"description\":\"\",\n    \"default_gateway\":\"None\",\n    \"os\":\"\",\n    \"owned\":false,\n    \"owner\":\"\"\n}\n</code></pre> <p>Services</p> <p>This API endpoint allows you to change the Service objects:</p> <pre><code>(HEAD, OPTIONS, GET) -&gt; '/_api/v3/ws/&lt;workspace_name&gt;/services/'\n(POST, OPTIONS) -&gt; '/_api/v3/ws/&lt;workspace_name&gt;/services/'\n(HEAD, OPTIONS, GET) -&gt; '/_api/v3/ws/&lt;workspace_name&gt;/services/count/'\n(OPTIONS, DELETE) -&gt; '/_api/v3/ws/&lt;workspace_name&gt;/services/&lt;object_id&gt;/'\n(HEAD, OPTIONS, GET) -&gt; '/_api/v3/ws/&lt;workspace_name&gt;/services/&lt;object_id&gt;/'  \n(PUT, OPTIONS) -&gt; '/_api/v3/ws/&lt;workspace_name&gt;/services/&lt;object_id&gt;/'\n</code></pre> <p>JSON Body of the Service object:</p> <pre><code>{\n    \"name\":\"test\",\n    \"description\":\"\",\n    \"owned\":false,\n    \"owner\":\"\",\n    \"ports\":[8080],\n    \"protocol\":\"tcp\",\n    \"parent\":1156,\n    \"status\":\"open\",\n    \"version\":\"\",\n    \"type\":\"Service\" \n}\n</code></pre> <p>Vulnerability This API endpoint allows you to change the Vulnerability objects:</p> <pre><code>(HEAD, OPTIONS, GET) -&gt; '/_api/v3/ws/&lt;workspace_name&gt;/vulns/'\n(POST, OPTIONS) -&gt; '/_api/v3/ws/&lt;workspace_name&gt;/vulns/'\n(HEAD, OPTIONS, GET) -&gt; '/_api/v3/ws/&lt;workspace_name&gt;/vulns/count/'\n(HEAD, OPTIONS, GET) -&gt; '/_api/v3/ws/&lt;workspace_name&gt;/vulns/timeline/'\n(OPTIONS, DELETE) -&gt; '/_api/v3/ws/&lt;workspace_name&gt;/vulns/&lt;object_id&gt;/'\n(HEAD, OPTIONS, GET) -&gt; '/_api/v3/ws/&lt;workspace_name&gt;/vulns/&lt;object_id&gt;/'\n(PUT, OPTIONS) -&gt; '/_api/v3/ws/&lt;workspace_name&gt;/vulns/&lt;object_id&gt;/'\n(HEAD, OPTIONS, GET) -&gt; '/_api/v3/ws/&lt;workspace_name&gt;/vulns/&lt;vuln_id&gt;/attachment/&lt;attachment_filename&gt;/' \n(POST, OPTIONS) -&gt; '/_api/v3/ws/&lt;workspace&gt;/upload_report'\n(HEAD, OPTIONS, GET) -&gt; '/_api/v3/ws/&lt;workspace_name&gt;/tags/'\n</code></pre> <p>JSON Body of the Vulnerability object:</p>"},{"location":"API-Server/#info-key-named-type-can-be","title":"INFO: key named type can be:","text":"<p>vulnerability: Normal vulnerability, the parent could be a service or a host. vulnerability_web: Web vulnerability, the parent can only be a service. <pre><code>{\n    \"owner\":\"faraday\",\n    \"parent\":1156,\n    \"parent_type\":\"Host\",\n    \"type\":\"Vulnerability\",\n    \"ws\":\"api\",\n    \"confirmed\":true,\n    \"data\":\"\",\n    \"desc\":\"Testing API\",\n    \"impact\": \n    {\n        \"accountability\":false,\n        \"availability\":false,\n        \"confidentiality\":false,\n        \"integrity\":false\n    },\n    \"name\":\"test\",\n    \"owned\":false,\n    \"policyviolations\":[],\n    \"refs\":[],\n    \"resolution\":\"\",\n    \"severity\":\"high\",\n    \"issuetracker\":\"\",\n    \"status\":\"opened\",\n    \"_attachments\":{},\n    \"description\":\"\",\n    \"protocol\":\"\",\n    \"version\":\"\"\n}\n</code></pre></p>"},{"location":"API-Server/#tasks","title":"Tasks","text":"<p>This API endpoint allows you to change the Task objects:</p> <p><pre><code>(HEAD, OPTIONS, GET) -&gt; '/_api/v3/ws/&lt;workspace_name&gt;/tasks/'\n(POST, OPTIONS) -&gt; '/_api/v3/ws/&lt;workspace_name&gt;/tasks/'\n(HEAD, OPTIONS, GET) -&gt; '/_api/v3/ws/&lt;workspace_name&gt;/tasks/count/'\n(OPTIONS, DELETE) -&gt; '/_api/v3/ws/&lt;workspace_name&gt;/tasks/&lt;object_id&gt;/'\n(HEAD, OPTIONS, GET) -&gt; '/_api/v3/ws/&lt;workspace_name&gt;/tasks/&lt;object_id&gt;/'\n(PUT, OPTIONS) -&gt; '/_api/v3/ws/&lt;workspace_name&gt;/tasks/&lt;object_id&gt;/'\n(PUT, OPTIONS) -&gt; '/_api/v3/ws/&lt;workspace_name&gt;/taskGroups/manualimport/'\n(HEAD, OPTIONS, GET) -&gt; '/_api/v3/ws/&lt;workspace_name&gt;/taskGroups/import/'\n(HEAD, OPTIONS, GET) -&gt; '/_api/v3/ws/&lt;workspace_name&gt;/taskGroups/count/'\n(OPTIONS, DELETE) -&gt; '/_api/v3/ws/&lt;workspace_name&gt;/taskGroups/&lt;object_id&gt;/'\n(HEAD, OPTIONS, GET) -&gt; '/_api/v3/ws/&lt;workspace_name&gt;/taskGroups/&lt;object_id&gt;/'\n(PUT, OPTIONS) -&gt; '/_api/v3/ws/&lt;workspace_name&gt;/taskGroups/&lt;object_id&gt;/'\n(HEAD, OPTIONS, GET) -&gt; '/_api/v3/ws/&lt;workspace_name&gt;/taskGroups/'\n(POST, OPTIONS) -&gt; '/_api/v3/ws/&lt;workspace_name&gt;/taskGroups/'\n(HEAD, OPTIONS, GET) -&gt; '/_api/v3/task_template/'\n(POST, OPTIONS) -&gt; '/_api/v3/task_template/'\n(OPTIONS, DELETE) -&gt; '/_api/v3/task_template/&lt;object_id&gt;/'\n(HEAD, OPTIONS, GET) -&gt; '/_api/v3/task_template/&lt;object_id&gt;/'\n(PUT, OPTIONS) -&gt; '/_api/v3/task_template/&lt;object_id&gt;/'\n(OPTIONS, DELETE) -&gt; '/_api/v3/methodology_template/&lt;object_id&gt;/'\n(HEAD, OPTIONS, GET) -&gt; '/_api/v3/methodology_template/&lt;object_id&gt;/'\n(PUT, OPTIONS) -&gt; '/_api/v3/methodology_template/&lt;object_id&gt;/'\n(HEAD, OPTIONS, GET) -&gt; '/_api/v3/methodology_template/'\n(POST, OPTIONS) -&gt; '/_api/v3/methodology_template/'\n</code></pre> JSON Body of the Task object:</p> <pre><code>{\n    \"name\":\"test\", \n    \"type\":\"TaskGroup\", \n    \"group_type\":\"instance\", \n    \"instance_of\":\"\", \n    \"tCompletedtasks\":0, \n    \"totaltasks\":0\n}\n</code></pre> <p>Reports This API endpoint allows you to create reports from the API and download them:</p> <p><pre><code>(HEAD, OPTIONS, GET) -&gt; '/_api/v3/ws/&lt;workspace_name&gt;/reports/'\n(POST, OPTIONS) -&gt; '/_api/v3/ws/&lt;workspace_name&gt;/reports/'\n(HEAD, OPTIONS, GET) -&gt; '/_api/v3/ws/&lt;workspace_name&gt;/reports/count/'\n(HEAD, OPTIONS, GET) -&gt; '/_api/v3/ws/&lt;workspace_name&gt;/reports/countVulns/'\n(HEAD, OPTIONS, GET) -&gt; '/_api/v3/ws/&lt;workspace_name&gt;/reports/listTemplates/'\n(OPTIONS, DELETE) -&gt; '/_api/v3/ws/&lt;workspace_name&gt;/reports/&lt;object_id&gt;/'\n(HEAD, OPTIONS, GET) -&gt; '/_api/v3/ws/&lt;workspace_name&gt;/reports/&lt;object_id&gt;/'\n(PUT, OPTIONS) -&gt; '/_api/v3/ws/&lt;workspace_name&gt;/reports/&lt;object_id&gt;/'\n(HEAD, OPTIONS, GET) -&gt; '/_api/v3/ws/&lt;workspace_name&gt;/reports/&lt;report_id&gt;/download/'\n</code></pre> JSON Body of the Reports object:</p> <pre><code>{\n    \"name\":\"Testing-API\",\n    \"tags\":[],\n    \"title\":\"Network XYZ\",\n    \"enterprise\":\"ACMEINC\",\n    \"scope\":\"Scope\",\n    \"objectives\":\"Objetives\",\n    \"summary\":\"Summ\",\n    \"confirmed\":false,\n    \"conclusions\":\"Conclusions\",\n    \"recommendations\":\"Recommendations\",\n    \"vuln_count\":4,\n    \"template_name\":\"generic_default.docx\",\n    \"grouped\":false\n}\n</code></pre>"},{"location":"API-Server/#vulnerability-template","title":"Vulnerability Template","text":"<p>This API endpoint allows you to change the Vulnerability Template (VulnDB) objects:</p> <pre><code>(HEAD, OPTIONS, GET) -&gt; '/_api/v3/vulnerability_template/'\n(POST, OPTIONS) -&gt; '/_api/v3/vulnerability_template/'\n(OPTIONS, DELETE) -&gt; '/_api/v3/vulnerability_template/&lt;object_id&gt;/'\n(HEAD, OPTIONS, GET) -&gt; '/_api/v3/vulnerability_template/&lt;object_id&gt;/'\n(PUT, OPTIONS) -&gt; '/_api/v3/vulnerability_template/&lt;object_id&gt;/'\n</code></pre> <p>JSON Body of the Vulnerability Template object:</p> <pre><code>{\n    \"cwe\":\"\",\n    \"description\":\"Test\",\n    \"desc\":\"\",\n    \"exploitation\":\"high\",\n    \"name\":\"Testing API\",\n    \"references\":[],\n    \"refs\":[],\n    \"resolution\":\"\",\n    \"type\":\"vulnerability_template\"\n}\n</code></pre> <p>Credentials This API endpoint allows you to change the Credential objects:</p> <p><pre><code>(OPTIONS, DELETE) -&gt; '/_api/v3/ws/&lt;workspace_name&gt;/credential/&lt;object_id&gt;/'\n(HEAD, OPTIONS, GET) -&gt; '/_api/v3/ws/&lt;workspace_name&gt;/credential/&lt;object_id&gt;/'\n(PUT, OPTIONS) -&gt; '/_api/v3/ws/&lt;workspace_name&gt;/credential/&lt;object_id&gt;/'\n(HEAD, OPTIONS, GET) -&gt; '/_api/v3/ws/&lt;workspace_name&gt;/credential/'\n(POST, OPTIONS) -&gt; '/_api/v3/ws/&lt;workspace_name&gt;/credential/'\n(HEAD, OPTIONS, GET) -&gt; '/_api/v3/ws/&lt;workspace_name&gt;/credential/count/'\n</code></pre> JSON Body of the Credentials object:</p> <pre><code>{\n    \"name\":\"Test\",\n    \"username\":\"faraday\",\n    \"password\":\"changeme\",\n    \"type\":\"Cred\",\n    \"parent_type\":\"Host\",\n    \"parent\":\"1147\",\n    \"owner\":\"\",\n    \"description\":\"\"\n}\n</code></pre>"},{"location":"API-Server/#activity-feed","title":"Activity Feed","text":"<p>This API endpoint allows you to change the Activity Feed (from Dashboard) objects:</p> <pre><code>(HEAD, OPTIONS, GET) -&gt; '/_api/v3/ws/&lt;workspace_name&gt;/activities/count/'\n(HEAD, OPTIONS, GET) -&gt;  '/_api/v3/ws/&lt;workspace_name&gt;/commands/activity_feed/'\n(OPTIONS, DELETE) -&gt; '/_api/v3/ws/&lt;workspace_name&gt;/activities/&lt;object_id&gt;/'\n(HEAD, OPTIONS, GET) -&gt; '/_api/v3/ws/&lt;workspace_name&gt;/activities/&lt;object_id&gt;/'\n(PUT, OPTIONS) -&gt; '/_api/v3/ws/&lt;workspace_name&gt;/activities/&lt;object_id&gt;/'\n(HEAD, OPTIONS, GET) -&gt; '/_api/v3/ws/&lt;workspace_name&gt;/activities/'\n(POST, OPTIONS) -&gt; '/_api/v3/ws/&lt;workspace_name&gt;/activities/'\n</code></pre>"},{"location":"API-Server/#comments","title":"Comments","text":"<p>This API endpoint allows you to change the Comment objects:</p> <pre><code>(HEAD, OPTIONS, GET) -&gt; '/_api/v3/ws/&lt;workspace_name&gt;/comment/count/'\n(OPTIONS, DELETE) -&gt; '/_api/v3/ws/&lt;workspace_name&gt;/comment/&lt;object_id&gt;/'\n(HEAD, OPTIONS, GET) -&gt; '/_api/v3/ws/&lt;workspace_name&gt;/comment/&lt;object_id&gt;/'\n(PUT, OPTIONS) -&gt; '/_api/v3/ws/&lt;workspace_name&gt;/comment/&lt;object_id&gt;/'\n(HEAD, OPTIONS, GET) -&gt; '/_api/v3/ws/&lt;workspace_name&gt;/comment/'\n(POST, OPTIONS) -&gt; '/_api/v3/ws/&lt;workspace_name&gt;/comment/'\n</code></pre>"},{"location":"API-Server/#commands","title":"Commands","text":"<p>This API endpoint allows you to change the Commands objects: <pre><code>(HEAD, OPTIONS, GET) -&gt; '/_api/v3/ws/&lt;workspace_name&gt;/commands/count/'\n(OPTIONS, DELETE) -&gt; '/_api/v3/ws/&lt;workspace_name&gt;/commands/&lt;object_id&gt;/'\n(HEAD, OPTIONS, GET) -&gt; '/_api/v3/ws/&lt;workspace_name&gt;/commands/&lt;object_id&gt;/'\n(PUT, OPTIONS) -&gt; '/_api/v3/ws/&lt;workspace_name&gt;/commands/&lt;object_id&gt;/'\n(HEAD, OPTIONS, GET) -&gt; '/_api/v3/ws/&lt;workspace_name&gt;/commands/'\n(POST, OPTIONS) -&gt; '/_api/v3/ws/&lt;workspace_name&gt;/commands/'\n</code></pre></p>"},{"location":"API-Server/#others","title":"Others:","text":"<pre><code>(POST, OPTIONS) -&gt; '/_api/v3/ws/&lt;workspace_name&gt;/comment_unique/'\n</code></pre>"},{"location":"API-Server/#examples","title":"Examples","text":"<p>Assuming that our credentials are:  <pre><code>username: faraday\n\npassword: changeme\n</code></pre></p> <p>Login: in order to be able to login through the API, you must supply your credentials and store them in a cookie file just as the following example: <pre><code>    curl -s 'http://127.0.0.1:5985/_api/login' \\\n-H 'Origin: http://127.0.0.1:5985/' -H 'Accept-Encoding: gzip, deflate, br' \\\n-H 'Accept-Language: en-US,en;q=0.9' \\\n-H 'Content-Type: application/json' \\\n-H 'Accept: application/json, text/javascript, */*; q=0.01' \\\n-H 'Referer: http://127.0.0.1:5985/' -H 'X-Requested-With: XMLHttpRequest' \\\n-H 'Connection: keep-alive' \\\n--data-binary '{\"email\":\"faraday\",\"password\": \"changeme\"}' \\\n--compressed -c cookie.txt &gt; /dev/null\n</code></pre></p>"},{"location":"API-Server/#creating-a-host-assuming-our-workspace-name-is-test","title":"Creating a host: assuming our workspace name is test:","text":"<pre><code>    curl -X POST http://127.0.0.1:5985/_api/v3/ws/test/hosts/ \\\n-d '{\"ip\":\"127.0.0.1\",\"hostnames\":[\"testing\"], \"mac\":\"00:00:00:00:00:00\",\"description\":\"Testing API\", \"default_gateway\":\"None\", \"os\":\"Linux\", \"owned\":true, \"owner\":\"\"}' \\\n-b cookie.txt \\\n-H 'Content-Type: application/json'\n</code></pre>"},{"location":"API-Server/#getting-a-list-of-hosts","title":"Getting a list of hosts:","text":"<pre><code>curl -X GET http://127.0.0.1:5985/_api/v3/ws/test/hosts/ -b cookie.txt\n</code></pre>"},{"location":"API-Server/#creating-a-service","title":"Creating a service:","text":"<pre><code>    curl -X POST http://127.0.0.1:5985/_api/v3/ws/test/services/ \\\n-d '{\"name\":\"Test\",\"description\":\"Testing API\", \"owned\":true, \"owner\":\"\",\"ports\":[8080],\"protocol\":\"tcp\",\"parent\":1157,\"status\":\"open\",\"version\":\"\",\"metadata\":{\"update_time\":1533152663.994,\"update_user\":\"\",\"update_action\":0,\"creator\":\"\",\"create_time\":1533152663.994,\"update_controller_action\":\"UI Web New\",\"owner\":\"\"},\"type\":\"Service\"}' \\\n-b cookie.txt \\\n-H 'Content-Type: application/json'\n</code></pre>"},{"location":"API-Server/#creating-a-vuln","title":"Creating a vuln:","text":"<pre><code>    curl -X POST http://127.0.0.1:5985/_api/v3/ws/test/vulns/ \\\n-d '{\"metadata\":{\"update_time\":1533152883.927, \"update_user\":\"\", \"update_action\":0,\"creator\":\"UI Web\", \"create_time\":1533152883.927, \"update_controller_action\":\"UI Web New\", \"owner\":\"faraday\"}, \"obj_id\":\"\", \"owner\":\"faraday\", \"parent\":1157, \"parent_type\":\"Host\",\"type\":\"Vulnerability\",\"ws\":\"test\",\"confirmed\":true,\"data\":\"\",\"desc\":\"New vulnerability created for API purposes\",\"easeofresolution\":\"simple\",\"impact\":{\"accountability\":false, \"availability\":false, \"confidentiality\":false, \"integrity\":false},\"name\":\"New Vuln - Testing API\",\"owned\":false,\"policyviolations\":[],\"refs\":[], \"resolution\":\"\", \"severity\":\"critical\", \"issuetracker\":\"\", \"status\":\"opened\",\"_attachments\":{},\"description\":\"\",\"protocol\":\"\",\"version\":\"\"}' \\\n-b cookie.txt \\\n-H 'Content-Type: application/json'\n</code></pre>"},{"location":"API-Server/#creating-a-user","title":"Creating a user:","text":"<pre><code>    curl -X POST http://127.0.0.1:5985/_api/v3/users/ \\\n-d '{\"name\":\"faraday\", \"password\":\"changeme\", \"roles\":[\"admin\"], \"type\":\"user\", \"role\":\"admin\"}' \\\n-b cookie.txt \\\n-H 'Content-Type: application/json'\n</code></pre>"},{"location":"API-Server/#generating-a-report","title":"Generating a report:","text":"<pre><code>    curl -X POST http://127.0.0.1:5985/_api/v3/ws/test/reports/ \\\n-d '{\"name\":\"Testing-API\",\"tags\":[], \"title\":\"\", \"enterprise\":\"\", \"scope\":\"\", \"objectives\":\"\", \"summary\":\"\", \"confirmed\":false, \"conclusions\":\"\", \"recommendations\":\"\", \"vuln_count\":2, \"template_name\":\"generic_default.docx\", \"grouped\":false}' \\\n-b cookie.txt \\\n-H 'Content-Type: application/json'\n</code></pre>"},{"location":"API-Server/#uploading-a-report","title":"Uploading a report:","text":"<p>In order to be able to upload a report, you need the CSRF token and session's cookies. To get session's cookie, go to the Status Report and take it from RequestHeaders section of the console. And to get the CSRF token, in the same console, go to the tab Response.</p> <p>On the first --form parameter,put the path of the file that you want to upload.</p> <pre><code>    curl -X POST http://127.0.0.1:5985/_api/v3/ws/api/upload_report \\\n-H 'Content-Type: multipart/form-data' \\\n--cookie \"session=.eJw90M2KwjAQB_BXWXL2YGu9CB6UlGJhpgSCZeZS2FpNJ2YXqkI24rtv18O-wO__8VTdeRpuTm3u02NYqG48qc1TfXyqjWK9SyyUYVsWmMrUWDei9Etsj4FaDKydw-Qj5KZo9CWSNUu2uzXktQM5XSnxyJVZgTaRrYkk-xEt5ZQfVmT3DmcfKvrhcBQUKMgeIoQysb0knjMh-QIEliyQQzJZ0-IV_kx7DWDZY1WPmNCD9Fv1Wqj-Np27-7cfvv4noNTSVCZjXSaYK2KgiLqMTTtX1H7daMpmPnLFgtpHSk7YbN_c4zZM7ztUoV6_3rRiDA.DkoypQ.q7eGzh1oof8dKnbF4q6xD_n1d6o\" \\\n--form \"file=@PATH/TO/FILE\" \\\n--form \"csrf_token=IjYyYzhkNWQxMzA4MTZmMTQxMTliYTA5OTg2NWYzMWRmYzQ5MWM4Y2Ui.Dko4Zw.sZ-LLdGoxaNFUaySFFQMvyLecxc\" \\\n--compressed\n</code></pre>"},{"location":"API-Server/#using-the-api-to-create-a-workspace","title":"Using the API to create a workspace","text":"<p>Here we provide a Python script using requests to create a new workspace:</p> <pre><code># -*- coding: utf-8 -*-\nimport click\nfrom requests import Session\n\n@click.command()\n@click.option('--username', prompt=True)\n@click.option('--password', prompt=True)\n@click.option('--server_address', prompt=True, help='Faraday server url', default='http://localhost:5985/')\n@click.option('--workspace_name', prompt=True)\ndef create_workspace(username, password, server_address, workspace_name):\n    print('Authentication to server {0}'.format(server_address))\n    session = Session()\n    # authentication to faraday server\n    session.post(server_address + '/_api/login', json={'email': 'faraday', 'password': 'Password123'})\n    # create new workspace\n    ws_payload = {\n            \"customer\":\"\",\n            \"name\":workspace_name,\n            \"type\":\"Workspace\",\n            \"users\":[\"faraday\"],\n            \"public\":False,\n            \"children\":[],\n            \"duration\":{\"start_date\":\"\",\"end_date\":\"\"},\n            \"scope\":[],\n            \"description\":\"\"\n            }\n\n    res = session.post(server_address + '/_api/v3/ws/', json=ws_payload)\n    assert res.status_code == 201\n    print('Workspace {0} created'.format(workspace_name))\n\n\ncreate_workspace()\n</code></pre>"},{"location":"API-Server/#using-the-api-to-create-users-in-bulk","title":"Using the API to create users in bulk","text":"<pre><code>curl -s  'http://127.0.0.1:5985/_api/login' \\\n-H 'Origin: http://127.0.0.1:5985/' -H 'Accept-Encoding: gzip, deflate, br' \\\n-H 'Accept-Language: en-US,en;q=0.9' \\\n-H 'Content-Type: application/json' \\\n-H 'Accept: application/json, text/javascript, */*; q=0.01' \\\n-H 'Referer: http://127.0.0.1:5985/' -H 'X-Requested-With: XMLHttpRequest' \\\n-H 'Connection: keep-alive' \\\n--data-binary '{\"email\":\"faraday\",\"password\": \"changeme\"}' \\\n--compressed -c cookie.txt while read -r line; do\ncurl -X POST http://127.0.0.1:5985/_api/v3/users/ \\\n-d '{\"name\":\"'$line'\",\"password\":\"Password123\",\"roles\":[\"client\"],\"type\":\"user\",\"role\":\"client\"}' \\\n-H 'Content-Type: application/json' \\\n-b cookie.txt\ndone &lt; \"users.txt\"\n</code></pre>"},{"location":"API-Server/#using-the-api-to-delete-hosts-in-bulk","title":"Using the API to delete hosts in bulk","text":"<pre><code>curl -X DELETE http://127.0.0.1:5985/_api/v3/ws/test/hosts/bulk_delete/ \\\n-d '{\"hosts_ids\": [ 1, 2, 3, 4]}' \\\n-b cookie.txt \\\n-H 'Content-Type: application/json'\n</code></pre>"},{"location":"API-Server/#upload-evidence-to-a-vulnerability","title":"Upload evidence to a Vulnerability","text":"<p>Remember to change the workspace name in the urls and vuln id to attach evidence.</p> <pre><code>curl -s  'http://127.0.0.1:5985/_api/login' \\\n-H 'Content-Type: application/json' \\\n-H 'Accept: application/json, text/javascript, */*; q=0.01' \\\n-H 'Referer: http://127.0.0.1:5985/' -H 'X-Requested-With: XMLHttpRequest' \\\n-H 'Connection: keep-alive' \\\n--data-binary '{\"email\":\"faraday\",\"password\": \"changeme\"}' \\\n--compressed -c cookie.txt </code></pre>"},{"location":"API-Server/#obtain-csrf-token-to-upload-files","title":"obtain csrf token to upload files","text":"<p>csrf_token=$(curl -s -X GET http://127.0.0.1:5985/_api/session -b cookie.txt  -c csrf_cookie.txt| python -c \"import sys, json; print json.load(sys.stdin)['csrf_token']\")</p>"},{"location":"API-Server/#upload-the-file-evidencepng","title":"Upload the file evidence.png","text":"<pre><code>curl 'http://localhost:5985/_api/v3/ws/demo_workspace/vulns/251/attachment/' \\\n-H 'Connection: keep-alive' --data-binary $'------WebKitFormBoundary4RCsZGBu1aaCqyxT\\r\\nContent-Disposition: form-data;name=\"csrf_token\"\\r\\n\\r\\$csrf_token\\r\\n------WebKitFormBoundary4RCsZGBu1aaCqyxT\\r\\nContent-Disposition: form-data; name=\"file\"; filename=\"evidence.png\"\\r\\nContent-Type: image/png\\r\\n\\r\\n\\r\\n------WebKitFormBoundary4RCsZGBu1aaCqyxT--\\r\\n' \\ \n--compressed -c csrf_cookie.txt\n</code></pre>"},{"location":"API-Server/#upload-reports-xml-results-from-tools-using-curl","title":"Upload reports (XML results from tools) using curl","text":"<p>Please check the URLs and use the correct workspace name!</p> <pre><code>curl -s  'http://127.0.0.1:5985/_api/login' \\\n-H 'Origin: http://127.0.0.1:5985/' -H 'Accept-Encoding: gzip, deflate, br' \\\n-H 'Accept-Language: en-US,en;q=0.9' \\\n-H 'Content-Type: application/json' \\\n-H 'Accept: application/json, text/javascript, */*; q=0.01' \\\n-H 'Referer: http://127.0.0.1:5985/' -H 'X-Requested-With: XMLHttpRequest' \\\n-H 'Connection: keep-alive' \\\n--data-binary '{\"email\":\"faraday\",\"password\": \"changeme\"}' \\\n--compressed -c cookie.txt csrf_token=$(curl -s -X GET http://127.0.0.1:5985/_api/session -b cookie.txt -c csrf_cookie.txt | python -c \"import sys, json; print json.load(sys.stdin)['csrf_token']\")\necho $csrf_token\n\necho \";currentUrl=%2Fstatus%2Fws%2Ftest1; currentComponent=status\" &gt;&gt; cookie.txt\ncurl -i -v http://127.0.0.1:5985/_api/v3/ws/test1/upload_report \\\n-H \"Connection: keep-alive\" \\\n-H \"Pragma: no-cache\" \\\n-H \"Cache-Control: no-cache\" \\\n-H \"Accept: application/json, text/plain, */*\" \\\n-H \"Origin: http://127.0.0.1:5985/\" \\\n-H \"User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Safari/537.36\" \\\n-H \"Content-Type: multipart/form-data\" \\\n-H \"Referer: http://127.0.0.1:5985/\" \\\n-H \"Accept-Encoding: gzip, deflate, br\" \\\n-H \"Accept-Language:  en-US,en;q=0.9,es;q=0.8\" \\\n--form \"csrf_token=$csrf_token\" \\\n--form \"file=@/PATH/TO/FILE\" \\\n-b csrf_cookie.txt </code></pre>"},{"location":"API-Token/","title":"API Token","text":"<p>Upon faraday v3.9 we included an API Token for our api. The token for the API will expire when the user changes the password.</p> <p>You can configure token expiration in the <code>[server]</code> section of the configuration with the option <code>api_token_expiration</code> expressed in seconds.</p> <p>Token expires by timeout or when the user changes the password. Each token is associated to the user who requests the token.</p> <p>This is a example request of how to obtain a token</p> <pre><code>curl --user USER:PASSWORD http://localhost:5985/_api/v3/token/\n\"eyJhbGciOiJIUzUxMiIsImlhdCI6MTYxOTAzMTU3OCwiZXhwIjoxNjIxNjIxNzc4fQ.eyJ1c2VyX2lkIjoiZjNjYTUyNjYtOWU2ZS00NzQwLWI0NWItN2Y2M2JkZWMzN2UwIiwidmFsaWRhdGlvbl9jaGVjayI6IiQ1JHJvdW5kcz01MzUwMDAkVDZ3cy9ZMGFHUW10UnEzSSRpRS5OSG1oaDNWR0h4VXIudVpRNGRnaEVVUXFiS09pWGg5VGdrTURtQXIwIn0.gu6AgQ-iIvdnrHBphBfzWopn5B21D_RvTFvltcoMnksAj0eHhfh7dkJW4GfjhZPQd02RBAsb3vvUUCA0fORvfw\"\n</code></pre> <p>Now that you got the auth token you can start using it on every request to the api:</p> <pre><code>curl 'http://localhost:5985/_api/v3/ws/' -H 'Authorization:Token AUTH_TOKEN' -H 'Content-Type: application/json' </code></pre> <pre><code>import requests\nsession = requests.Session()\nuser = 'faraday'\npassword = 'yourpassword'\nsession.auth = (user, password)\nauth = session.post('https://localhost:5985/_api/v3/token')\nresponse = session.get('https://localhost5985/_api/v3/token')\nprint(response.text) ## now the token is in response\n</code></pre>"},{"location":"Activity-Dashboard/","title":"Activity Dashboard","text":"<p>Activity dashboard provides a quick view with graphics and an Activity Feed that will display in an effective view all the changes and stats for the workspace.</p> <p></p> <p>The Central view Vulnerabilities by Severities provides a New Filter that will allow to display confirmed or not closed Vulnerabilities, to show an overall but modifying the scope.</p> <p></p> <p>There are new Latest tags also linked to the vuln view to quickly access to some tag from the activity dashboard.</p> <p></p> <p>Comments will show all the latest comments in a selected Workspace</p> <p></p>"},{"location":"Analysis/","title":"Analysis (V3 Deprecated)","text":"<p>As Faraday allows you to keep all of your pentests in one place, we thought it would be interesting to add the possibility to see your assessments come to life. These charts allow you to find new relations between your data and clarify the state of an assessment. We will also add new charts in the future, and the possibility to customize them as well!</p> <p>As an example, this is how some of the current reports look:</p> <p></p> <ul> <li>Tools findings by severity and targets.</li> <li>Vulnerability severity cluster.</li> <li>Severity timeline.</li> <li>Service vulnerability timeline.</li> <li>Target severity pie charts.</li> <li>OS severity pie charts.</li> <li>Severity by tool boxplot.</li> <li>Total vulnerability correlation with price by each OS.</li> <li>Vulnerability by type chart, ease of resolution and os.</li> <li>Vulnerability by year tree.</li> </ul> <p>      You can also download the charts as PNG or SVG format to include them in your custom reports.</p> <p>Some Example charts:</p> <p></p> <p></p> <p></p>"},{"location":"Architecture/","title":"Technical introduction","text":"<p>Faraday is a web application, the Server is made with python using Flask and the frontend is made with AngularJS (we are moving to ReactJS). It is deployed as a standard WSGI application. Its possible to interact with the Server using Faraday CLI and you can automatize tool usage with Faraday agent.</p> <p></p> <p>The data is persisted within a PostgreSQL database, processed with python libraries as SQLAlchemy and Marshmallow.</p> <p>The server has other main components as the Report Processor, or the Websocket Server. The latter provides information to the CLI and the Agents.</p>"},{"location":"Architecture/#faraday-cli","title":"Faraday CLI","text":"<p>Faraday CLI provides an interface for interacting with a terminal that allows the user to execute commands which results will be loaded inside Faraday Server.  The CLI also allows the user to upload tool reports, create workspaces and configure your instance.</p>"},{"location":"Architecture/#faraday-agent","title":"Faraday Agent","text":"<p>The Faraday Agents allows to automate the upload of different data to the server, such as integration with other applications or services; or execute some tools that the Faraday plugins can process. Moreover, the Agents can be executed on any remote computer and its Executors can be written in any language.</p>"},{"location":"Architecture/#burp-zap-addons","title":"Burp / Zap Addons","text":"<p>Faraday has Burp/Zap Extensions that run inside the third party application. Using Faraday addons provides flexibility to ingress information inside Faraday Server from other applications.</p>"},{"location":"Architecture/#appendix","title":"Appendix","text":""},{"location":"Architecture/#database-schema","title":"Database schema","text":"<p>Faraday manage command can generate the current database schema with:</p> <pre><code>faraday-manage database-schema\n</code></pre> <ul> <li>frontend</li> <li>server</li> <li>faraday_client</li> <li>faraday_agent_dispatcher</li> <li>faraday_agent_parameters_types</li> <li>api_docs</li> <li>faraday_plugins</li> <li>burp_addon</li> <li>zap_addon</li> </ul>"},{"location":"Assets-and-Services-v4/","title":"Assets and Services","text":"<p>You can manage your Assets and their associated Services by accessing the Hosts View in the <code>Manage</code> section through the Faraday Web UI.</p>"},{"location":"Assets-and-Services-v4/#how-to-manage-hosts","title":"How to Manage Hosts","text":""},{"location":"Assets-and-Services-v4/#create-an-asset","title":"Create an Asset","text":"<p>From the Assets View, click Add Asset and fill out the form  The only mandatory field is <code>IP v4 or v6</code></p> <p></p>"},{"location":"Assets-and-Services-v4/#edit-an-asset","title":"Edit an Asset","text":"<p>From the Assets View, click on the Asset IP field </p> <p></p> <p>The services list will be displayed and on the left side you click on Edit button to add or modify details (hostnames, MAC address, owned, OS, description)</p> <p></p>"},{"location":"Assets-and-Services-v4/#delete-an-asset","title":"Delete an Asset","text":"<p>From the Assets View, select one or more assets and click Delete</p> <p></p>"},{"location":"Assets-and-Services-v4/#how-to-manage-services","title":"How to Manage Services","text":"<p>To manage services for an specific asset, click on the asset IP field you would like to make changes</p> <p></p> <p>The services associated to the asset will be displayed, you can also see how many vulnerabilites again each service</p> <p></p>"},{"location":"Assets-and-Services-v4/#create-a-service","title":"Create a Service","text":"<p>From the Services window, click New and fill out the form <code>Name</code>, <code>Port</code> and <code>Protocol</code> fields are mandatory </p> <p></p>"},{"location":"Assets-and-Services-v4/#edit-a-service","title":"Edit a Service","text":"<p>From the Services window, select the service and click Edit</p> <p></p>"},{"location":"Backup-v4/","title":"Backup","text":"<p>Saving backups is always a good choice, whether it is to keep data safe or to share with others.</p>"},{"location":"Backup-v4/#faraday-configuration-and-evidence-backup","title":"Faraday configuration and evidence backup","text":"<p>Faraday server stores configuration, processed reports and saves evidence in the directory <code>/home/faraday/.faraday</code>. Remember to do a backup of this directory of the user running faraday-server.</p>"},{"location":"Backup-v4/#database-backup","title":"Database backup","text":"<p>In order to create a backup for your database, follow these steps:</p> <ol> <li> <p>Stop Faraday Server. <pre><code>sudo service faraday-service stop\n</code></pre></p> </li> <li> <p>In order to backup your Faraday database, execute the PostgreSQL tool: <pre><code>sudo pg_dump faraday &gt; backup_file\n</code></pre></p> </li> <li> <p>Where faraday is the default name of Faraday's database and backup_file is the file where the pg_dump will save your data.</p> </li> <li> <p>Start the Faraday Server <pre><code>sudo service faraday-service start\n</code></pre></p> </li> </ol>"},{"location":"Backup-v4/#database-restore","title":"Database restore","text":"<p>To restore a previously created backup turn again Faraday Server off and execute: <pre><code>sudo service faraday-service stop\nsudo psql faraday &lt; backup_file\nsudo service faraday-service start\n</code></pre></p> <p>Remember To restore the backup you need to have the database empty.</p> <p>For more information about PostgreSQL Backup follow this link</p>"},{"location":"Basic-plugin-development/","title":"Plugin Development","text":"<p>In this guide we are going to learn how to develop a new plugin for Faraday.</p>"},{"location":"Basic-plugin-development/#configure-custom-plugins","title":"Configure Custom Plugins","text":"<p>To add custom plugins in faraday, you first need to run this command:</p> <pre><code>faraday-manage settings -a update reports\n</code></pre>"},{"location":"Basic-plugin-development/#create-plugin-structure","title":"Create Plugin structure","text":"<p>Create the folder <code>new_plugin</code> inside the <code>custom_plugins</code> folder and add the following files inside the <code>new_plugin</code> folder:</p> <p>Plugin Structure:</p> <pre><code>new_plugin/\n    __init__.py # leave this file empty\n    plugin.py\n</code></pre> <p>Warning</p> <p>Please respect both file names: <code>__init__.py</code> and <code>plugin.py</code></p>"},{"location":"Basic-plugin-development/#plugin-code","title":"Plugin code","text":"<p>There are two types of plugins:</p> <ul> <li>File plugins (plugins that process the contents of a file)</li> <li>Command plugins (plugins that process the execution of a command)</li> </ul> <p>A faraday plugin can be either or both of these types. For example the ping plugin only process the execution of the command, but the nmap command supports both the xml generated by nmap or process the execution of nmap.</p> <p>In your <code>plugin.py</code> file you must provide a function called <code>createPlugin</code> for the plugin manager to instantiate the plugin</p> <pre><code>def createPlugin(ignore_info=False, hostname_resolution=True):\n    return YourPluginClass(ignore_info=ignore_info)\n</code></pre>"},{"location":"Basic-plugin-development/#plugin-classes","title":"Plugin classes","text":"<p><code>PluginBase</code> is the base class. </p> <p>For File plugins we provide all this classes. But you can add other by creating a subclass of <code>PluginByExtension</code></p> <ul> <li>PluginBase</li> <li>PluginByExtension<ul> <li>PluginXMLFormat</li> <li>PluginJsonFormat</li> <li>PluginMultiLineJsonFormat</li> <li>PluginCSVFormat</li> <li>PluginZipFormat</li> </ul> </li> </ul> <p>For Command plugins only you must inherit from PluginBase</p> <p>Your plugin class <code>__init__</code> method must define the <code>id</code>, that will be the identifier of your plugin.</p> <p>Here's an example of the Ping tool plugin: <pre><code>class CmdPingPlugin(PluginBase):\n    def __init__(self, *arg, **kwargs):\n        super().__init__(*arg, **kwargs)\nself.id = \"ping\"\nself.name = \"Ping\"\n            self.plugin_version = \"0.0.1\"\n            self.version = \"1.0.0\"\n            self._command_regex = re.compile(r'^(sudo ping|ping|sudo ping6|ping6)\\s+.*?')\n</code></pre></p> <p>Beware that it must be unique, you can list all the plugins identifiers with this command: <code>faraday-plugins list-plugins</code></p>"},{"location":"Basic-plugin-development/#file-plugins","title":"File Plugins","text":"<p>Each of the subclasses for File plugins provide a different way for the plugin to detect if it can process the file</p>"},{"location":"Basic-plugin-development/#pluginbyextension","title":"PluginByExtension:","text":"<p>This class adds the functionality for identify a file by its extension by setting the attribute <code>extension</code>.</p> <p>It can be one extension (<code>\".xml\"</code>) or a list (<code>['.xml', '.xxx']</code>) if your file can have multiple extensions.</p> <p>You never inherit directly from this class in a plugin but from some of its subclasses that are more specific.</p> <pre><code>class ExampleXMLTool(PluginByExtension):\n\n        def __init__(self):\n            super().__init__()\n            self.extension = \".xml\"\n</code></pre>"},{"location":"Basic-plugin-development/#pluginxmlformat","title":"PluginXMLFormat:","text":"<p>Use this class if the plugin generates vulnerabilities from a xml file.</p> <p>If your report has xml format but a different extension (like nessus), remember to define the <code>extension</code> attribute</p> <p>To identify the file set in the <code>identifier_tag</code> attribute the main tag of the xml (ScanGroup in the example), it also can be one tag or a list of tags.</p> <p>You can also set the <code>identifier_tag_attributes</code> attribute, it is a set of attributes that the main tag must have.</p> <p>This is used to be more specific for example if the main tag is too generic and the xml of other plugin has the same one. </p> <p>Example XML <pre><code>&lt;?xml version=\"1.0\"?&gt;\n&lt;ScanGroup ExportedOn=\"2021-11-05T11:18:57.673843\"&gt;\n&lt;Scan&gt;\n&lt;/Scan&gt;\n&lt;/ScanGroup&gt;\n</code></pre></p> <pre><code>from urllib.parse import urlparse\nfrom faraday_plugins.plugins.plugin import PluginXMLFormat\nimport xml.etree.ElementTree as ET\n\nclass ExampleToolXmlParser:\n\n    def __init__(self, xml_output):\n        self.vulns = self.parse_xml(xml_output)\n\n    def parse_xml(self, xml_output):\n        vulns = []\n        tree = ET.fromstring(xml_output)\n        items = tree.iterfind('details/item')\n        for item in items:\n            ip = item.get('ip')\n            os = item.get('os')\n            uri = item.find('uri').text\n            url = urlparse(uri)\n            hostname = [url.netloc]\n            path = url.path\n            if url.scheme == 'https':\n                port = 443\n            else:\n                port = 80\n            issue = item.find('issue')\n            severity = issue.get('severity')\n            issue_text = issue.text\n            vuln = {'ip': ip, 'uri': uri, 'os': os,\n                    'hostname': hostname, 'port': port, 'path': path,\n                    'issue_text': issue_text, 'severity': severity}\n            vulns.append(vuln)\n        return vulns\n\n\nclass ExampleToolPlugin(PluginXMLFormat):\n    def __init__(self, *arg, **kwargs):\n        super().__init__(*arg, **kwargs)\n        self.identifier_tag = \"example_tool\"\n        self.id = \"example_tool\"\n        self.name = \"Name of the tool\"\n        self.plugin_version = \"0.0.1\"\n\n    def parseOutputString(self, output, debug=False):\n        parser = ExampleToolXmlParser(output)\n        for vuln in parser.vulns:\n            h_id = self.createAndAddHost(vuln['ip'], vuln['os'], hostnames=vuln['hostname'])\n            s_id = self.createAndAddServiceToHost(h_id, 'webserver', protocol='tcp', ports=vuln['port'])\n            v_id = self.createAndAddVulnWebToService(h_id, s_id, vuln['issue_text'], severity=vuln['severity'],\n                                                    path=vuln['path'])\n\ndef createPlugin(*args, **kwargs):\n    return ExampleToolPlugin(*args, **kwargs)\n</code></pre>"},{"location":"Basic-plugin-development/#pluginjsonformat","title":"PluginJsonFormat:","text":"<p>Use this class if the plugin generates vulnerabilities from a json file.</p> <p>If yor report has json format but a different extension (not .json), remember to define the <code>extension</code> attribute</p> <p>To identify the file set in the <code>json_keys</code> attribute a set with some identifiers keys of the json object</p> <p>Example JSON <pre><code>{\n\"name\": \"some name\",\n\"hosts\": [\"host1\", \"host2\"],\n\"other_field\": \"some value\"\n}\n</code></pre></p> <pre><code>class ExampleJsonTool(PluginJsonFormat):\n    def __init__(self, ignore_info):\n        super().__init__(ignore_info)\n        self.json_keys = {'name', 'hosts'}\n</code></pre>"},{"location":"Basic-plugin-development/#pluginmultilinejsonformat","title":"PluginMultiLineJsonFormat:","text":"<p>Is the same as <code>PluginJsonFormat</code> but use it when the file has multiple lines and every line is a json.</p> <p>Example JSON <pre><code>{ \"name\": \"some name\", \"hosts\": [\"host1\", \"host2\"],\"other_field\": \"some value\"}\n{ \"name\": \"other name\", \"hosts\": [\"host3\", \"host4\"],\"other_field\": \"other value\"}\n</code></pre></p> <pre><code>class ExampleMultipleJsonTool(PluginMultiLineJsonFormat):\n    def __init__(self, ignore_info):\n        super().__init__(ignore_info)\n        self.json_keys = {'name', 'hosts'}\n</code></pre>"},{"location":"Basic-plugin-development/#plugincsvformat","title":"PluginCSVFormat:","text":"<p>Use this class if the plugin generates vulnerabilities from a csv file.</p> <p>If yor report has csv format but a different extension (not .csv), remember to define the <code>extension</code> attribute</p> <p>To identify the file set in the <code>csv_headers</code> attribute a set with some identifiers headers of the csv object</p> <p>Example CSV <pre><code>name,ip,os\nhost1,10.10.10.10,windows\nhost2,10.10.10.11,linux\n</code></pre></p> <pre><code>class ExampleCSVTool(PluginCSVFormat):\n    def __init__(self, ignore_info):\n        super().__init__(ignore_info)\n        self.json_keys = {'name', 'ip'}\n</code></pre>"},{"location":"Basic-plugin-development/#pluginzipformat","title":"PluginZipFormat:","text":"<p>Use this class if the plugin generates vulnerabilities from a zip file.</p> <p>If yor report has csv format but a different extension (not .zip), remember to define the <code>extension</code> attribute</p> <p>To identify the file set in the <code>files_list</code> attribute a set with some file names inside the zip file.</p> <pre><code>class ExampleJsonTool(PluginZipFormat):\n    def __init__(self, ignore_info):\n        super().__init__(ignore_info)\n        self.files_list = {'file1.txt', 'file2.txt'}\n</code></pre>"},{"location":"Basic-plugin-development/#generating-data","title":"Generating data","text":"<p>The <code>PluginBase</code> class give you all the main methods to create hosts, services and vulnerabilities</p> <p>After you parse the data you will need to create the objects with the information to send to faraday. This are the main methods</p> <pre><code>def createAndAddHost(self, name, os=\"unknown\", hostnames=None, mac=None, scan_template=\"\", site_name=\"\",\n                    site_importance=\"\", risk_score=\"\", fingerprints=\"\", fingerprints_software=\"\"):\n\ndef createAndAddServiceToHost(self, host_id, name, protocol=\"tcp?\", ports=None, status=\"open\", version=\"unknown\",\n                            description=\"\"):\n\ndef createAndAddVulnToHost(self, host_id, name, desc=\"\", ref=None, severity=\"\", resolution=\"\", vulnerable_since=\"\", \n                            scan_id=\"\", pci=\"\", data=\"\", external_id=None, run_date=None):\n\ndef createAndAddVulnToService(self, host_id, service_id, name, desc=\"\", ref=None, severity=\"\", resolution=\"\", \n                            risk=\"\", data=\"\", external_id=None, run_date=None):\n\ndef createAndAddVulnWebToService(self, host_id, service_id, name, desc=\"\", ref=None, severity=\"\", resolution=\"\",\n                                website=\"\", path=\"\", request=\"\", response=\"\", method=\"\", pname=\"\",\n                                params=\"\", query=\"\", category=\"\", data=\"\", external_id=None, run_date=None):\n</code></pre> <p><code>createAndAddHost</code> and <code>createAndAddServiceToHost</code> will give you a host ID and a service ID. You need to send those to the create vulnerabilities methods</p> <p>The main method to parse data and create the vulnerabilities objects is <code>parseOutputString</code>, no mather if is a File or a Command plugin.</p>"},{"location":"Basic-plugin-development/#command-plugins","title":"Command Plugins","text":"<p>For command plugins the detection is done via regex.</p> <p>If the plugin is only for command you inherit from <code>PluginBase</code> if it also will support file detection inherit from the appropriate class for that type of file.</p> <p>In both cases to detect a command you will need to set the <code>_command_regex</code> attribute with the regex to match the command</p> <p>Here's an example of the Ping tool plugin: <pre><code>class CmdPingPlugin(PluginBase):\n    def __init__(self, *arg, **kwargs):\n        super().__init__(*arg, **kwargs)\n            self.id = \"ping\"\n            self.name = \"Ping\"\n            self.plugin_version = \"0.0.1\"\n            self.version = \"1.0.0\"\nself._command_regex = re.compile(r'^(sudo ping|ping|sudo ping6|ping6)\\s+.*?')\ndef parseOutputString(self, output):\n        reg = re.search(r\"PING ([\\w\\.-:]+)( |)\\(([\\w\\.:]+)\\)\", output)\n        if re.search(\"0 received|unknown host\", output) is None and reg is not None:\n            ip_address = reg.group(3)\n            hostname = reg.group(1)\n            self.createAndAddHost(ip_address, hostnames=[hostname])\n        return True\n\n    def _isIPV4(self, ip):\n        if len(ip.split(\".\")) == 4:\n            return True\n        else:\n            return False\n</code></pre></p> <p>In this case the plugin manager will run the command and send the output to the <code>parseOutputString</code> method.</p> <p>But if the tool generate an ouput file instead of send the data to stdout you will need to check that the command has the required parameters to do that.</p> <p>To do that you will need to implement the <code>processCommandString</code> method, by default it will return the command without modifications.</p> <p>To use output files you will need to set 2 attributes in you plugin: <code>_use_temp_file</code> and <code>_temp_file_extension</code></p> <p>If <code>_use_temp_file</code> is set the plugin will create a temp file and assign its path to the attribute <code>self._output_file_path</code> of the plugin.</p> <p>If you need that the temp file has and specific extension use the <code>_temp_file_extension</code> attribute like in the example.</p> <p>If the <code>_use_temp_file</code> attribute is set the plugin will send te content of that file to <code>parseOutputString()</code>instead of the output of the command.</p> <p>Here is and extract of the nmap plugin to see how <code>processCommandString</code> will modify the original command and return a new command with the required parameters.</p> <pre><code>class NmapPlugin(PluginXMLFormat):\n\"\"\"\n    Example plugin to parse nmap output.\n    \"\"\"\n\n    def __init__(self, *arg, **kwargs):\n        super().__init__(*arg, **kwargs)\n        self.identifier_tag = \"nmaprun\"\n        self.id = \"Nmap\"\n        self.name = \"Nmap XML Output Plugin\"\n        self.plugin_version = \"0.0.3\"\n        self.version = \"6.40\"\n        self.framework_version = \"1.0.0\"\n        self.options = None\n        self._current_output = None\n        self._command_regex = re.compile(r'^(sudo nmap|nmap|\\.\\/nmap)\\s+.*?')\n        self._use_temp_file = True\n        self._temp_file_extension = \"xml\"\n        self.xml_arg_re = re.compile(r\"^.*(-oX\\s*[^\\s]+).*$\")\n        self.addSetting(\"Scan Technique\", str, \"-sS\")\n\n    def parseOutputString(self, output):\n        ...\n\n    def processCommandString(self, username, current_path, command_string):\n\"\"\"\n        Adds the -oX parameter to get xml output to the command string that the\n        user has set.\n        \"\"\"\n        super().processCommandString(username, current_path, command_string)\n        arg_match = self.xml_arg_re.match(command_string)\n        if arg_match is None:\n            return re.sub(r\"(^.*?nmap)\",\n                          r\"\\1 -oX %s\" % self._output_file_path,\n                          command_string)\n        else:\n            return re.sub(arg_match.group(1),\n                          r\"-oX %s\" % self._output_file_path,\n                          command_string)\n</code></pre>"},{"location":"Basic-plugin-development/#full-example","title":"Full Example","text":"File Plugin from XML <p>This is an example of a Faraday Plugin that process a xml report.</p> <p>In this example we will create a plugin to analyze this XML provided by the output of a tool.</p> <p>example.xml <pre><code> &lt;?xml version=\"1.0\" ?&gt;\n&lt;!DOCTYPE example_tool&gt;\n&lt;example_tool scanstart=\"Thu Nov  9 15:59:13 2017\"&gt;\n&lt;details&gt;\n&lt;item id=\"999979\" ip=\"10.23.49.232\" os=\"linux\"&gt;\n&lt;uri&gt;http://test.com/example.php&lt;/uri&gt;\n&lt;issue severity=\"low\"&gt;Some vuln text&lt;/issue&gt;\n&lt;/item&gt;\n&lt;item id=\"39023023\" ip=\"10.232.62.20\" os=\"linux\"&gt;\n&lt;uri&gt;http://test.com/login.php&lt;/uri&gt;\n&lt;issue severity=\"low\"&gt;Some other text&lt;/issue&gt;\n&lt;/item&gt;\n&lt;item id=\"8348343\" ip=\"10.12.37.24\" os=\"linux\"&gt;\n&lt;uri&gt;http://test.com/example.php&lt;/uri&gt;\n&lt;issue severity=\"low\"&gt;Yet another vuln text&lt;/issue&gt;\n&lt;/item&gt;\n&lt;statistics elapsed=\"402\" itemsfound=\"3\" itemstested=\"10\" /&gt;\n&lt;/details&gt;\n&lt;/example_tool&gt;\n</code></pre></p> <p>plugin.py</p> <pre><code>from urllib.parse import urlparse\nfrom faraday_plugins.plugins.plugin import PluginXMLFormat\nimport xml.etree.ElementTree as ET\n\nclass ExampleToolXmlParser:\n\n    def __init__(self, xml_output):\n        self.vulns = self.parse_xml(xml_output)\n\n    def parse_xml(self, xml_output):\n        vulns = []\n        tree = ET.fromstring(xml_output)\n        items = tree.iterfind('details/item')\n        for item in items:\n            ip = item.get('ip')\n            os = item.get('os')\n            uri = item.find('uri').text\n            url = urlparse(uri)\n            hostname = [url.netloc]\n            path = url.path\n            if url.scheme == 'https':\n                port = 443\n            else:\n                port = 80\n            issue = item.find('issue')\n            severity = issue.get('severity')\n            issue_text = issue.text\n            vuln = {'ip': ip, 'uri': uri, 'os': os,\n                    'hostname': hostname, 'port': port, 'path': path,\n                    'issue_text': issue_text, 'severity': severity}\n            vulns.append(vuln)\n        return vulns\n\n\nclass ExampleToolPlugin(PluginXMLFormat):\n    def __init__(self):\n        super().__init__()\n        self.identifier_tag = \"example_tool\"\n        self.id = \"example_tool\"\n        self.name = \"Name of the tool\"\n        self.plugin_version = \"0.0.1\"\n\n    def parseOutputString(self, output, debug=False):\n        parser = ExampleToolXmlParser(output)\n        for vuln in parser.vulns:\n            h_id = self.createAndAddHost(vuln['ip'], vuln['os'], hostnames=vuln['hostname'])\n            s_id = self.createAndAddServiceToHost(h_id, 'webserver', protocol='tcp', ports=vuln['port'])\n            v_id = self.createAndAddVulnWebToService(h_id, s_id, vuln['issue_text'], severity=vuln['severity'],\n                                                    path=vuln['path'])\n\ndef createPlugin(ignore_info=False, hostname_resolution=True):\n    return ExampleToolXmlParser(ignore_info=ignore_info)\n</code></pre>"},{"location":"Basic-plugin-development/#test-and-debug","title":"Test and Debug","text":"<p>You can test your plugin by enabling the custom_plugins_folder setting, and try it with faraday.</p> <p>You can also test your plugin from the command line.</p>"},{"location":"Basic-plugin-development/#test-plugins","title":"Test Plugins","text":"<p>List all available plugins</p> <p>Verify that the plugins is loaded by the plugin manager</p> <pre><code>faraday-plugins list-plugins\n\nAvailable Plugins:\n...\n...\n...\nexample_tool - Name of the tool\nLoaded Plugins: 84\n</code></pre> <p>Test plugin report detection</p> <p>Verify that your file is detected by your plugin</p> <pre><code>faraday-plugins detect-report /path/to/report.xml\n\nPlugin: example_tool\n</code></pre> <p>Test plugin process report</p> <p>Verify that your plugin parses the file ok and generate the json structure that will be loaded into faraday</p> <pre><code>faraday-plugins process-report /path/to/report.xml\n\n\n{\"hosts\": [{\"ip\": \"10.23.49.232\", \"os\": \"linux\", \"hostnames\": [\"test.com\"], \"description\": \"\", \"mac\": null, \"credentials\": [], \"services\": [{\"name\": \"webserver\", \"protocol\": \"tcp\", \"port\": 80, \"status\": \"open\", \"version\": \"unknown\", \"description\": \"\", \"credentials\": [], \"vulnerabilities\": [{\"name\": \"Some vuln text\", \"desc\": \"\", \"severity\": \"low\", \"refs\": [], \"external_id\": null, \"type\": \"VulnerabilityWeb\", \"resolution\": \"\", \"data\": \"\", \"website\": \"\", \"path\": \"/example.php\", \"request\": \"\", \"response\": \"\", \"method\": \"\", \"pname\": \"\", \"params\": \"\", \"query\": \"\", \"category\": \"\"}]}], \"vulnerabilities\": [], \"scan_template\": \"\", \"site_name\": \"\", \"site_importance\": \"\", \"risk_score\": \"\", \"fingerprints\": \"\", \"fingerprints_software\": \"\"}, {\"ip\": \"10.232.62.20\", \"os\": \"linux\", \"hostnames\": [\"test.com\"], \"description\": \"\", \"mac\": null, \"credentials\": [], \"services\": [{\"name\": \"webserver\", \"protocol\": \"tcp\", \"port\": 80, \"status\": \"open\", \"version\": \"unknown\", \"description\": \"\", \"credentials\": [], \"vulnerabilities\": [{\"name\": \"Some other text\", \"desc\": \"\", \"severity\": \"low\", \"refs\": [], \"external_id\": null, \"type\": \"VulnerabilityWeb\", \"resolution\": \"\", \"data\": \"\", \"website\": \"\", \"path\": \"/login.php\", \"request\": \"\", \"response\": \"\", \"method\": \"\", \"pname\": \"\", \"params\": \"\", \"query\": \"\", \"category\": \"\"}]}], \"vulnerabilities\": [], \"scan_template\": \"\", \"site_name\": \"\", \"site_importance\": \"\", \"risk_score\": \"\", \"fingerprints\": \"\", \"fingerprints_software\": \"\"}, {\"ip\": \"10.12.37.24\", \"os\": \"linux\", \"hostnames\": [\"test.com\"], \"description\": \"\", \"mac\": null, \"credentials\": [], \"services\": [{\"name\": \"webserver\", \"protocol\": \"tcp\", \"port\": 80, \"status\": \"open\", \"version\": \"unknown\", \"description\": \"\", \"credentials\": [], \"vulnerabilities\": [{\"name\": \"Yet another vuln text\", \"desc\": \"\", \"severity\": \"low\", \"refs\": [], \"external_id\": null, \"type\": \"VulnerabilityWeb\", \"resolution\": \"\", \"data\": \"\", \"website\": \"\", \"path\": \"/example.php\", \"request\": \"\", \"response\": \"\", \"method\": \"\", \"pname\": \"\", \"params\": \"\", \"query\": \"\", \"category\": \"\"}]}], \"vulnerabilities\": [], \"scan_template\": \"\", \"site_name\": \"\", \"site_importance\": \"\", \"risk_score\": \"\", \"fingerprints\": \"\", \"fingerprints_software\": \"\"}], \"command\": {\"tool\": \"example_tool\", \"command\": \"example_tool\", \"params\": \"/path/to/report.xml\", \"user\": \"faraday\", \"hostname\": \"\", \"start_date\": \"2020-04-01T18:43:34.552623\", \"duration\": 2650, \"import_source\": \"report\"}}\n</code></pre> <p>You can optionally specify the plugin id to not do the detection step and force to process it with the specific plugin</p> <pre><code>faraday-plugins process-report --plugin_id YourPluginId /path/to/report.xml\n\n\n{\"hosts\": [{\"ip\": \"10.23.49.232\", \"os\": \"linux\", \"hostnames\": [\"test.com\"], \"description\": \"\", \"mac\": null, \"credentials\": [], \"services\": [{\"name\": \"webserver\", \"protocol\": \"tcp\", \"port\": 80, \"status\": \"open\", \"version\": \"unknown\", \"description\": \"\", \"credentials\": [], \"vulnerabilities\": [{\"name\": \"Some vuln text\", \"desc\": \"\", \"severity\": \"low\", \"refs\": [], \"external_id\": null, \"type\": \"VulnerabilityWeb\", \"resolution\": \"\", \"data\": \"\", \"website\": \"\", \"path\": \"/example.php\", \"request\": \"\", \"response\": \"\", \"method\": \"\", \"pname\": \"\", \"params\": \"\", \"query\": \"\", \"category\": \"\"}]}], \"vulnerabilities\": [], \"scan_template\": \"\", \"site_name\": \"\", \"site_importance\": \"\", \"risk_score\": \"\", \"fingerprints\": \"\", \"fingerprints_software\": \"\"}, {\"ip\": \"10.232.62.20\", \"os\": \"linux\", \"hostnames\": [\"test.com\"], \"description\": \"\", \"mac\": null, \"credentials\": [], \"services\": [{\"name\": \"webserver\", \"protocol\": \"tcp\", \"port\": 80, \"status\": \"open\", \"version\": \"unknown\", \"description\": \"\", \"credentials\": [], \"vulnerabilities\": [{\"name\": \"Some other text\", \"desc\": \"\", \"severity\": \"low\", \"refs\": [], \"external_id\": null, \"type\": \"VulnerabilityWeb\", \"resolution\": \"\", \"data\": \"\", \"website\": \"\", \"path\": \"/login.php\", \"request\": \"\", \"response\": \"\", \"method\": \"\", \"pname\": \"\", \"params\": \"\", \"query\": \"\", \"category\": \"\"}]}], \"vulnerabilities\": [], \"scan_template\": \"\", \"site_name\": \"\", \"site_importance\": \"\", \"risk_score\": \"\", \"fingerprints\": \"\", \"fingerprints_software\": \"\"}, {\"ip\": \"10.12.37.24\", \"os\": \"linux\", \"hostnames\": [\"test.com\"], \"description\": \"\", \"mac\": null, \"credentials\": [], \"services\": [{\"name\": \"webserver\", \"protocol\": \"tcp\", \"port\": 80, \"status\": \"open\", \"version\": \"unknown\", \"description\": \"\", \"credentials\": [], \"vulnerabilities\": [{\"name\": \"Yet another vuln text\", \"desc\": \"\", \"severity\": \"low\", \"refs\": [], \"external_id\": null, \"type\": \"VulnerabilityWeb\", \"resolution\": \"\", \"data\": \"\", \"website\": \"\", \"path\": \"/example.php\", \"request\": \"\", \"response\": \"\", \"method\": \"\", \"pname\": \"\", \"params\": \"\", \"query\": \"\", \"category\": \"\"}]}], \"vulnerabilities\": [], \"scan_template\": \"\", \"site_name\": \"\", \"site_importance\": \"\", \"risk_score\": \"\", \"fingerprints\": \"\", \"fingerprints_software\": \"\"}], \"command\": {\"tool\": \"example_tool\", \"command\": \"example_tool\", \"params\": \"/path/to/report.xml\", \"user\": \"faraday\", \"hostname\": \"\", \"start_date\": \"2020-04-01T18:43:34.552623\", \"duration\": 2650, \"import_source\": \"report\"}}\n</code></pre> <p>If you do not have faraday-server installed or don't have the custom_plugins_folder setting, you can use the <code>--custom_plugins_folder</code> parameter with any if the commands (list, detect and process)</p> <p>Example:</p> <pre><code>faraday-plugins list-plugins --custom-plugins-folder /home/user/.faraday/plugins/\n</code></pre>"},{"location":"Basic-plugin-development/#logging","title":"Logging","text":"<p>In the <code>PluginBase</code> there is a logger defined in <code>self.logger</code> that you can use.</p> <p>If you need to debug for plugins with the command line set this variable:</p> <pre><code>export PLUGIN_DEBUG=1\nfaraday-plugins process-report appscan /path/to/report.xml\n2019-11-15 20:37:03,355 - faraday.faraday_plugins.plugins.manager - INFO [manager.py:113 - _load_plugins()]  Loading Native Plugins...\n2019-11-15 20:37:03,465 - faraday.faraday_plugins.plugins.manager - DEBUG [manager.py:123 - _load_plugins()]  Load Plugin [acunetix]\n2019-11-15 20:37:03,495 - faraday.faraday_plugins.plugins.manager - DEBUG [manager.py:123 - _load_plugins()]  Load Plugin [amap]\n2019-11-15 20:37:03,549 - faraday.faraday_plugins.plugins.manager - DEBUG [manager.py:123 - _load_plugins()]  Load Plugin [appscan]\n2019-11-15 20:37:03,580 - faraday.faraday_plugins.plugins.manager - DEBUG [manager.py:123 - _load_plugins()]  Load Plugin [arachni]\n2019-11-15 20:37:03,613 - faraday.faraday_plugins.plugins.manager - DEBUG [manager.py:123 - _load_plugins()]  Load Plugin [arp_scan]\n2019-11-15 20:37:03,684 - faraday.faraday_plugins.plugins.manager - DEBUG [manager.py:123 - _load_plugins()]  Load Plugin [beef]\n2019-11-15 20:37:03,714 - faraday.faraday_plugins.plugins.manager - DEBUG [manager.py:123 - _load_plugins()]  Load Plugin [brutexss]\n2019-11-15 20:37:03,917 - faraday.faraday_plugins.plugins.manager - DEBUG [manager.py:123 - _load_plugins()]  Load Plugin [burp]\n2019-11-15 20:37:03,940 - faraday.faraday_plugins.plugins.manager - DEBUG [manager.py:123 - _load_plugins()]  Load Plugin [dig]\n...\n</code></pre>"},{"location":"Burp-proxy-extender/","title":"Burp","text":"<p>This plugin is a script developed in Java as a extender to the Burp Proxy API (Pro/Community).</p>"},{"location":"Burp-proxy-extender/#installation","title":"Installation","text":""},{"location":"Burp-proxy-extender/#from-the-app-store","title":"From the App Store","text":"<p>You can install the Burp extension from the Burp App Store</p> <p></p>"},{"location":"Burp-proxy-extender/#from-file","title":"From file","text":"<p>Download the jar from this link</p> <p>Once you have it, follow these steps:</p> <ul> <li> <p>Go to Extender-&gt;Extensions and click in the Add button.</p> </li> <li> <p>In the Extension Details section, the extension type should be Java, and select the file. </p> </li> </ul> <p></p> <ul> <li> <p>Click Next, and if everything went well, you should see no errors and you can close the window.</p> </li> <li> <p>Now, make sure the extension is loaded in the Extensions tab.</p> </li> </ul> <p></p>"},{"location":"Burp-proxy-extender/#extension-configuration","title":"Extension configuration","text":"<p>Once the Faraday extension is loaded into your Burp, you will see a new tab called \"Faraday\".</p> <p></p> <p>Here, you can login to Faraday and you can edit the extension's settings:.</p>"},{"location":"Burp-proxy-extender/#login-to-faraday","title":"Login to Faraday","text":"<p>In order to connect the Faraday's Burp extension to Faraday, follow these steps:</p> <p>1) Set your Faraday Server URL. This should point to the same URL that you use when you are connecting to Faraday Server, e.g: http://127.0.0.1:5985</p> <p>2) Connect Burp to Faraday by clicking on the Connect button.</p> <p></p> <p>3) Once you are connected, type your Faraday's credentials: username, password and 2FA Token (if it is the case).</p> <p>4) Login into Faraday by click on the Login button. If everything goes well, Burp should pop up a Login successful! modal. </p> <p></p> <p>5) Once you are logged in, you can edit the extension's settings.</p>"},{"location":"Burp-proxy-extender/#extension-settings","title":"Extension Settings","text":"<p>From here, you can:</p> <p>1) Choose the workspace where you want to work on.</p> <p>2) Choose whether the vulnerabilities should be imported automatically or not (it's disabled by default).</p> <p>3) Import the vulnerabilities you've found so far.</p> <p>4) Check if you want to use only Burp scope.</p>"},{"location":"Burp-proxy-extender/#send-to-faraday","title":"Send to Faraday","text":"<p>Once you have everything setup, you can send the issues or requests to Faraday.</p> <p></p> <p>!!! warning \"REMEMBER: If the request is missing the response, the information can't be sent to faraday! REMEMBER 2: Vulnerabilities will only work with commercial versions of burp\"</p>"},{"location":"Burp-proxy-extender/#other-settings","title":"Other Settings","text":"<p>From here, you can Restore Settings to default.</p>"},{"location":"CSV-Exporter/","title":"CSV Exporter","text":"<p>(V3 Deprecated)</p> <p>Faraday supports CSV Exporting from its WEB UI.</p> <p>In order to download a CSV file containing all your findings, go to the Status Report page in our WEB UI by clicking on 'Manage' and then click on the download link:</p> <p> </p> <p>Keep in mind that if you filter findings or hide columns in the Status Report, those changes will impact the output of the CSV Export.</p> <p>For example, if we use the search box to filter out vulnerabilities with info severity and leave only a few columns the resulting CSV will contain the same information as the list, as you can see in the images below.</p> <p> </p> <p> </p>"},{"location":"CSV-Importer/","title":"CSV Importer","text":""},{"location":"CSV-Importer/#intro","title":"Intro","text":"<p>The idea is to import an CSV file into Faraday's server uploading all the information into one of your workspaces.</p>"},{"location":"CSV-Importer/#index","title":"Index","text":"<ul> <li>CSV Format</li> <li>Command for Community version</li> <li>Command for Commercial versions</li> <li>Sample File</li> </ul>"},{"location":"CSV-Importer/#csv-format","title":"CSV Format","text":"<p>The CSV file should have an special kind of formatting, so take in consideration the following rules:</p> <p>1) The names of columns are: * Host fields:     * host_name     * host_description     * host_owned</p> <ul> <li> <p>Services fields:</p> <ul> <li>service_name</li> <li>service_description</li> <li>service_owned  #boolean</li> <li>service_port</li> <li>service_protocol</li> <li>service_version</li> <li>service_status</li> </ul> </li> <li> <p>Vulnerability fields:</p> <ul> <li>vulnerability_name</li> <li>vulnerability_desc</li> <li>vulnerability_data</li> <li>vulnerability_severity</li> <li>vulnerability_refs</li> <li>vulnerability_confirmed #boolean</li> <li>vulnerability_resolution</li> <li>vulnerability_status</li> <li>vulnerability_policyviolations</li> </ul> </li> <li> <p>Vulnerability web fields:</p> <ul> <li>vulnerability_web_name</li> <li>vulnerability_web_desc</li> <li>vulnerability_web_data</li> <li>vulnerability_web_severity</li> <li>vulnerability_web_refs</li> <li>vulnerability_web_confirmed</li> <li>vulnerability_web_status</li> <li>vulnerability_web_website</li> <li>vulnerability_web_request</li> <li>vulnerability_web_response</li> <li>vulnerability_web_method</li> <li>vulnerability_web_pname</li> <li>vulnerability_web_params</li> <li>vulnerability_web_query</li> <li>vulnerability_web_resolution</li> <li>vulnerability_web_policyviolations</li> <li>vulnerability_web_path</li> <li>vulnerability_web_tagstags</li> </ul> </li> </ul> <p>Note: those in bold are mandatory fields.</p> <p>2) The following fields have a special format that you need to follow:</p> <ul> <li> <p>Boolean (true or false):</p> <ul> <li>host_owned</li> <li>service_owned</li> <li>vulnerability_confirmed</li> <li>vulnerability_web_confirmed</li> </ul> </li> <li> <p>List (Values separated by comma):</p> <ul> <li>service_port</li> <li>vulnerability_refs</li> <li>vulnerability_policyviolations</li> <li>vulnerability_web_refs</li> <li>vulnerability_web_policyviolations</li> <li>vulnerability_web_tags</li> </ul> </li> </ul> <p>3) Possible values for vulnerability and vulnerability web SEVERITY: * info * low * med * high * critical</p> <p>4) Possible values for vulnerability and vulnerability web STATUS: * opened * closed * re-opened * risk-accepted</p> <p>5) Possible values for service STATUS: * open * filtered * close</p> <p>Warnings: keep in mind the following concepts before importing an CSV file:</p> <p>1) Hosts must ALWAYS have an interface associated.</p> <p>2) Vulnerabilities must always have either a host OR a service associated to them.</p> <p>3) Web Vulnerabilities must always be associated with a host AND a service.</p> <p>4) Unicode chars not supported.</p> <p>5) Anything not numeric entered on service_port will be ignored</p>"},{"location":"CSV-Importer/#command-for-commercial-versions","title":"Command for Commercial versions","text":"<pre><code>faraday-cli report tool import_csv -u http://127.0.0.1:5985/ --csv /path/to/file/file.csv -w WORSKPACE_NAME --username USERNAME --password PASSWORD\n</code></pre> <p>Options:  * --csv: the name and path of your CSV.  * -w: Faraday's workspace where all the information will go to.  * --username: username of an Admin User.  * --password: password of an Admin User.</p>"},{"location":"CSV-Importer/#sample-file","title":"Sample file","text":"<p>Here you have an example file:</p> <p>file.csv</p>"},{"location":"Comments/","title":"Comments &amp; Notifications","text":"<p>Now, you can enrich Vuln data by leaving Comments and Notes, while mentioning other users to notify them about important events in real time. Also, you are now able to configure alerts to follow up on each project, having a more efficient view of their status and updates.</p> <p>The idea behind this is promoting better ways to get involved with your co-workers by improving communication and daily results.</p> <p>Usage Go into the vulnerability preview (by clicking in the name of the vulnerability). Then click on Comments tab:</p>"},{"location":"Contact-us/","title":"Contact Us","text":"<p>More info about Faraday at faradaysec.com</p>"},{"location":"Contact-us/#frequently-asked-questions","title":"Frequently Asked Questions","text":"<p>Visit our [[FAQ]] to know the answer to common questions</p>"},{"location":"Contact-us/#troubleshooting","title":"Troubleshooting","text":"<p>Having problems with Faraday? That's weird! Try our [Troubleshooting] guide.</p>"},{"location":"Contact-us/#issue-tracker","title":"Issue tracker","text":"<p>Not satisfied? Having troubles? Want to cheer us? Open a ticket!</p>"},{"location":"Contact-us/#our-community","title":"Our community","text":"<p>You can reach us and find other Faraday users on: Open an Issue</p>"},{"location":"Contact-us/#twitter","title":"Twitter","text":"<p>http://twitter.com/faradaysec</p>"},{"location":"Custom-Fields-v4/","title":"Custom Attributes","text":"<p>Custom Attributes allow you to extend the vulnerability's model with more fields. Custom attributes type can be int, string, choice, markdown and list.</p> <p>If you want to learn more about the usage of Custom Attributes through Faraday's API, follow this link.</p>"},{"location":"Custom-Fields-v4/#how-to-create-custom-attributes","title":"How to create Custom Attributes","text":""},{"location":"Custom-Fields-v4/#from-web-ui","title":"From Web UI","text":"<p>You can create/edit/delete a Custom Attribute clicking in the <code>Custom Attributes</code> button from the <code>Column Order</code> icon.</p> <p></p> <p>Let's create one as an example:</p> <ul> <li> <p>You must fill the following fields in order to create a Custom Attribute:</p> <ul> <li>name: the display name that you will see on the vulnerability form.</li> <li>Type: data type of the field.</li> </ul> <p></p> </li> <li> <p>After successfully creating the Custom Attribute, you will see it on the vulnerability form:</p> </li> </ul> <p></p>"},{"location":"Custom-Fields-v4/#from-terminal","title":"From Terminal","text":"<p>Step 1: Add custom attribute</p> <pre><code>$ faraday-manage add-custom-field \n</code></pre> <p>Step 2: After the command execution, you will be prompted by a wizard where you must input the following information:</p> <ul> <li>Field name: the name of the field.</li> <li>Display name: the display name that you will see on the vulnerability form.</li> <li>Type: data type of the field, it can be: int, string, choice, markdown and list.</li> <li>Order: the order shown on the vulnerability form.</li> </ul> <p>The following example will add the CVSS field to the vulnerability model:</p> <pre><code>This wizard will guide you to ADD custom attributes to the vulneraiblity model.\nField name: cvss\nDisplay name: CVSS\nField type (int, str, list) (int, str, list): str\nField order index: 0\nNew CustomField will be added to vulnerability -&gt; Order 0 (cvss,CVSS,str) &lt;-, confirm to continue (yes/no): yes\n</code></pre>"},{"location":"Dashboard-v4/","title":"Dashboard","text":"<p>Faraday's Dashboard contains a summary of all data within a Workspace. Each box is a visualization for an specific aspect of the collected information.</p> <p>When you create a new Workspace an empty dashboard will look as below </p> <p></p> <p>Once you start adding data by importing scans, running tools, etc, it will be like this</p> <p></p> <p>Let's see in more detail the functionality and information displayed in the dashboard</p>"},{"location":"Dashboard-v4/#switching-workspaces","title":"Switching Workspaces","text":"<p>Top left corner next to F you can see the current Workspace, click on it and a drop-list will be displayed to switch between Workspace quickly</p> <p></p>"},{"location":"Dashboard-v4/#progress-and-vulnerabilities-distributioncounters","title":"Progress and Vulnerabilities Distribution/Counters","text":"<p>Percentage of time spend using Workspace settings (start/end date) and pie charts for vulnerabilies by <code>Severity</code> and <code>Status</code> also total counters of vulnerabilities by <code>Severity</code> included</p> <p></p>"},{"location":"Dashboard-v4/#activity-feed","title":"Activity Feed","text":"<p>Users and actions with results performed on the workspace for quickly seeing the progress been made on the workspace</p> <p></p>"},{"location":"Dashboard-v4/#last-vulnerabilities","title":"Last Vulnerabilities","text":"<p>Quick list of latest vulnerabilities added into the workspace</p> <p></p>"},{"location":"Dashboard-v4/#service-report","title":"Service Report","text":"<p>A counter view of <code>Services</code> found in the workspace</p> <p></p>"},{"location":"Dashboard-v4/#workspace-summary","title":"Workspace Summary","text":"<p>An overall summary of Hosts, Services and Vulnerabilties found so far</p> <p></p>"},{"location":"Dashboard-v4/#hosts","title":"Hosts","text":"<p>List of <code>Assets</code> and <code>Vulnerabilities</code> currently in the workspace.</p> <p></p>"},{"location":"Dashboard-v4/#tags","title":"Tags","text":"<p>View of the recent used tags.</p> <p></p>"},{"location":"Development-setup/","title":"Development setup","text":""},{"location":"Development-setup/#to-use-faraday-follow-the-new-faraday-install-guide-this-is-for-development","title":"To use faraday follow the new Faraday Install Guide. This is for development","text":""},{"location":"Development-setup/#index","title":"Index","text":"<ul> <li>Server</li> <li>Client</li> </ul>"},{"location":"Development-setup/#topics","title":"Topics","text":""},{"location":"Development-setup/#faraday-server","title":"Faraday Server","text":"<p>Faraday Server is the interface between PostgreSQL and Faraday Client and WebUI. The server's responsibility is to transmit information between the client or WebUI and PostgreSQL, and make sure that they are kept in sync. The Web UI client, which allows you to handle enormous workspaces from your favorite web browser.</p> <p>Important: You should keep in mind that is recommended to install Faraday server on the same instance as PostgreSQL.</p>"},{"location":"Development-setup/#downloading","title":"Downloading","text":"<p>Clone the Faraday Git Project repository and checkout the dev branch:</p> <pre><code>$ git clone https://github.com/infobyte/faraday.git faraday-dev\n$ cd faraday-dev\n$ pip install .\n</code></pre> <p>After doing so, make sure to install system dependencies, install Python dependencies and configure the Server.</p>"},{"location":"Development-setup/#requirements","title":"Requirements","text":"<p>Faraday Server is built with minimum requirements. This is by design, so you can install it even on the most bare-bones machine you can possibly imagine.</p> <p>The Python requirements for the server are stored in the requirements.</p>"},{"location":"Development-setup/#installing-system-dependencies","title":"Installing system dependencies","text":""},{"location":"Development-setup/#debian-based-distributions-debian-ubuntu-backtrack-etc","title":"Debian based distributions (Debian, Ubuntu, Backtrack, etc)","text":"<p>Or if you wanna do it manually you can run the following command to install the required dependencies on any Debian based distribution.</p> <p><pre><code>$ sudo apt update\n\n$ sudo apt install build-essential ipython python3-setuptools \\\n                python3-pip python3-dev libssl-dev \\\n                libffi-dev pkg-config libxml2-dev \\\n                libxslt1-dev libfreetype6-dev libpng-dev postgresql libpq-dev\n</code></pre> Warning: If you already have postgresql installed, please corroborate the version is upper than 9.4.</p>"},{"location":"Development-setup/#kali-linux","title":"Kali Linux","text":"<p>If you are running Kali, please run the following commands:</p> <pre><code>$ sudo apt-get update\n$ sudo apt-get install build-essential ipython python-setuptools \\\n                python-pip python-dev libssl-dev \\\n                libffi-dev pkg-config libxml2-dev \\\n                libxslt1-dev libfreetype6-dev libpng-dev\n</code></pre>"},{"location":"Development-setup/#others","title":"Others","text":"<p>Please consult with your distribution documentation to install the dependencies listed above.</p>"},{"location":"Development-setup/#creating-a-virtualenv","title":"Creating a virtualenv","text":"<p>Before installing Faraday, we need to create a virtualenv so Faraday runs in it. In order to install and create a virtualenv, run the following commands:</p> <pre><code>$ pip install virtualenv\n$ virtualenv -p python3 faraday_venv\n$ source faraday_venv/bin/activate\n</code></pre> <p>For more information about virtualenv, please follow this link.</p> <p></p>"},{"location":"Development-setup/#installing-python-3-dependencies","title":"Installing Python 3 dependencies","text":"<p>Once you have the required system dependencies, you just have to install the Python modules needed to run the server using:</p> <pre><code>$ python setup.py develop\n</code></pre> <p></p>"},{"location":"Development-setup/#initializing-postgresql","title":"Initializing PostgreSQL","text":"<p>In order to initialize PostgreSQL database, run the following command:</p> <pre><code>faraday-manage initdb\n</code></pre> <p>IMPORTANT: The command <code>initdb</code> will create a random password for the admin user, remeber to COPY THE PASSWORD. You can use the command <code>faraday-manage change-password</code> if you want to change it.</p> <p>Note: You sould have the PostgreSQL service started. To do it run <code>systemctl start postgresql</code> or the equivalant command for your GNU/Linux distro.</p> <p>Note: if at the moment you run this command, it throws an error, be sure you have sudo installed. Once you have installed it, run the command again.</p>"},{"location":"Development-setup/#manual-postgresql-configuration","title":"Manual PostgreSQL configuration","text":"<p>If you need an advance configuration of the postgres database, like having a custom database name or run it in a separate host, the <code>faraday-manage initdb</code> command probably won't be enough for you, so you should configure it manually by doing something like this:</p> <pre><code>sudo -u postgres psql -c \"CREATE ROLE faraday_postgresql WITH LOGIN PASSWORD 'YOURPASSWORD'\"\nsudo -u postgres createdb -O faraday_postgresql faraday\n</code></pre> <p>Then, edit the <code>~/.faraday/config/server.ini</code> by adding the connection string to the database:</p> <pre><code>[database]\nconnection_string = postgresql+psycopg2://faraday_postgresql:YOURPASSWORD@localhost/faraday\n</code></pre> <p>Then you should run <code>faraday-manage create-tables</code> to create all the required tables to make faraday work, and <code>faraday-manage createsuperuser</code> to create an admin user.</p>"},{"location":"Development-setup/#manually-importing-from-couchdb","title":"Manually importing from CouchDB","text":"<p>If you were using Faraday 2.7.2 and setup the database manually instead of using the <code>faraday-manage initdb</code>, you should run the following command to import the data from CouchDB:</p> <pre><code>$ python manage.py import-from-couchdb\n</code></pre>"},{"location":"Development-setup/#updating-nginx-configuration","title":"Updating Nginx configuration","text":"<p>Note: This only applies if you are using Nginx and https.</p> <p>Please, make sure you have this settings on your Nginx config:</p> <pre><code>proxy_pass http://localhost:5985/;\nproxy_redirect http:// $scheme://;\n</code></pre>"},{"location":"Development-setup/#configuration","title":"Configuration","text":"<p>By default, Faraday server will listen on port 5985. You can edit this on <code>~/.faraday/config/server.ini</code>.</p>"},{"location":"Development-setup/#exposing-the-server","title":"Exposing the Server","text":"<p>If you wish to access the Server form a different box you need to expose the service. In order to do so, edit the server configuration file and set the <code>bind_address</code> param to <code>0.0.0.0</code>.</p> <p>Edit the file located in <code>~/.faraday/config/server.ini</code> and under the section <code>[faraday-server]</code> set the param, it should look something like this:</p> <pre><code>[faraday-server]\n...\nbind_address=0.0.0.0\n</code></pre> <p>Then restart the server if you had it running and reload your browser in case you were already trying to access the Web UI form a different IP.</p> <p>faraday-server also allow to use --bind and --port to override server.ini settings.</p>"},{"location":"Development-setup/#running","title":"Running","text":"<p>Once everything is installed and the server is configured, you can proceed to run the Faraday server script:</p> <pre><code>$ faraday-server\n</code></pre> <p>If you want to run the server in background mode, you should use the <code>--start</code> option:</p> <pre><code>$ faraday-server --start\n</code></pre> <p>This is the recommended way to do this. Other methods like using the bash <code>&amp;</code> could cause unexpected IOErrors and other related exceptions.</p>"},{"location":"Development-setup/#web-ui","title":"Web UI","text":"<p>Once the server is running, you can access Faraday's Web UI using any browser: just point it to <code>http://SERVER_IP:SERVER_PORT/</code> (by default it will be http://localhost:5985/) and you can start playing with Faraday.</p> <p></p>"},{"location":"Development-setup/#faraday-client","title":"Faraday Client","text":"<p>Faraday Client is the software which will allow you to work with your favorite security tools and capture their output in an organized manner. It works under a GTK+3 interface with the popular VTE terminal with a custom ZSH shell that respects the user's configuration (yes, that means you get to keep your exact ZSH terminal inside Faraday, even if you use ZPrezto or Oh My ZSH).</p> <p>From the client you can also create and delete workspaces, specify plugin configuration, view information about your hosts, resolve conflics that may arise and much more.</p> <p>It's also a responsibility of the client to send all of the collected information to the server, which will then process it and format it in an friendly way for you to view, edit, and confirm.</p> <p>The client is bundled in the same package as the server, so if you have already downloaded Faraday, you can skip the next step.</p>"},{"location":"Development-setup/#downloading_1","title":"Downloading","text":"<p>Download the latest tarball or clone the Faraday Git Project repository and checkout dev branch:</p> <pre><code>$ git clone https://github.com/infobyte/faraday.git faraday-dev\n$ git checkout dev\n$ cd faraday-dev\n</code></pre>"},{"location":"Development-setup/#requirements_1","title":"Requirements","text":"<p>Faraday Client works under any modern Linux distribution or Mac OS X, and needs Python 3.6+.</p> <p>The Python requirements for the client are stored in the <code>requirements.txt</code> file. Some additional requirements are necessary for specific features to work, these are stored in the <code>requirements_extras.txt</code> file.</p> <p>Out tests include Debian, Ubuntu, Kali, Backtrack.</p> <p></p>"},{"location":"Development-setup/#installing-system-dependencies_1","title":"Installing system dependencies","text":""},{"location":"Development-setup/#debian-and-derivatives","title":"Debian and derivatives","text":"<p>You can run the following command to install the required dependencies on any Debian based distribution.</p> <pre><code>$ sudo apt update\n</code></pre> <p>If you are running Ubuntu 12.04 LTS, or Ubuntu 14.04 LTS, please execute this command:</p> <pre><code>$ sudo apt install libpq-dev python-pip python-dev gir1.2-gtk-3.0 gir1.2-vte-2.90 python-gobject zsh curl\n</code></pre> <p>If you are any other version, please execute the following command:</p> <pre><code>$ sudo apt install libpq-dev python-pip python-dev gir1.2-gtk-3.0 gir1.2-vte-2.91 python-gobject zsh curl\n</code></pre>"},{"location":"Development-setup/#gentoo","title":"Gentoo","text":"<p>This are the dependencies for Gentoo with Emerge:</p> <pre><code>dev-libs/gobject-introspection net-libs/webkit-gtk x11-libs/gtk+ \\\nx11-libs/vte dev-python/pygobject app-shells/zsh net-misc/curl dev-python/ipython\n</code></pre> <p>Extras dependencies:</p> <pre><code>dev-python/beautifulsoup dev-python/gevent-psycopg2\n</code></pre>"},{"location":"Development-setup/#using-gtk-client-with-virtualenv","title":"Using GTK client with virtualenv","text":"<p>If you are working inside a Virtual enviroment you need to follow this extra steps for GTK to work: <pre><code>pip install vext\npip install vext.pygtk\npip install vext.gi\n</code></pre></p> <p></p>"},{"location":"Development-setup/#configuration_1","title":"Configuration","text":"<p>Now you need to configure every Faraday instance so it can connect to the server.</p> <ul> <li>If you're using the GTK interface click on the Preferences icon  and fill in the server URL, for example http://127.0.0.1:5985</li> </ul> <p></p> <ul> <li>If you are using the --gui=no-gui option</li> </ul> <p>Edit the file: <code>~/.faraday/config/user.xml</code> And search for the following api_uri tag and set it to the server URL, for example:</p> <p><code>&lt;api_uri&gt;http://127.0.0.1:5985&lt;/api_uri&gt;</code></p> <p>If you are using SSL you need to use https in your configuration. For example use https://192.168.0.20 when you are using an nginx server with SSL enabled and faraday-server is listening on 192.168.0.20.</p>"},{"location":"Development-setup/#running_1","title":"Running","text":"<p>Once you have already configured the client and have Faraday Server running, you simply have to run:</p> <pre><code>$ faraday-client\n</code></pre> <p>Some distributions or installations require additional steps, so look down below if you are using something different than Debian or Ubuntu, or if you need to apply some configuration to the client.</p> <p></p>"},{"location":"Development-setup/#kali","title":"Kali","text":"<p>Faraday comes pre-installed in Kali Rolling. The package name is python-faraday. Keep in mind that this package can only be used for the Community edition.</p> <p>In order to run Faraday in Kali: <pre><code>$ systemctl start postgresql.service\n$ cd /usr/share/python-faraday\n$ faraday-server\n$ faraday-client\n</code></pre></p> <p>Due to Kali's package updates the pre-installed package may not be the last version. If you want the latest updates use the Debian install steps.</p>"},{"location":"Development-setup/#gentoo_1","title":"Gentoo","text":"<p>If you are running Gentoo, this are the dependencies with Emerge:</p> <pre><code>dev-python/flask-sqlalchemy dev-python/service_identity dev-python/twisted \\\ndev-python/pyopenssl dev-java/mockito dev-python/Whoosh \\\ndev-python/configargparse dev-python/restkit dev-python/requests www-servers/tornado \\\ndev-python/flask dev-python/colorama dev-python/setuptools dev-python/pip dev-libs/libpqxx \\\nlibffi-dev\n</code></pre>"},{"location":"FAQ/","title":"FAQs","text":""},{"location":"FAQ/#index","title":"Index","text":"<ul> <li>Where does the name come from?</li> <li>What is Faraday?</li> <li>Is Faraday free?</li> <li>Does Faraday have collaboration tools?</li> <li>Which platforms are supported?</li> <li>Does Faraday work on my servers or on the cloud?</li> <li>What are the system requirements to run Faraday?</li> <li>I purchased a License, now what?</li> <li>Can I keep using the Kali version with my newly bought pro/corp license?</li> <li>Can I install the Server and/or Client in my own box instead of using a Virtual Machine?</li> <li>What version am I using?</li> <li>What if I want to add a Vulnerability manually?</li> <li>How do I bind Faraday to 0.0.0.0?</li> <li>Where are my credentials?</li> <li>I lose my credentials?</li> </ul> <p>Is your question not listed here? Contact us</p>"},{"location":"FAQ/#topics","title":"Topics","text":""},{"location":"FAQ/#where-does-the-name-come-from","title":"Where does the name come from?","text":"<p>The name was picked to honor Michael Faraday, an English scientist whose main discoveries include electromagnetism induction, diamagnetism and electrolysis. Mainly his six principles of scientific discipline, acquired at a young age from Isaac Watts' \"The Improvement of the mind\": * Always carry a small pad to take notes at any time * Maintain abundant correspondence * Collaborate regularly with others to exchange ideas * Avoid controversy * Verify everything that was said to him * Do not generalize, speak and write as precisely as possible</p> <p>Read more at: https://en.wikipedia.org/wiki/Michael_Faraday http://www.eng.auburn.edu/~sjreeves/cm/improve.html</p> <p></p>"},{"location":"FAQ/#what-is-faraday","title":"What is Faraday?","text":"<p>Faraday is a multiuser integrated penetration test and vulnerability management environment. It is to Penetration Testing what an IDE is to Development. The main purpose of Faraday is to re-use the available tools in the community to take advantage of them in a multiuser way.</p> <p></p>"},{"location":"FAQ/#is-faraday-free","title":"Is Faraday free?","text":"<p>Yes, we have a Community version which is totally free, you can download it from Github We also have two Commercial versions, details about those in our webpage.</p> <p>Compare different versions of Faraday</p> <p></p>"},{"location":"FAQ/#does-faraday-have-collaboration-tools","title":"Does Faraday have collaboration tools?","text":"<p>Faraday supports over 80 tools. Full plugin list available here.</p> <p></p>"},{"location":"FAQ/#which-platforms-are-supported","title":"Which platforms are supported?","text":"<p>RedHat, CentOS, Fedora, Debian, Kali, Ubuntu, Docker.</p> <p></p>"},{"location":"FAQ/#does-faraday-work-on-my-servers-or-on-the-cloud","title":"Does Faraday work on my servers or on the cloud?","text":"<p>Yes it does, depending on your needs. For more information you can contact us at sales@infobytesec.com</p> <p></p>"},{"location":"FAQ/#what-are-the-system-requirements-to-run-faraday","title":"What are the system requirements to run Faraday?","text":"<p>CPU: 2 Dualcore 2GHz Intel CPU Disk: 40 GB Memory: 4 GB RAM (8 GB RAM recommended)  </p> <p>Current tests include Debian, Ubuntu, Kali, and Backtrack.  </p> <p>If instead of installing you want to take a quick look at Faraday you can also use Docker.</p> <p></p>"},{"location":"FAQ/#i-purchased-a-license-now-what","title":"I purchased a License, now what?","text":"<p>You will receive an email with a link to download everything regarding your license. If you haven\u2019t received it or are having issues, please contact us at sales@infobytesec.com.</p> <p></p>"},{"location":"FAQ/#can-i-keep-using-the-kali-version-with-my-newly-bought-professionalcorporate-license","title":"Can I keep using the Kali version with my newly bought Professional/Corporate license?","text":"<p>In a nutshell, yes. Even though the Kali Faraday version is incompatible with both the Professional and Corporate licenses, you can upgrade the platform in the same box without losing all your data.</p> <p>You will need to remove the package <code>python-faraday</code> and then you need to install the pro/corp .deb with <code>apt install ./faraday-server_amd64.deb</code></p> <p></p>"},{"location":"FAQ/#can-i-install-the-server-andor-client-in-my-own-box-instead-of-using-a-virtual-machine-you-provided","title":"Can I install the Server and/or Client in my own box instead of using a Virtual Machine you provided?","text":"<p>The only intended purpose for the Faraday VM is as a commercial demo.</p> <p>For production environments we recommend doing a fresh install in a Ubuntu Server, please do not use your provided Demo License VM.</p> <p>If the use of a Virtualized environment is a must-have, then we recommend doing a proper install in a fresh Virtual Machine following the regular installation steps.</p> <p></p>"},{"location":"FAQ/#how-do-i-know-which-faraday-version-im-using","title":"How do I know which Faraday Version I'm using?","text":"<p>By running faraday-server --version or hovering your mouse over the Faraday logo at the top left of the Web UI. Latest version and information available in the Upgrading Faraday section.</p> <p>To get the latest available version:</p> <ul> <li>for the community version, visit Github</li> <li>for the commercial versions, check the Customer Portal</li> </ul> <p></p>"},{"location":"FAQ/#what-if-i-want-to-add-a-vulnerability-manually","title":"What if I want to add a Vulnerability manually?","text":"<p>You can do this using our Web UI, read our documentation on manually adding vulnerabilities.</p> <p></p>"},{"location":"FAQ/#how-do-i-bind-faraday-to-0000","title":"How do I bind Faraday to 0.0.0.0?","text":"<p>Just go to <code>/home/faraday/.faraday/config/server.ini</code> and inside the <code>[faraday-server]</code> section write:</p> <p><code>bind_address=0.0.0.0</code></p> <p>Restart Faraday Server if you had it running. That's it!</p> <p></p>"},{"location":"FAQ/#where-are-my-credentials","title":"Where are my credentials?","text":"<p>When installing Faraday you run the following command:</p> <pre><code>faraday-manage initdb\n</code></pre> <p>and get your credentials on the terminal (something like this):</p> <p><pre><code>username: faraday\npassword: a7e8d3seWqy5\n</code></pre> If you don't remember this, below, you can see how to re-generate them.</p> <p></p>"},{"location":"FAQ/#i-lost-my-credentials","title":"I lost my credentials","text":"<p>If during the instalation you forget to store or keep your credentials, don't worry, you can either create a new admin user or change the default admin user:</p> <p>Change faraday default admin user (enter the new password): <pre><code>$ faraday-manage change-password\n</code></pre> <pre><code>    Username: faraday\n    Password:\n    Repeat for confirmation:\n    Password changed succesfully\n</code></pre></p> <p>Create a new admin user (Only for paid users): <pre><code>$ faraday-manage create-superuser\n</code></pre> <pre><code>    Username: admin\n    Email: admin@example.com\n    Password:\n    Repeat for confirmation:\n    User admin created successfully!\n</code></pre></p> <p>Is your question not listed here? </p> <p>Generate a support ticket to get aid from our Help Desk staff.</p> <p>If you are using Faraday community, you can reach us by using our GitHub issues page.</p>"},{"location":"Faraday-Manage-Settings-v4/","title":"Faraday Manage Settings","text":"<p>The purpose of this documentation is to explain how to use <code>faraday-manage settings</code> </p>"},{"location":"Faraday-Manage-Settings-v4/#update-executive-reports-configuration","title":"Update executive reports configuration","text":"<p>To update executive reports configuration to enable markdown <pre><code>faraday-manage settings -a update executive_reports\n\nmarkdown: True\nborder_size: 3\n</code></pre> Then restart your Faraday Server instance <pre><code>systemctl restart faraday-server\n</code></pre></p>"},{"location":"Faraday-Manage-Settings-v4/#update-smtp-configuration","title":"Update SMTP configuration","text":"<p>To setup your SMTP configurations</p> <pre><code>faraday-manage settings -a update smtp\n\nenabled:\nusername\nhost:\nport: \nsender: \nssl:\n</code></pre> <p>Then update every field to the desired configuration</p>"},{"location":"Faraday-Manage-Settings-v4/#update-reports-configuration-and-custom-plugin-folder","title":"Update reports configuration and custom plugin folder","text":"<p>To update the custom plugin folder run the following command <pre><code>faraday-manage settings -a update reports\n\nignore_info_severity[False]: \ncustom_plugins_folder:\n</code></pre></p> <p>Then update the field custom plugin folder to the specified path</p>"},{"location":"Faraday-Manage-Settings-v4/#enable-saml","title":"Enable SAML","text":"<p>To enable SAML and update the SAML configuration, <pre><code>faraday-manage settings -a update saml\n\nenabled[False]: \ndisplay_name [Identity Provider]:\nidentity_id []:\nuser_role [admin]:\nattribute_identifier []:\nsso_url [http://localhost/saml/login]:\nsp_certificate []:\nsp_private_key []:\nidp_certificate []:\n</code></pre></p>"},{"location":"Faraday-Manage/","title":"Faraday Manage","text":"<p>Faraday Manage is a backend tool that helps us administrate Faraday's configuration. </p> <p>To use Faraday Manage, you can run it as follow:</p> <pre><code>$ faraday-manage COMMAND\n</code></pre> <p>If you run only <code>faraday-manage</code>, it will list you all the available commands.</p> <p></p>"},{"location":"Faraday-Manage/#available-commands","title":"Available Commands","text":""},{"location":"Faraday-Manage/#add-custom-attribute","title":"add-custom-attribute","text":"<p>This command allows you to create Custom Fields from the terminal. For more information about Custom Fields, you can see their wiki page</p>"},{"location":"Faraday-Manage/#change-password","title":"change-password","text":"<p>It allows you to change your user's password</p>"},{"location":"Faraday-Manage/#create-superuser","title":"create-superuser","text":"<p>The name says it all! This is the way to create a new admin user through the command line.</p>"},{"location":"Faraday-Manage/#create-tables","title":"create-tables","text":"<p>This command allows the user to manually create a table on Faraday's database. It would come in handy if something in the initdb command fails for example.</p>"},{"location":"Faraday-Manage/#create-workspace","title":"create workspace","text":"<p>Create workspace</p>"},{"location":"Faraday-Manage/#database-schema","title":"database-schema","text":"<p>This will print a PNG image with Faraday's internal working scheme.</p>"},{"location":"Faraday-Manage/#delete-custom-field","title":"delete-custom-field","text":"<p>It allows you to delete a Custom Field from terminal</p>"},{"location":"Faraday-Manage/#generate-nginx-config","title":"generate-nginx-config","text":"<p>This command displays the nginx config example to be added in nginx config</p>"},{"location":"Faraday-Manage/#generate-roles-permission","title":"generate-roles-permission","text":"<p>This command displays the roles permission in a JSON file</p>"},{"location":"Faraday-Manage/#generate-rsa-keys","title":"generate-rsa-keys","text":"<p>It will create an RSA key for integrations</p>"},{"location":"Faraday-Manage/#import-license","title":"import-license","text":"<p>Imports Faraday License.</p>"},{"location":"Faraday-Manage/#import-methodologies","title":"import-methodologies","text":"<p>Imports methodologies and tasks from a csv file</p>"},{"location":"Faraday-Manage/#import-vulnerability-templates","title":"import-vulnerability-templates","text":"<p>Imports vuln templates from a file</p>"},{"location":"Faraday-Manage/#initdb","title":"initdb","text":"<p>This command needs to be executed only at the moment of Faraday's installation. It will create the tables of the database, Faraday's user among other things.</p> <p>If you try to execute this a second time it will indeed fail.</p> <p>Danger</p> <p>Warning: Please do not lose the random password that this command will print on the screen. It will be necessary to login into Faraday.</p>"},{"location":"Faraday-Manage/#list-plugins","title":"list-plugins","text":"<p>Lists available plugins.</p>"},{"location":"Faraday-Manage/#load-samples","title":"load-samples","text":"<p>Loads pre-loaded samples for config, attributes, searchfilters, pipelines and planner</p>"},{"location":"Faraday-Manage/#migrate","title":"migrate","text":"<p>Migrates database schema.</p>"},{"location":"Faraday-Manage/#openapi-yaml","title":"openapi-yaml","text":"<p>Show URLs in OpenApi format</p>"},{"location":"Faraday-Manage/#remove-rsa-keys","title":"remove-rsa-keys","text":"<p>Remove RSA key pair generated for an...</p>"},{"location":"Faraday-Manage/#rename-user","title":"rename-user","text":"<p>Change username.</p>"},{"location":"Faraday-Manage/#settings","title":"settings","text":"<p>It allows you to manage settings inside faraday configuration</p>"},{"location":"Faraday-Manage/#show-rsa-keys","title":"show-rsa-keys","text":"<p>Show RSA key pair for an integration's</p>"},{"location":"Faraday-Manage/#show-urls","title":"show-urls","text":"<p>Prints a list of all the URLs available to communicate with our API Rest.</p>"},{"location":"Faraday-Manage/#sql-shell","title":"sql-shell","text":"<p>This command will open a PostgreSQL shell already configured with Faraday's user and configuration.</p>"},{"location":"Faraday-Zap-extension/","title":"Faraday Zap extension","text":""},{"location":"Faraday-Zap-extension/#importing-to-faraday-a-xml-report-generated-by-owasp-zap","title":"Importing to Faraday a XML report generated by OWASP Zap","text":""},{"location":"Faraday-Zap-extension/#using-faraday-zap-extension","title":"Using Faraday Zap Extension","text":"<p>With Faraday Zap Extension, you are able to send new issues directly from OWASP Zap into Faraday. </p>"},{"location":"Faraday-Zap-extension/#download-faraday-zap-extension","title":"Download Faraday Zap Extension","text":"<p>The first thing we need to do is to download Faraday Zap Extension.</p>"},{"location":"Faraday-Zap-extension/#configuring-faraday-zap-extension","title":"Configuring Faraday Zap Extension","text":"<p>Once we have downloaded it, we need to load it into OWASP Zap. You can load an add-on as the sample image below or by typing [Ctrl + L]:</p> <p></p> <p>Now we need to authenticate into the Faraday Zap extension by using our Faraday's credentials. Go into Tools/Faraday configuration options or type [Ctrl+Alt+F]:</p> <p></p> <p>Type your credentials and set the Faraday Server URL to the correct one. Then click Login:</p> <p></p> <p>Once you are logged in, you can go to the Configuration tab and select the workspace where you want to work in:</p> <p></p> <p>Note: by clicking on Refresh, you can update your workspaces from Faraday.</p>"},{"location":"Faraday-Zap-extension/#sending-requests-and-alerts-into-faraday","title":"Sending requests and alerts into Faraday","text":"<p>Now that you have configured Faraday Zap extension, you can proceed to send issues into Faraday:</p> <ul> <li>Sending a request:</li> </ul> <p></p> <ul> <li>Sending an alert:</li> </ul> <p></p>"},{"location":"Faraday-Zap-extension/#uninstalling-faraday-zap-extension","title":"Uninstalling Faraday Zap Extension","text":"<p>To uninstall the extension, go into Manage Add-ons, select the extension named Faraday and then click on Uninstall Selected</p> <p></p>"},{"location":"Filters/","title":"Search","text":""},{"location":"Filters/#using-search-field-in-faraday-v-4","title":"Using Search Field in Faraday V 4","text":"<p>In ordear to ease the need of searching we've developed a way to use the search bar in order to be able to select the search fields and easily build the queries needed.</p> <p>To select Vulns click on Vulnerability as the image bellow:</p> <p></p> <p>then select the desired Field as:</p> <p></p> <p>Operator value Contains:</p> <p></p> <p>and then type the value that will be searched:</p> <p></p> <p>After finishing typing hit Enter or click on the search button</p>"},{"location":"Filters/#filters","title":"Filters","text":""},{"location":"Filters/#making-search-queries","title":"Making search queries","text":"<p>Clients can make advanced searchs using the UI Clicking on the Switch to advanced mode Link, after doing this the search field will admit using a dictionary with values as the description bellow</p> <p><code>{\"name\": &lt;fieldname&gt;, \"op\": &lt;operatorname&gt;, \"val\": &lt;argument&gt;}</code></p> <p>The operator strings recognized by the API incude:</p> <pre><code>==, eq, equals, equals_to\n!=, neq, does_not_equal, not_equal_to\n&gt;, gt, &lt;, lt\n&gt;=, ge, gte, geq, &lt;=, le, lte, leq\nin, not_in\nis_null, is_not_null\nlike\nilike\nhas\nany\n</code></pre>"},{"location":"Filters/#manage-vulns-aka-status-report-fields","title":"Manage vulns (aka status report) fields","text":"Field name Field Type Valid Operators Confirmed Working name <code>string</code> <code>all</code> description <code>string</code> <code>all</code> severity <code>severities enum</code> <code>eq</code>, <code>neq</code> target <code>string</code> <code>all</code> service <code>relationship</code> service.name <code>string</code> <code>all</code> service.port <code>number</code> <code>eq</code>, <code>neq</code>, <code>&gt;</code>,<code>&gt;=</code>, <code>&lt;</code>, <code>&lt;=</code> easeofresolution (ease_of_resolution in model) <code>ease_of_resolutions enum</code> <code>eq</code>, <code>neq</code> references (reference_instances in model) <code>relationship</code> references.name <code>string</code> <code>all</code> resolution <code>string</code> <code>all</code> data <code>string</code> <code>all</code> request <code>string</code> <code>all</code> method <code>string</code> <code>all</code> response <code>string</code> <code>all</code> pname (parameter_name en el modelo) <code>string</code> <code>all</code> params (parameters en el model) <code>string</code> <code>all</code> path string <code>all</code> query (query_string en el modelo) <code>string</code> <code>all</code> website <code>string</code> <code>all</code> creator <code>relationship</code> creator.username <code>string</code> <code>all</code> type <code>vuln_types enum</code> <code>eq</code>, <code>neq</code> confirmed <code>boolean</code> <code>eq</code>, <code>neq</code> id <code>number</code> <code>eq</code>, <code>neq</code>, <code>&gt;</code>, <code>&gt;=</code>, <code>&lt;</code>, <code>&lt;=</code> <p>Data types</p> <pre><code>boolean = [ true, True, false, False ]\n\nEASE_OF_RESOLUTIONS = [\n    'trivial',\n    'simple',\n    'moderate',\n    'difficult',\n    'infeasible'\n]\n\nVULN_TYPES = [\n    'vulnerability',\n    'vulnerability_web',\n    'vulnerability_code'\n]\n\nSEVERITIES = [\n    'critical',\n    'high',\n    'medium',\n    'low',\n    'informational',\n    'unclassified',\n]\n\nSTATUS = [\n    'open',\n    'closed',\n    'filtered'\n]\n</code></pre>"},{"location":"Filters/#some-examples","title":"Some examples","text":"<p>Endpoint</p> <p><code>http://localhost:5985/_api/v2/ws/testws1/vulns/filter?q={\"filters\": [...]}</code></p> <p>Basic one</p> <p><code>name == \"test 1\"</code> <pre><code>{\n\"filters\": [\n{ \"name\": \"name\", \"op\": \"eq\",  \"val\": \"test1\" }\n]\n}\n</code></pre> With <code>and</code></p> <p><code>severity == medium</code></p> <pre><code>{\n\"filters\": [\n{ \"name\": \"name\", \"op\": \"eq\",  \"val\": \"test1\" },\n{ \"name\": \"severity\",  \"op\": \"eq\",\n\"val\": \"medium\" } ]\n}\n</code></pre> <p>A bit complex one</p> <p><code>name like \"t%\" and (severity == \"critical\" or severity == \"medium\")</code></p> <p><pre><code>{ \"filters\": [ { \"name\": \"name\", \"op\": \"like\", \"val\": \"t%\"  }, {  \"or\": [ { \"name\": \"severity\",    \"op\": \"eq\",    \"val\": \"medium\"  } ,\n{ \"name\": \"severity\",    \"op\": \"eq\",    \"val\": \"critical\"  }\n] } ]\n}\n</code></pre> so to do this query it can be used something like this:</p> <p></p> <p>With case insensitive logic and fields with relationships</p> <p><code>name ilike \"%php%\" and (service.name like \"%http%\" or service.port eq 80)</code></p> <pre><code>{ \"filters\": [ { \"name\": \"name\", \"op\": \"ilike\", \"val\": \"%php%\"  }, {  \"or\": [ { \"name\": \"service\", \"op\": \"has\",  \"val\": { \"name\": \"name\", \"op\": \"like\",  \"val\": \"%http%\" } } ,\n{ \"name\": \"service\", \"op\": \"has\",  \"val\": { \"name\": \"port\", \"op\": \"eq\",  \"val\": \"80\" } }\n] } ]\n}\n</code></pre> <p>Previous filters but just the ones created by user <code>faraday</code></p> <p><code>name ilike \"php%\" and (service.name like \"%http%\" or service.port eq 80) and creator.username == 'faraday'</code></p> <pre><code>{ \"filters\": [\n{ \"name\": \"creator\", \"op\": \"has\",\n\"val\": { \"name\": \"username\", \"op\": \"eq\",  \"val\": \"faraday\" } } ,\n{ \"name\": \"name\", \"op\": \"ilike\", \"val\": \"%php%\"  }, {  \"or\": [ { \"name\": \"service\", \"op\": \"has\",  \"val\": { \"name\": \"name\", \"op\": \"like\",  \"val\": \"%http%\" } } ,\n{ \"name\": \"service\", \"op\": \"has\",  \"val\": { \"name\": \"port\", \"op\": \"eq\",  \"val\": \"80\" } }\n] } ]\n}\n</code></pre>"},{"location":"Filters/#hosts","title":"HOSTS","text":""},{"location":"Filters/#manage-hosts-fields","title":"Manage hosts fields","text":"<p>Endpoint</p> <p><code>http://localhost:5985/_api/v2/ws/testws1/hosts/filter?q={\"filters\": [..]</code></p> Field name Field Type Valid Operators ip <code>string</code> <code>all</code> hostnames <code>relationship</code> hostnames.name <code>string</code> <code>all</code> services <code>relationship</code> services.name <code>string</code> <code>all</code> services.port <code>number</code> <code>eq</code>, <code>neq</code>, <code>&gt;</code>,<code>&gt;=</code>, <code>&lt;</code>, <code>&lt;=</code> services.status <code>status enum</code> <code>eq</code>, <code>neq</code> os <code>string</code> <code>all</code> owned <code>boolean</code> <code>eq</code>, <code>neq</code> vulnerability_critical_generic_count <code>number</code> <code>eq</code>, <code>neq</code>, <code>&gt;</code>,<code>&gt;=</code>, <code>&lt;</code>, <code>&lt;=</code> vulnerability_high_generic_count <code>number</code> <code>eq</code>, <code>neq</code>, <code>&gt;</code>,<code>&gt;=</code>, <code>&lt;</code>, <code>&lt;=</code> vulnerability_medium_generic_count <code>number</code> <code>eq</code>, <code>neq</code>, <code>&gt;</code>,<code>&gt;=</code>, <code>&lt;</code>, <code>&lt;=</code> vulnerability_low_generic_count <code>number</code> <code>eq</code>, <code>neq</code>, <code>&gt;</code>,<code>&gt;=</code>, <code>&lt;</code>, <code>&lt;=</code> vulnerability_info_generic_count <code>number</code> <code>eq</code>, <code>neq</code>, <code>&gt;</code>,<code>&gt;=</code>, <code>&lt;</code>, <code>&lt;=</code> vulnerability_unclassified_generic_count <code>number</code> <code>eq</code>, <code>neq</code>, <code>&gt;</code>,<code>&gt;=</code>, <code>&lt;</code>, <code>&lt;=</code> <p>Some examples</p> <pre><code>{\"filters\": [\n{ \"and\":  [\n{ \"name\": \"hostnames\", \"op\": \"any\", \"val\": { \"name\": \"name\", \"op\": \"eq\", \"val\": \"asdf1\" }\n}\n] } ] }\n</code></pre> <pre><code>{\"filters\": [\n{ \"and\":  [\n{ \"name\": \"services\", \"op\": \"any\", \"val\": { \"name\": \"port\", \"op\": \"eq\", \"val\": \"80\" }\n}\n] } ] }\n</code></pre> <pre><code>{\n\"filters\": [\n{ \"name\": \"ip\", \"op\": \"like\",  \"val\": \"192.168.0.%\" }\n]\n}\n</code></pre>"},{"location":"First-Steps/","title":"First Steps","text":"<p>Now that you have installed Faraday, we will take the first steps together in this journey</p>"},{"location":"First-Steps/#accessing-faraday-web-ui","title":"Accessing Faraday Web UI","text":"<p>First, navigate to Faraday Web UI and log in.</p> <p></p> <p>Where are my credentials?</p>"},{"location":"First-Steps/#creating-a-workspace","title":"Creating a Workspace","text":"<p>Faraday has the concept of Workspaces where you can put all your data related to a project in one place, you can have many workspaces to represent different engagements, weekly/monthly scans for internal/dmz/external networks, specific application assessments, etc  </p> <p>Details on Workspace here</p>"},{"location":"First-Steps/#creating-a-host","title":"Creating a Host","text":"<p>See how to create, edit and delete an asset in Assets and Services</p>"},{"location":"First-Steps/#creating-a-vuln","title":"Creating a Vuln","text":"<p>See how to create, edit and delete a vuln in Vulns</p>"},{"location":"First-Steps/#creating-a-report","title":"Creating a Report","text":"<p>See how to create, edit and delete a report in Reports</p>"},{"location":"First-Steps/#getting-started","title":"Getting Started","text":"<p>Using faraday to integrate your tools has never been this easy!</p> <p>Details on Getting started here</p>"},{"location":"Getting-started/","title":"First Steps","text":""},{"location":"Getting-started/#getting-started","title":"Getting Started","text":"<p>Learn about Faraday holistic approach and rethink vulnerability management. </p> <ul> <li> <p>Centralize your vulnerability data</p> </li> <li> <p>Automate the scanners you need</p> </li> </ul>"},{"location":"Getting-started/#integrating-faraday-in-your-cicd","title":"Integrating faraday in your CI/CD","text":"<p>Setup Bandit and OWASP ZAP in your pipeline</p> <ul> <li> <p>GitHub [PDF]</p> </li> <li> <p>Jenkins [PDF]</p> </li> <li> <p>TravisCI  [PDF]</p> </li> </ul> <p>Setup Bandit, OWASP ZAP and SonarQube in your pipeline</p> <ul> <li>Gitlab [PDF]</li> </ul>"},{"location":"How-to-build-your-template/","title":"How to build a Template","text":"<p>We use Jinja2 to create Report Templates. Here are listed the main variables available when creating a Template.</p>"},{"location":"How-to-build-your-template/#general-variables","title":"General Variables","text":"<p>These are the variables loaded when creating a report</p> <ul> <li> <p>date - the date when the Report was created, as the name of the month and four digits for the year</p> </li> <li> <p>title </p> </li> <li> <p>enterprise </p> </li> <li> <p>summary </p> </li> <li> <p>conclusions </p> </li> <li> <p>recommendations </p> </li> <li> <p>scope </p> </li> <li> <p>objectives </p> </li> </ul> Workspace <ul> <li>workspace.scope - a list containing the different scopes of the workspace. </li> <li>workspace - a dictionary with all workspace information.<ul> <li>name</li> <li>description </li> <li>id</li> <li>duration.start_date</li> <li>duration.end_date</li> <li>users</li> <li>update_date</li> <li>stats.total_vulns</li> <li>stats.std_vulns</li> <li>stats.web_vulns</li> <li>stats.code_vulns</li> <li>stats.hosts</li> <li>stats.services</li> <li>stats.credentials</li> <li>public</li> <li>readonly</li> <li>active</li> <li>create_date</li> <li>_id</li> </ul> </li> </ul> <p>Date Format</p> <p>start_date and end_date are displayed in timestamp format. If you want to change their format, you can use datetimeformat() function and pass the desired format as parameter. E.g.:</p> <p><pre><code>   workspace.duration.start_date|datetimeformat('%m-%d-%Y')\n\n   workspace.duration.end_date|datetimeformat('%B %Y')\n</code></pre>     For more information about date format check Python docs.</p> Host <ul> <li>hosts_amount - an int containing the amount of hosts in the Workspace</li> <li>hosts - a dictionary with all the hosts in the Workspace<ul> <li>type</li> <li>description</li> <li>default_gateway</li> <li>ip</li> <li>owned</li> <li>tags</li> <li>name</li> <li>services</li> <li>versions</li> <li>mac</li> <li>hostnames</li> <li>vulns</li> <li>owner</li> <li>credentials</li> <li>service_summaries</li> <li>id</li> <li>os</li> <li>metadata</li> </ul> </li> </ul> Service <ul> <li>services_amount - an int containing the amount of services in the Workspace</li> <li>services - a dictionary with all the services in the Workspace<ul> <li>status</li> <li>protocol</li> <li>description</li> <li>parent</li> <li>tags</li> <li>vulns</li> <li>metadata</li> <li>owned</li> <li>summary</li> <li>port</li> <li>owner</li> <li>version</li> <li>host_id</li> <li>id</li> <li>credentials</li> <li>type</li> <li>ports</li> <li>name</li> </ul> </li> </ul> Vulnerability <ul> <li>counter_severity - a dictionary with all the severities and the amount of vulns for each one vulnerability pie charts</li> <li>vulns_amount - an int containing the amount of vulnerabilities in the Workspace except for vulns with severity unclassified, which are not included</li> <li>vulns - a dictionary with all the vulnerabilities in the Workspace except for vulns with severity unclassified, which are not included<ul> <li>update_user</li> <li>parent_type</li> <li>owned</li> <li>owner</li> <li>id</li> <li>impact</li> <li>confirmed</li> <li>severity</li> <li>service</li> <li>data</li> <li>policyviolations</li> <li>evidence_subdoc</li> <li>type</li> <li>refs</li> <li>metadata</li> <li>status</li> <li>issuetracker</li> <li>description</li> <li>parent</li> <li>tags</li> <li>easeofresolution</li> <li>hostnames</li> <li>data</li> <li>host_os</li> <li>desc</li> <li>name</li> <li>obj_id</li> <li>target</li> <li>resolution</li> <li>severity_numbers</li> <li>method</li> <li>params</li> <li>website</li> <li>query</li> <li>path</li> <li>request</li> <li>response</li> </ul> </li> </ul> <p>Grouped reports will have an additional field:     vulns_grouped_amount - an int containing the total amount of vulnerabilities after grouping</p>"},{"location":"How-to-build-your-template/#custom-fields-in-executive-report","title":"Custom Fields in Executive Report","text":"<p>You can access your Custom Attributes on the docx templates like a dictionary and by the field name: <pre><code>vuln.custom_fields[\"cvss\"] \n</code></pre></p>"},{"location":"How-to-build-your-template/#jinja2-context","title":"Jinja2 Context","text":"<p>For more technical information, here is the Jinja2 context, where you can find all the DataTypes and structures implemented with Jinja.</p>"},{"location":"How-to-build-your-template/#template-examples","title":"Template Examples","text":"<p>Here are some basic templates.</p>"},{"location":"How-to-build-your-template/#default-templates","title":"Default Templates","text":"<p>Default Generic/Grouped</p>"},{"location":"How-to-build-your-template/#markdown-templates","title":"Markdown Templates","text":"<p>Markdown_Grouped/Generic</p>"},{"location":"Install-guide-Advanced/","title":"Advanced Install","text":""},{"location":"Install-guide-Advanced/#installation-with-nix-community-version-only","title":"Installation with Nix (Community version only)","text":"<p>Before installing Faraday, we need to install Nix so Faraday runs with it</p> <pre><code>sh &lt;(curl -L https://nixos.org/nix/install)\n</code></pre> <p>Installation finished! To ensure that the necessary environment variables are set, either log in again, or type in your shell <pre><code>. ~/.nix-profile/etc/profile.d/nix.sh\n</code></pre></p> <p>Next, activate your nix installation running this: <pre><code>echo '. ~/.nix-profile/etc/profile.d/nix.sh' &gt;&gt;~/.bashrc\n</code></pre></p> <p>Re-login, and Check the Nix Installation: <pre><code>nix --version\n</code></pre></p> <p>For more information about Nix, please follow this link</p> <p>Installing Faraday</p> <pre><code>git clone https://github.com/infobyte/faraday.git\ncd faraday-dev/\nnix-shell\n</code></pre> <p>Once the nix-shell command finish, run:</p> <pre><code>faraday-server\n</code></pre> <p>We highly recommend you to check our First Steps guide.</p>"},{"location":"Install-guide-Docker/","title":"Docker","text":""},{"location":"Install-guide-Docker/#configuration","title":"Configuration","text":"<p>This image can be run as a service or as a standalone container. Both run Faraday Server without PostgreSQL. You will note that we have created <code>/faraday-storage</code> and <code>/faraday-config</code> volumes (for mounting your storage and configuration). We have also created environment variables for Faraday configuration in case you don't mount a config volume. We will get more in detail of these volumes and environment variables:</p> <p>Example:</p> <p>Running Faraday as a standalone container <pre><code>    docker run \\\n    ....\n    -v /path/to/my_doc_folder:/faraday-license \\\n    -v /path/to/my_storage_folder:/faraday-storage \\\n    -v /path/to/my_config_folder:/faraday-config\n    ....\n  faradaysec/faraday:X.Y.Z\n</code></pre></p> <p>Running Faraday as a service <pre><code>    vim docker-compose.yml\n    version: '4.02'\n    services:\n      ...\n      volumes:\n        - /path/to/{my_config_folder}:/home/faraday/.faraday\n      ...\n</code></pre> We will get more in details about this configuration below.</p>"},{"location":"Install-guide-Docker/#environment-variables","title":"Environment Variables","text":"<p>In case you don't have a configuration file you'll need to set some environment variables. These come with default values so you'll need to customize some or all of them depending on your installation config.</p> <pre><code>PGSQL_HOST=172.2.0.1 # PostgreSQL server host.\nPGSQL_USER=faraday_postgresql # PostgreSQL user\nPGSQL_PASSWD=mypgsqlpassword # PostgreSQL user's password.\nPGSQL_DBNAME=faraday # Faraday's database name\n</code></pre>"},{"location":"Install-guide-Docker/#running-faraday","title":"Running Faraday","text":"<p>Now that we have learnt about the volumes and the environment variables above, let's run Faraday assuming we want to connect into PostgreSQL's address 192.168.20.29 and that we have located Faraday's config folder in its default location: <code>~/.faraday</code></p>"},{"location":"Install-guide-Docker/#as-a-standalone-container","title":"As a standalone container","text":"<p>Run the following command specifying the correct information:</p> <p>With environment variables <pre><code>  docker run \\\n     -v ~/.faraday/doc:/faraday-license \\\n     -v ~/.faraday/storage:/faraday-storage \\\n     -p 5985:5985 \\\n     -e PGSQL_HOST='192.168.20.29' \\\n     -e PGSQL_PASSWD='mypgsqlpassword' \\\n     -e LISTEN_ADDR='0.0.0.0' \\\n     faradaysec/faraday:latest\n</code></pre></p> <p>With config volume mounted <pre><code>  docker run \\\n     -v ~/.faraday/doc:/faraday-license \\\n     -v ~/.faraday/storage:/faraday-storage \\\n     -v ~/.faraday/config:/faraday-config \\\n     -p 5985:5985 \\\n     faradaysec/faraday:latest\n</code></pre> To check the container, run the following command:</p> <p><pre><code>   docker container ls\n</code></pre> As you can see, Faraday Server is running in port 5985.</p>"},{"location":"Install-guide-Docker/#as-a-service","title":"As a service","text":"<ol> <li> <p>Initialize a Swarm: <pre><code>docker swarm init\n#  In case you have more than one IP addr configured in your machine you have to specify which one to use.\ndocker swarm init --advertise-addr=192.168.20.29\n</code></pre></p> </li> <li> <p>Docker Compose File: Now, you need to create a docker-compose.yml file. You can use this docker-compose as example: With environment variables <pre><code>version: '4.02' \n\nservices: \n  server: \n    image: faradaysec/faraday:latest\n    environment: \n      - LISTEN_ADDR=0.0.0.0 \n      - PGSQL_HOST=192.168.20.29 \n      - PGSQL_USER=faraday_postgresql \n      - PGSQL_PASSWD=/run/secrets/pgsql_passwd \n      - PGSQL_DBNAME=faraday \n    secrets: \n      - pgsql_passwd \n    ports: \n      - 5985:5985 \n    volumes: \n      - ~/.faraday/storage:/faraday-storage \n    deploy: \n      replicas: 1 \n      placement: \n        constraints: [node.role == manager] \nsecrets: \n  pgsql_passwd: \n    external: true\n</code></pre></p> </li> </ol> <p>When Faraday runs as a service, PGSQL_PASSWD can be configured with Docker secrets (default in docker-compose.yml). The simplest way to create a secret is reading from standard input (you should take care of bash history). <pre><code>printf mypgsqlpassword | docker secret create pgsql_passwd -\n</code></pre> Once you have created the secret, edit you docker-compose.yml and set: <pre><code>vim docker-compose.yml\nversion: 'latest'\nservices:\n  ...\n  environment:\n    - PGSQL_PASSWD=/run/secrets/pgsql_passwd  \n  ...\n</code></pre> For more information about secrets, check Docker\u2019s web page</p> <p>With config volume mounted <pre><code>version: '4.02' \n\nservices: \n  server: \n    image: faradaysec/faraday:latest\n    ports: \n      - 5985:5985 \n    volumes: \n      - ~/.faraday/storage:/faraday-storage \n      - ~/.faraday/config:/faraday-config \n    deploy: \n      replicas: 1 \n      placement: \n        constraints: [node.role == manager] \n</code></pre> 3. Deploy: Once you are done setting up your docker-compile.yml file, lets deploy it by running the following command: <pre><code>docker stack deploy -c docker-compose.yml faraday\n</code></pre> 4. Check service: To check the service, run the following command: <pre><code> docker service ls\n docker service logs faraday_server\n</code></pre></p>"},{"location":"Install-guide-Docker/#web-ui","title":"Web UI","text":"<p>Once Faraday Server is running, you'll have to obtain the container's IP address. For this, run: <pre><code>   docker inspect $(docker ps -lq) | grep \\\"IPAddress\n</code></pre> This command will throw the following output: <pre><code>           \"IPAddress\": \"172.17.0.2\",\n           \"IPAddress\": \"172.17.0.2\",\n</code></pre></p> <p>Now you can direct your browser to http://172.17.0.2:5985/_ui/</p> <p>We highly recommend you to check our First Steps guide.</p>"},{"location":"Install-guide-Linux/","title":"Installation Guide for Ubuntu/Debian/Kali/CentOS/RedHat","text":""},{"location":"Install-guide-Linux/#postgresql","title":"PostgreSQL","text":"<p>Install PostgreSQL &gt;= 9.6 (local or remote) Follow the installation guide from PostgreSQL site for:</p> <ul> <li> <p>Ubuntu</p> </li> <li> <p>Debian</p> </li> <li> <p>Redhat</p> </li> </ul>"},{"location":"Install-guide-Linux/#redis","title":"Redis","text":"<p>Install Redis using apt-get</p> <p><pre><code>apt-get install redis-server\n</code></pre> Then add into the server.ini(/faraday/.faraday/config):</p> <pre><code>redis_session_storage = localhost\n</code></pre>"},{"location":"Install-guide-Linux/#installing-faraday","title":"Installing Faraday","text":""},{"location":"Install-guide-Linux/#step-1-downloading-faraday-installer","title":"Step 1 - Downloading Faraday Installer","text":"<p>To download Faraday installer (.deb or .rpm)  </p> <ul> <li> <p>GitHub for Community Edition  </p> </li> <li> <p>Faraday Portal for Professional/Corporate</p> </li> </ul>"},{"location":"Install-guide-Linux/#step-2-installing-the-package","title":"Step 2 - Installing the package","text":"<p>Go to your Download directory and run the following command <pre><code>sudo dpkg -i ./faraday-server_amd64.deb\n</code></pre>   or <pre><code>sudo apt install ./faraday-server_amd64.rpm\n</code></pre></p>"},{"location":"Install-guide-Linux/#step-3-adding-user-to-faraday-group","title":"Step 3 - Adding User to faraday Group","text":"<p>Once installed, add your user to the faraday group and re-login</p> <pre><code>sudo usermod -aG faraday $USER\n</code></pre>"},{"location":"Install-guide-Linux/#step-4-initializing-the-database-first-time-only","title":"Step 4 - Initializing the Database (first time only)","text":"<p>This will generate a random password, use it for Faraday Web UI and change it  </p> <pre><code>faraday-manage initdb\n</code></pre>"},{"location":"Install-guide-Linux/#importing-license-professionalcorporate-only","title":"Importing License (Professional/Corporate only)","text":"<pre><code>faraday-manage import-license\n</code></pre>"},{"location":"Install-guide-Linux/#running-faraday","title":"Running Faraday","text":"<p>Start Faraday server by running:  </p> <pre><code>sudo systemctl start faraday-server\n</code></pre> <p>We highly recommend you to check our First Steps guide.</p>"},{"location":"Install-guide-Redhat-8/","title":"RedHat8","text":""},{"location":"Install-guide-Redhat-8/#before-installation","title":"Before installation","text":"<p>Please note that PostgreSQL YUM repository and Faraday, depend on EPEL repository for some packages. Users with RHEL, CentOS, etc. should install EPEL repo RPM along with PGDG repo RPMs to satisfy dependencies. In order to do that, follow these instructions:</p> <p>If you are using RHEL, first run the following command: </p> <p>Install EPEL using the following command: <pre><code>yum -y install https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm\n</code></pre> Refresh repo by typing the following command:  <pre><code>yum repolist\n</code></pre></p>"},{"location":"Install-guide-Redhat-8/#redis","title":"Redis","text":"<p>Install Redis using apt-get</p> <p><pre><code>sudo yum install redis\n</code></pre> Then add into the server.ini(/faraday/.faraday/config):</p> <pre><code>redis_session_storage = localhost\n</code></pre>"},{"location":"Install-guide-Redhat-8/#redhat8-installation-guide","title":"RedHat8 Installation Guide","text":"<ol> <li> <p>Install PostgreSQL &gt;= 9.6 (local or remote).    Follow the Postgres installation guide for Redhat: Postgres(RedHat)  </p> </li> <li> <p>Download Faraday installer (.rpm)  </p> <ul> <li>GitHub for Community Edition  </li> <li>Faraday Portal for Professional/Corporate</li> </ul> </li> <li>Go to your Download directory and run the following command <pre><code>sudo yum install ./faraday-server_amd64.rpm\n</code></pre> <p>    If PostgreSQL is running in a remote machine please follow these instructions, if instead, it is running locally, you need to open the pg_hba.conf file. </p> </li> </ol> <p>There, you need to modify the localhost authentication type from \"ident\" to \"md5\". To do this, change host IPV4 local and IPV6 local from \"ident\" to \"md5\".</p> <ol> <li>Go to file: <pre><code>$ nano /var/lib/pgsql/POSTGRESQL_VERSION/data/pg_hba.conf  \n</code></pre> Edit the following lines: <pre><code># IPv4 local connections:\nhost all         all 127.0.0.1/32       md5\n# IPv6 local connections:\nhost all         all ::1/128       md5\n</code></pre></li> <li> <p>Once installed, add your user to the faraday group and re-login <pre><code>sudo usermod -aG faraday $USER\n</code></pre></p> </li> <li> <p>Restart PostgreSQL server and initialize the database(first time only)     This will generate a random password, use it for Faraday Web UI and change it <pre><code>sudo systemctl restart postgresql-XX\n</code></pre> <pre><code>sudo faraday-manage initdb\n</code></pre></p> </li> </ol> <p> Important: In case of being in a SELinux environment run:  <pre><code>sudo setenforce 0\n</code></pre></p>"},{"location":"Install-guide-Redhat-8/#importing-license","title":"Importing License","text":""},{"location":"Install-guide-Redhat-8/#step-1","title":"Step 1","text":"<p>Import license from Faraday Portal (Professional/Corporate only) <pre><code>faraday-manage import-license\n</code></pre></p>"},{"location":"Install-guide-Redhat-8/#step-2","title":"Step 2","text":"<ol> <li>Start Faraday server by running: <pre><code>sudo systemctl start faraday-server\n</code></pre></li> </ol> <p>We highly recommend you to check our First Steps guide.</p>"},{"location":"Install-guide-Troubleshooting/","title":"Troubleshooting","text":""},{"location":"Install-guide-Troubleshooting/#pypigithub","title":"PyPI/GitHub","text":"<p>If you're getting the following error:</p> <pre><code>    Complete output from command python setup.py egg_info:\n    running egg_info\n    creating pip-egg-info/psycopg2.egg-info\n    writing pip-egg-info/psycopg2.egg-info/PKG-INFO\n    writing dependency_links to pip-egg-info/psycopg2.egg-info/dependency_links.txt\n    writing top-level names to pip-egg-info/psycopg2.egg-info/top_level.txt\n    writing manifest file 'pip-egg-info/psycopg2.egg-info/SOURCES.txt'\n    Error: b'You need to install postgresql-server-dev-NN for building a server-side extension or libpq-dev for building a client-side application.\\n'\n\n    ----------------------------------------\nCommand \"python setup.py egg_info\" failed with error code 1 in /tmp/pip-install-mkj8d84u/psycopg2/\n</code></pre> <p>If you never install PostgreSQL before, you must install it first, by doing this:</p> <p><pre><code>sudo apt install postgresql-12\n</code></pre> or  <pre><code>sudo yum install postgresql-12\n</code></pre></p> <p>Once you installed this, run the pip3 command again.</p> <p><pre><code>pip3 install faradaysec\n</code></pre> or <pre><code>pip3 install .\n</code></pre></p>"},{"location":"Install-guide-Troubleshooting/#nix","title":"Nix","text":"<p>directory /nix exists, but is not writable by you</p> <p>If you never install Nix before, this error appears because you have installed Faraday server or client .deb or .rpm on the system.  You must uninstall it first, by doing this:</p> <p><pre><code>sudo apt remove faraday-server\n</code></pre> Once you uninstalled this, remove /nix directory and then run the Nix install again.</p> <pre><code>sudo rm -rf /nix\n</code></pre> <p>Error: while setting up the build environment: mounting /proc: Operation not permitted</p> <p>This happens when running Nix on a container like LXC or similar. In theses cases, you should disable the sandbox.</p> <p>First, create the following file:</p> <pre><code>~/.config/nix/nix.conf\n</code></pre> <p>Run the following command to add the flag to the file:</p> <pre><code>echo 'sandbox = false' &gt;&gt; ~/.config/nix/nix.conf\n</code></pre> <p>The, run the Nix install again.</p>"},{"location":"Install-guide-community/","title":"Community","text":""},{"location":"Install-guide-community/#install-guide","title":"Install Guide","text":"<p>In order to install Faraday Community version, you can use pip to install Faraday or you can clone the repository. Additionally you can either use our docker-compose.yml file that will install all in one place.</p>"},{"location":"Install-guide-community/#install-using-docker","title":"Install using Docker","text":"<p><pre><code>git clone git@github.com:infobyte/faraday.git\ndocker-compose up -d\n</code></pre> then run the following to check if the pod is running:</p> <pre><code>docker-compose ps\n</code></pre>"},{"location":"Install-guide-community/#startup-docker-postgres","title":"Startup docker postgres","text":"<pre><code>docker pull postgres\ndocker run --name some-postgres -e POSTGRES_PASSWORD=mysecretpassword -d postgres\n</code></pre>"},{"location":"Install-guide-community/#installation-from-pypi","title":"Installation from PyPI","text":"<p>You can install Faraday from PyPI by running the following command:</p> <pre><code>pip3 install faradaysec\n</code></pre>"},{"location":"Install-guide-community/#installation-from-using-pip-from-source","title":"Installation from using pip from source","text":"<pre><code>git clone git@github.com:infobyte/faraday.git\ncd faraday\npip install .\n</code></pre>"},{"location":"Install-guide-community/#after-installation","title":"After Installation","text":"<p>Once the installation is completed, make sure you have a PostgreSQL (local or remote)</p> <p>Then initialize the database This will generate a random password, use it for Faraday Web UI and change it <pre><code>faraday-manage initdb\n</code></pre></p> <p>Start Faraday server by running:</p> As a service <pre><code>sudo systemctl start faraday-server\n</code></pre> As a process <pre><code>faraday-server\n</code></pre> <p>We highly recommend you to check our First Steps guide.</p>"},{"location":"Jinja2-context/","title":"Jinja2 Context json","text":"<p>These are examples of jinja2 static dataset usage. You can access this information from the docx template.</p> <p>Info</p> <p>Executive reports use jinja for rendering the report, check jinja documentation for more details.</p>"},{"location":"Jinja2-context/#report-context","title":"Report Context","text":"Generic <p>This report lists all vulnerabilities of the workspace. <pre><code>{\n    \"counter_severity\": &lt;severities dict&gt;,\n    \"date\": &lt;datetime&gt;,\n    \"enterprise\": format_text_docxtpl_patch(report.enterprise),\n    \"hosts\": &lt;list host&gt;,\n    \"hosts_amount\": &lt;int&gt;,\n    \"overview_images\": &lt;image&gt;,\n    \"vulnerabilities_image\": &lt;image&gt;,\n    \"ease_resolution_image\": &lt;image&gt;,\n    \"impact_image\": &lt;image&gt;,\n    \"services\": &lt;list service&gt;,\n    \"services_amount\": &lt;int&gt;,\n    \"title\": &lt;str&gt;,\n    \"vulns\": &lt;list of vuln&gt;,\n    \"vulns_amount\": &lt;int&gt;,\n    \"workspace\": &lt;workspace_object&gt;,\n   \"conclusions\": &lt;string&gt;,\n    \"objectives\": &lt;string&gt;,\n    \"recommendations\": &lt;string&gt;,\n    \"scope\": &lt;string&gt;,\n    \"summary\": &lt;string&gt;,\n    \"methodologies\": [&lt;methodology&gt;]\n}\n</code></pre></p> Grouped <p>This type of report groups the data using the name and description of the vulnerability. vulns_grouped_amount number of vulnerabilities in the group. <pre><code>{\n    \"counter_severity\": &lt;dict severities&gt;,\n    \"date\": &lt;datetime&gt;,\n    \"enterprise\": format_text_docxtpl_patch((report.enterprise)),\n    \"hosts\": &lt;list host&gt;,\n    \"hosts_amount\": &lt;int&gt;,\n    \"overview_images\": &lt;image&gt;,\n    \"vulnerabilities_image\": &lt;image&gt;,\n    \"ease_resolution_image\": &lt;image&gt;,\n    \"impact_image\": &lt;image&gt;,\n    \"services\": &lt;list service&gt;,\n    \"services_amount\": &lt;int&gt;,\n    \"title\": &lt;str&gt;,\n    \"vulns\": &lt;list of vuln&gt;,\n    \"vulns_amount\": &lt;int&gt;,\n    \"vulns_grouped_amount\": &lt;int&gt;,\n    \"workspace\":&lt;str&gt;,\n    \"conclusions\": &lt;string&gt;,\n    \"objectives\": &lt;string&gt;,\n    \"recommendations\": &lt;string&gt;,\n    \"scope\": &lt;string&gt;,\n    \"summary\": &lt;string&gt;,\n    \"methodologies\": [&lt;methodology&gt;]\n}\n</code></pre></p> <p>Inside each Template, in either of the two report Dataset, we can use these variables:</p> Host <pre><code>{\n'_rev': '',\n'type': 'Host',\n'_id': 1,\n'versions': [],\n'owned': False,\n'mac': &lt;str&gt;,\n'os': 'Linux Kernel 3.8',\n'owner': None,\n'services': 1,\n'ip': '127.0.0.1',\n'default_gateway': '',\n'service_summaries': ['(80/tcp) www'],\n'tags': ['QA'],\n'credentials': 0,\n'description': '',\n'name': '127.0.0.1',\n'hostnames': ['localhost'],\n'metadata': {'create_time': &lt;datetime&gt;,\n'update_time': &lt;datetime&gt;,\n'creator': '',\n'update_controller_action': '',\n'owner': None,\n'command_id': None,\n'update_action': 0,\n'update_user': None},\n'id': 1,\n'vulns': 91\n}\n</code></pre> Service <pre><code>{\n'_rev': '',\n'type': 'Service',\n'_id': 1,\n'owned': False,\n'summary': '(80/tcp) http',\n'version': 'unknown',\n'parent': 4,\n'owner': None,\n'tags': ['QA'],\n'protocol': 'tcp',\n'credentials': 0,\n'port': &lt;int&gt;,\n'description': '',\n'name': 'http',\n'host_id': 4,\n'ports': 80,\n'metadata': {'create_time': &lt;datetime&gt;,\n'update_time': &lt;datetime&gt;,\n'creator': '',\n'update_controller_action': '',\n'owner': None,\n'command_id': None,\n'update_action': 0,\n'update_user': None},\n'id': 1,\n'vulns': 1,\n'status': 'open'\n}\n</code></pre> Vulnerability <pre><code>{\n'data': &lt;SubDoc&gt;,\n'vulnerability_duplicate_id': None,\n'confirmed': False,\n'_rev': '',\n'easeofresolution': None,\n'childs': [],\n'type': 'Vulnerability',\n'_id': 1,\n'severity': 'med',\n'refs': ['CVSS: 3.2'],\n'date': &lt;datetime&gt;,\n'owned': False,\n'parent': 1,\n'policyviolations': [],\n'resolution': 'Resolution text',\n'owner': None,\n'service': {'version': 'unknown',\n'name': 'postgresql',\n'protocol': 'tcp',\n'ports': 80,\n'_id': 1,\n'summary': '(80/tcp) http',\n'status': 'open'},\n'issuetracker': {},\n'update_user': None,\n'external_id': '1233',\n'tags': [],\n'vulnerability_template_id': None,\n'impact': {'accountability': False,\n'confidentiality': False,\n'integrity': False,\n'availability': False},\n'obj_id': '1',\n'custom_fields': {'list': None, 'integer': None, 'choice': None},\n'parent_type': 'Service',\n'description': 'Description',\n'host_os': 'Linux Kernel 4.8',\n'name': 'Vulnerability title',\n'_attachments': {},\n'hostnames': ['localhost'],\n'desc': &lt;SubDoc&gt;,\n'target': '127.0.0.1',\n'metadata': {'create_time': &lt;datetime&gt;,\n'update_time': &lt;datetime&gt;,\n'creator': 'OpenVAS',\n'update_controller_action': '',\n'owner': None,\n'command_id': 1,\n'update_action': 0,\n'update_user': None},\n'status': 'opened',\n'id': 1,\n'__target__': '127.0.0.1 / 80 / tcp'\n}\n</code></pre>"},{"location":"LDAP-OKTA/","title":"LDAP with OKTA","text":"<p>Here are the steps to integrate LDAP to Faraday using OKTA:</p> <p>Step 1: Navigate to OKTA's website.</p> <p>Step 2: Sing up.</p> <p>Remember your user and workdomain from user@workdomain.com</p> <p>Step 3: Okta will send you an e-mail with the URL and your temporary password, use those to log-in into Okta.</p> <p>Step 4: Enter to the Directory Integrations Label from your Okta URL.</p> <p>Step 5: Click Add LDAP Interface</p> <p></p> <p>Step 6: Configure your Faraday Server. </p> <p>Run the following command:</p> <p><pre><code>faraday-manage settings -a update ldap\n</code></pre> <pre><code>enabled = true\nserver = &lt;domain&gt;.ldap.okta.com\ndomain_dn = OU=users, DC=&lt;domain&gt;, DC=okta, DC=com\ndomain =&lt;domain&gt;.okta.com\nadmin_group = fadmin\npentester_group = fpentester\nasset_owner_group = fassetowner\nclient_group = fclient\nuse_ldaps = true\nuse_start_tls = false\nport = 636\ndisconnect_timeout = 2.0\nuse_local_roles = true\ndefault_local_role = admin\nbind_format = DN\nbind_dn = dc=&lt;domain&gt;,dc=okta,dc=com\n</code></pre></p> <p>Check our LDAP Article if you need more info.</p> <p>Step 7: Restart Faraday Server with:</p> <pre><code>systemctl restart faraday-server\n</code></pre> <p>Step 8: Login into Faraday with the User and Password you used to login into Okta.</p> <p>Info</p> <p>(Remember you can only access as an Admin user and you can't create more users).</p>"},{"location":"LDAP/","title":"LDAP","text":"<p>LDAP Users</p> <p>For the time being Faraday doesn't support a hybrid installation using both LDAP and local users. Enabling LDAP disables local users and vice versa.</p> <p>In order to configure LDAP, run the following command:</p> <pre><code>faraday-manage settings -a update ldap\n</code></pre> <p>Then update every field according to the configuration on-prem.</p> <pre><code>$ faraday-manage settings -a update ldap\nUpdate settings for: ldap\nenabled [False]:\nuse_local_roles [True]:\ndefault_local_role [admin]:\nadmin_group []:\nasset_owner_group []:\nclient_group []:\npentester_group []:\ndisconnect_timeout [2.0]:\nserver []:\nport [389]:\nuse_ldaps [False]:\nuse_start_tls [False]:\ndomain []:\ndomain_dn []:\nbind_format [CN]:\nbind_dn []:\nuser_class [user]:\nuser_attribute [sAMAccountName]:\ngroup_class [group]:\npaginated_fetch [False]:\nDo you confirm your changes on ldap?\n</code></pre> <p>Remember to restart the server after doing changes!</p> <pre><code>systemctl restart faraday-server\n</code></pre> <p>Warning</p> <p>If use_local_roles is set to true, any user on the AD will be allowed to use Faraday.</p>"},{"location":"NGINX-Setup/","title":"NGINX (SSL Config)","text":"<p>The recommended way to run Faraday is using SSL via Nginx</p> <p>If you use NGINX you need to generate swagger config to let it work over the domain</p> <p><code>faraday-manage openapi-swagger --server https://your-fqdn-for-faraday.com</code></p>"},{"location":"NGINX-Setup/#nginx","title":"Nginx","text":"<p>New Faraday release 4.1.0 can generate a ngnix configuration for you</p>"},{"location":"NGINX-Setup/#installing-nginx","title":"Installing Nginx","text":"<p>You can find a detailed guide on how to install nginx  in the official Nginx documentation</p>"},{"location":"NGINX-Setup/#configure-nginx","title":"Configure NGINX","text":"<p>After installing and configuring NGINX, Faraday's setup should be as follows:</p> <pre><code>Faraday Server on port 5985 using HTTP. You can find this configuration inside the file ~/.faraday/config/server.ini in section [faraday_server].\nWeb UI using https://example_domain:port/\n</code></pre> <p>Note: For both cases, NGINX on port 80 redirecting to HTTPS.</p>"},{"location":"NGINX-Setup/#generating-certificates","title":"Generating Certificates","text":"<p>In order to generate self signed certificates, run the following command:</p> <pre><code>sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/ssl/faraday.key -out /etc/ssl/faraday.crt\n</code></pre> <p>Be sure to type the Common Name of this certificate. If you don't type a Common Name, then Faraday will not be launched.</p> <p>For further information about certificates, follow this link.</p>"},{"location":"NGINX-Setup/#sample-configuration-files","title":"Sample Configuration Files","text":"<p>Below you can find a sample config files for NGINX. You can use this same configuration by pasting it inside the folder /etc/nginx/sites-enabled/ or in conf.d and naming the file as you want. <pre><code>faraday-manage generate-nginx-config --fqdn faraday.mydomain.com --port 5985 --ws-port 9000 --ssl-certificate /etc/ssl/faraday.crt --ssl-key /etc/ssl/faraday.key\n</code></pre> <pre><code>Generating Faraday nginx config for server: faraday.mydomain.com\nFaraday\n- Port: 5985\n- Websocket Port: 9000\nSSL: certificate [/etc/ssl/faraday.crt] - key [/etc/ssl/faraday.key ]\nConfirm [Y/n]: y\nNGINX Config\n#####################################\n\n\n# Expires map\nmap $sent_http_content_type $expires {\n    default                    off;\n    text/html                  max;\n    text/css                   max;\n    application/javascript     max;\n    ~image/                    max;\n}\n\nserver {\n    server_name faraday.mydomain.com;\n    listen 443 ssl http2;\n\n    add_header Strict-Transport-Security \"max-age=31536000; includeSubDomains; preload\" always;\n    add_header X-XSS-Protection \"1; mode = block\";\n    add_header X-Frame-Options \"SAMEORIGIN\";\n    add_header X-Content-Type-Options nosniff;\n    client_max_body_size 150M;\n\n    ssl on;\n    ssl_session_cache shared:SSL:50m;\n    ssl_certificate           /etc/ssl/faraday.crt;\n    ssl_certificate_key       /etc/ssl/faraday.key\n    gzip on;\n    gzip_types application/javascript text/css;\n    expires $expires;\n\n    location / {\n        alias /opt/faraday/lib/python3.8/site-packages/faraday/server/www/;\n    }\n\n    location /_api/ {\n        proxy_pass http://localhost:5985/_api/;\n        proxy_redirect http:// $scheme://;\n        proxy_read_timeout 300;\n        proxy_cookie_path / \"/; secure\";\n\n        proxy_set_header Host $host;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Ssl on;\n        proxy_set_header X-Forwarded-Proto $scheme;\n    }\n\n    location /websockets {\n        proxy_http_version 1.1;\n        proxy_pass http://localhost:9000/websockets;\n\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection \"upgrade\";\n    }\n}\n\nserver {\n    server_name faraday.mydomain.com;\n    listen 80 ;\n\n    # https redirect\n    if ($host = faraday.mydomain.com) {\n        return 301 https://$host$request_uri;\n    }\n\n    return 404;\n}\n</code></pre></p> <p>Now you can access to <code>https://faraday.mydomain.com</code></p>"},{"location":"Pipelines/","title":"Pipelines and jobs","text":"<p>We were thinking on a pain solver in case of importing manually files, or working with the vulnerabilities massively in your Workspace. </p> <p>Faraday created pipelines designed exclusively to automate and change vulnerabilities applying custom Job rules, according to patterns inside a name or any attribute inside a Vulnerability.</p> <p>The hierarchy will be Jobs are run inside Pipelines. The first view will show in the left the pipelines, and clicking on one title, will show the configuration of each.</p> <p></p> <p>Jobs will run sequentially inside a Pipeline to a Target Workspace. If you click on Create New the Jobs view will be opened.</p> <p></p> <p>In this view is needed to setup a Name, Description and Object and Attributes.</p> <p>Based on Two models, Assets and Vulnerability. it can be added Rules and Tasks</p> <p>Rules are sets of attributes based on the vulnerability, such as Name, Description, Tag, etc.  The operators for the rules are equal, not equal and contains, using the operators the rule can be created.</p> <p></p> <p>The Tasks contain Actions these can be Update, Append and Delete the object. The last option will delete the object that matches the condition, this is used to Delete the Vulnerability. The action Update will select a Field based on this condition and update it to the value selected in the Action to the desired Value. Append is useful to create an attribute such as Tag, Comment or Policy Violation. in Case of Comments a user can be addressed with a \"@\" symbol.</p> <p></p> <p>Click on Save on the up right Corner.</p> <p>Select The Target Workspace and click on Save</p> <p></p> <p>From the Enable slide the pipeline can be either enabled or disabled, and from the Run Button the pipeline can be manually triggered.</p> <p></p>"},{"location":"Planner/","title":"Planner","text":"<p>Organize your vulnerabilities and get work done easily and comfortably without using any extra platforms. Be more productive and share work with your team. Task assignment, status, alerts, and more: manage the progress of your vulnerabilities in one place.</p> <p>The overview page can be accessed using the planner icon .</p> <p>The sections are divided by Project, inside project Tasks/Milestones can be created, those can be assigned to users, and have dependencies.</p> <p></p> <p>The Task can be appended hovering in a project and clicking on the Add Task Button.</p> <p></p> <p>The task can contain values such start/end date, progress, description and Assigned users and Dependencies</p> <p></p> <p>Click on Create and the task will be assigned inside the Project</p> <p>A task can have linked Vulnerabilities, from the Quick Planner module from Vulnerabilies view</p> <p>Refer to Vulnerability view document to assign a vulnerabilty to a task from the Quick Planner view.</p>"},{"location":"Plugin-List-v4/","title":"Supported-Plugins","text":"<p>The main purpose of Faraday is to re-use the available tools in the community to take advantage of them in a multiuser way.</p> <p>You break it. We keep track of the pieces!</p> <p>To maximize flexibility Faraday Plugins run only on the client, which means you can have custom, private plugins all for yourself!</p> <p>There are three kinds of plugins available for Faraday; console, report and API also called online. However, these are not mutually exclusive, meaning that some tools have more than one Plugin to process their output. For example, Nmap has a Console plugin which allows you to run it directly from ZSH, but it also has a Report one, in order to import scans that were run outside of Faraday.</p>"},{"location":"Plugin-List-v4/#console","title":"Console","text":"<p>Check Faraday-Cli to use this feature!</p> <p>Plugins that intercept commands, fired directly when a command is detected in the console. These are transparent to you and no additional action on your part is needed.</p>"},{"location":"Plugin-List-v4/#report","title":"Report","text":"<p>Use the web UI to import reports. Check this Article! </p>"},{"location":"Plugin-List-v4/#api","title":"API","text":"<p>Plugin connectors or online (BeEF, Metasploit, Burp), these connect to external APIs or databases, or talk directly to Faraday's API.</p>"},{"location":"Plugin-List-v4/#custom","title":"Custom","text":"<p>If you think your favourite tool is missing code your own plugin or ask us to do it!</p> <p>The following table contains name, id, command or report, in the case of command it is that the command can be used inside faraday-cli and it gets imported into faraday after the run, for report it means that the file can be imported in the Faraday IU.</p> Name ID Command Report Acunetix XML Output Plugin Acunetix No Yes Acunetix360 Output Plugin Acunetix360 No Yes Acunetix JSON Output Plugin Acunetix_Json No Yes Amap Output Plugin Amap Yes No Appscan XML Plugin Appscan No Yes Appscan CSV Output Plugin Appscan_CSV No Yes AppSpider XML Output Plugin AppSpider No Yes Arachni XML Output Plugin Arachni Yes Yes arp-scan network scanner arp-scan Yes No Bandit XML Output Plugin Bandit No Yes BeEF Online Service Plugin Beef Yes No brutexss brutexss Yes No Burp XML Output Plugin Burp No Yes Checkmarx XML Output Plugin Checkmarx No Yes CIS XML Output Plugin CIS No Yes Cobalt CSV Output Plugin Cobalt No Yes DiG dig Yes No Dirb dirb Yes No dirsearch dirsearch Yes No Dnsenum XML Output Plugin Dnsenum Yes No Dnsmap Output Plugin Dnsmap Yes No Dnsrecon XML Output Plugin Dnsrecon Yes No Dnswalk XML Output Plugin Dnswalk Yes No Faraday CSV Plugin faraday_csv No Yes Fierce Output Plugin Fierce Yes No Fortify XML Output Plugin Fortify No Yes Ftp ftp Yes No Goohost XML Output Plugin Goohost Yes No Grype JSON Plugin grype Yes Yes hping3 Hping3 Yes No Hydra XML Output Plugin Hydra Yes No Core Impact XML Output Plugin CoreImpact No Yes Invicti XML Output Plugin Invicti No Yes Ip360 CSV Output Plugin Ip360 No No Junit XML Output Plugin Junit No Yes Lynis DAT Output Plugin Lynis Yes Yes Maltego MTGX &amp; MTGL Output Plugin Maltego No Yes Microsoft Baseline Security Analyzer MBSA No Yes Medusa Output Plugin Medusa Yes No Metasploit XML Output Plugin Metasploit No Yes Naabu naabu Yes Yes ncrack XML Plugin ncrack No Yes ndiff Ndiff Yes No Nessus XML Output Plugin Nessus No Yes Nessus Sc Output Plugin Nessus_sc No Yes netdiscover Netdiscover Yes No Netsparker XML Output Plugin Netsparker No Yes NetsparkerCloud XML Output Plugin NetsparkerCloud No Yes Nexpose XML 2.0 Report Plugin NexposeFull No Yes nextnet nextnet Yes No Nikto XML Output Plugin Nikto Yes Yes Nipper XML Output Plugin Nipper No Yes Nmap XML Output Plugin Nmap Yes Yes Nuclei nuclei Yes Yes Nuclei nuclei_legacy Yes Yes OpenScap XML Output Plugin OpenScap No Yes Openvas XML Output Plugin Openvas No Yes pasteAnalyzer JSON Output Plugin pasteAnalyzer Yes No PeepingTom peepingtom Yes No Pentera Json Output Plugin Pentera_Json No Yes Ping ping Yes No propecia port scanner propecia Yes No Prowler prowler No Yes Qualysguard XML Output Plugin Qualysguard No Yes QualysWebapp XML Output Plugin QualysWebapp No Yes rdpscan rdpscan Yes No Reconng XML Output Plugin Reconng No Yes Retina XML Output Plugin Retina No Yes Reverseraider XML Output Plugin Reverseraider Yes No Semgrep Json Semgrep_JSON No Yes Shodan shodan Yes Yes Skipfish Output Plugin Skipfish Yes No SonarQube API Plugin sonarqubeAPI No Yes Sourceclear sourceclear No Yes sshdefaultscan sshdefaultscan Yes No SSL Labs ssllabs No Yes Sslyze Plugin Sslyze_XML No Yes Sslyze Json Sslyze_JSON Yes Yes Syhunt XML Plugin Syhunt No Yes Telnet Telnet Yes No Theharvester XML Output Plugin Theharvester Yes No Traceroute Traceroute Yes No Trivy JSON Output Plugin Trivy_Json No Yes W3af XML Output Plugin W3af Yes Yes Wapiti XML Output Plugin Wapiti Yes Yes Wcscan XML Output Plugin Wcscan Yes No Webfuzzer Output Plugin Webfuzzer Yes No Webinspect Webinspect No Yes Wfuzz Plugin Wfuzz Yes No WhatWebPlugin whatweb No Yes whitesource whitesource No Yes Whois whois Yes No WPscan wpscan Yes Yes Onapsis X1 XML Output Plugin X1 Yes Yes xsssniper xsssniper Yes No Zap XML Output Plugin Zap No Yes <p>References to the Tools:</p> <ul> <li>Acunetix (REPORT) (XML)</li> <li>Amap (CONSOLE)</li> <li>Appscan (REPORT)</li> <li>AppSpider (REPORT)</li> <li>Arachni (REPORT, CONSOLE) (XML)</li> <li>arp-scan (CONSOLE)</li> <li>AWS Prowler (REPORT)</li> <li>Bandit (REPORT)</li> <li>BeEF (API)</li> <li>Brutexss (REPORT)</li> <li>Burp, BurpPro (REPORT, API) (XML)</li> <li>Core Impact, Core Impact (REPORT) (XML)</li> <li>Dig (CONSOLE)</li> <li>Dirb (CONSOLE)</li> <li>Dirsearch (REPORT,CONSOLE)</li> <li>Dnsenum (CONSOLE)</li> <li>Dnsmap (CONSOLE)</li> <li>Dnsrecon (CONSOLE)</li> <li>Dnswalk (CONSOLE)</li> <li>evilgrade (API)</li> <li>Fierce (CONSOLE, REPORT)</li> <li>Fortify (REPORT)</li> <li>Fruitywifi (API)</li> <li>ftp (CONSOLE)</li> <li>Goohost (REPORT, CONSOLE) (XML)</li> <li>hping3 (CONSOLE)</li> <li>Hydra (CONSOLE) (XML)</li> <li>Ip360 (REPORT)</li> <li>Junit (REPORT)</li> <li>Lynis (REPORT)</li> <li>Maltego (REPORT)</li> <li>Microsoft Baseline Security Analyzer (REPORT)</li> <li>Medusa (CONSOLE)</li> <li>Metasploit, (REPORT, API) (XML) XML report</li> <li>Naabu (CONSOLE) (REPORT)</li> <li>Ncrack (REPORT)</li> <li>Ndiff (REPORT, CONSOLE)</li> <li>Nessus, (REPORT) (XML .nessus)</li> <li>Netdiscover (CONSOLE)</li> <li>Netsparker (REPORT) (XML)</li> <li>Netsparker Cloud (REPORT)</li> <li>Nexpose, Nexpose Enterprise, (REPORT) (simple XML, XML Export plugin (2.0))</li> <li>NextNet (CONSOLE)</li> <li>Nikto (REPORT, CONSOLE) (XML)</li> <li>Nipper (REPORT)</li> <li>Nmap (REPORT, CONSOLE) (XML)</li> <li>Nuclei (REPORT)</li> <li>OpenScap (REPORT)</li> <li>Openvas (REPORT) (XML)</li> <li>PasteAnalyzer (CONSOLE)</li> <li>Peeping Tom (CONSOLE)</li> <li>ping (CONSOLE)</li> <li>propecia (CONSOLE)</li> <li>Qualysguard (REPORT) (XML)</li> <li>QualysWebApp (REPORT)</li> <li>rdpscan (CONSOLE)</li> <li>Recon-NG (REPORT)</li> <li>Retina (REPORT) (XML)</li> <li>Reverseraider (CONSOLE)</li> <li>Shodan (API)</li> <li>Skipfish (CONSOLE)</li> <li>SonarQube (REPORT)</li> <li>SourceClear (REPORT)</li> <li>SSHdefaultscan (CONSOLE)</li> <li>SSL Labs (REPORT)</li> <li>SSLyze (REPORT, CONSOLE) (XML)</li> <li>Sublist3r (REPORT,CONSOLE)</li> <li>Telnet (CONSOLE)</li> <li>Theharvester (CONSOLE)</li> <li>Traceroute (CONSOLE)</li> <li>W3af (REPORT) (XML)</li> <li>Wapiti (CONSOLE)</li> <li>Wcscan (CONSOLE)</li> <li>WebInspect (REPORT,CONSOLE)</li> <li>Wfuzz (CONSOLE)</li> <li>Wfuzz (CONSOLE)</li> <li>WhatWebPlugin (REPORT)</li> <li>WhiteSource (REPORT)</li> <li>whois (CONSOLE)</li> <li>WPScan (CONSOLE)</li> <li>Xsssniper (REPORT)</li> <li>X1, Onapsis (REPORT) (XML)</li> <li>Zap (REPORT) (XML)</li> </ul>"},{"location":"RELEASE/","title":"New features in the latest update","text":""},{"location":"RELEASE/#430-dec-1st-2022","title":"4.3.0 [Dec 1st, 2022]:","text":"<ul> <li>[FIX] Update the associated command when a agent execution return empty</li> <li>[ADD] cvss3 scope field to vulnerability schema</li> <li>[ADD] Add cvss\u2154 and cwe to export_csv</li> <li>Improve command object creation in bulk create.</li> <li>Fix open and closed stats in ws filter endpoint.</li> <li>Add error command status in every validation of reports upload process</li> <li>[ADD] BulkDelete with filters</li> <li>Change filter logic on numeric fields.</li> </ul>"},{"location":"RELEASE/#420-oct-27th-2022","title":"4.2.0 [Oct 27th, 2022]:","text":"<ul> <li>Add <code>stats</code> param in hosts endpoint.</li> <li>[FIX] Now get agents doesn't returns tokens</li> <li>[FIX] Now when a constraint is violated faraday use the actual object to query if there is another object</li> <li>[MOD] Improve agents logs</li> <li>Add global commands and summary field in command's model</li> </ul>"},{"location":"RELEASE/#410-sep-12th-2022","title":"4.1.0 [Sep 12th, 2022]:","text":"<ul> <li>Now error 403 will respond a json, not a html</li> <li>[FIX] Change resolve_hotname for resolve_hostname in agents</li> <li>Add filters as params for bulk_update</li> <li>Add Swagger view</li> <li>Modify way of filtering dates with <code>filters</code>. Now only 'YYYYMMDD' format supported.</li> <li>Add cvss v2 and v3 into model and api</li> <li>[ADD] Now if command_id is sent in a post for hosts, services or vulns, the created object is associated with that command_id if exist</li> <li>Add support for tagging when running an agent</li> <li>Clean up of commented code that's not needed anymore</li> <li>[FIX] Change dns_resolution to resolve_hostname</li> <li>Add CWE into model and api</li> </ul>"},{"location":"RELEASE/#404-jul-28th-2022","title":"4.0.4 [Jul 28th, 2022]:","text":"<ul> <li>Remove workspaces agents relationship an now agent can run to multiple workspaces</li> <li>Fix migration f82a9136c408 checking if index and constrains exist before deleting</li> <li>Added count to vulns closed</li> <li>Fix order_by <code>cve_instances__name</code> when no filter was provided</li> <li>Add index into vulnerability</li> </ul>"},{"location":"RELEASE/#403-jun-16th-2022","title":"4.0.3 [Jun 16th, 2022]:","text":"<ul> <li>Replace usage of strings for user_types enumerator constants</li> <li>Increase the default duration of faraday token</li> <li>Fix order by Role in Filters API</li> <li>Refactor of bulk create API</li> <li>Remove attachments and attachments_count properties from vulnerability. This improves performance.</li> <li>Get token from user model</li> <li>Ignore info and dns resolution as params when uploading report</li> <li>Replace usage of is_ldap field of User model for user_type</li> <li>Add user type enumerator</li> <li>Add <code>weight</code> in role model to sort arbitrarily</li> <li>Move export CSV from its own endpoint to /filter endpoint as a request's argument</li> </ul>"},{"location":"RELEASE/#402-apr-4th-2022","title":"4.0.2 [Apr 4th, 2022]:","text":"<ul> <li>models.py refactor</li> <li>add check to see if workspace name is longer than 250 characters. In that case raises an error</li> <li>Generate token with pyjwt</li> </ul>"},{"location":"RELEASE/#401-mar-18th-2022","title":"4.0.1 [Mar 18th, 2022]:","text":"<ul> <li>Improve the logs</li> </ul>"},{"location":"RELEASE/#400-feb-25th-2022","title":"4.0.0 [Feb 25th, 2022]:","text":"<ul> <li>Add a None limit and 0 offset to GET queries.</li> </ul>"},{"location":"RELEASE/#3190-dec-27th-2021","title":"3.19.0 [Dec 27th, 2021]:","text":"<ul> <li>ADD v3 bulks endpoints DELETE and EDIT (PATCH)</li> <li>Add logs of loggin, logout and log error to main log</li> <li>Fix bug in bulk update for m2m fields</li> <li>ADD clear settings command</li> <li>Add open medium, high and critical vulns histogram</li> <li>Fix integrity constraint error on cve update</li> <li>FIX static content for react</li> <li>Add cvss within vulnerability model</li> <li>add check to see if workspace name is longer than 250 characters. In that case raises an error</li> <li>change concat in urlstrings for join or urljoin</li> <li>Add cve to csv export</li> </ul>"},{"location":"RELEASE/#3181-nov-5th-2021","title":"3.18.1 [Nov 5th, 2021]:","text":"<p>Fix CVE issue</p>"},{"location":"RELEASE/#3180-oct-21st-2021","title":"3.18.0 [Oct 21st, 2021]:","text":"<ul> <li>Remove attachments in vulns filter endpoint</li> <li>Add open and confirmed vulns in workspace stats</li> <li>Add migration disabling several notifications.</li> <li>Add user id to session API endpoint</li> <li>Add cve to vulnerability model</li> <li>Change funcs to views</li> <li>FIX report import</li> <li>Add <code>last_run_agent_date</code> field to workspace endpoint</li> <li>Fix cve parsing in <code>vulnerability create</code> and <code>bulk create</code></li> <li>ADD check if postgres db is running during server start</li> <li>Fix order_by in filters api</li> <li>Fix 500 status code with invalid executor arguments</li> </ul>"},{"location":"RELEASE/#3171-aug-20th-2021","title":"3.17.1 [Aug 20th, 2021]:","text":"<ul> <li>FIX bug when starting the server, creates a pool for reporting that breaks.</li> </ul>"},{"location":"RELEASE/#3170-aug-10th-2021","title":"3.17.0 [Aug 10th, 2021]:","text":"<ul> <li>ADD <code>--data</code> parameter to <code>faraday-manage settings</code></li> <li>MOD Process report files in a separate process</li> <li>MOD Make <code>bulk_create</code> requests asynchronous</li> </ul>"},{"location":"RELEASE/#3161-jul-2nd-2021","title":"3.16.1 [Jul 2nd, 2021]:","text":"<ul> <li>MOD only show settings of this version in faraday-manage settings</li> <li>FIX update minimum version of click dependency</li> </ul>"},{"location":"RELEASE/#3160-jun-29th-2021","title":"3.16.0 [Jun 29th, 2021]:","text":"<ul> <li>BREAKING CHANGE: API V2 discontinued</li> <li>BREAKING CHANGE: Changed minimum version of python to 3.7</li> <li>ADD agent parameters has types (protocol with agent and its APIs)</li> <li>ADD move settings from <code>server.in</code> to a db model</li> <li>ADD (optional) query logs</li> <li>MOD new threads management</li> <li>MOD vulnerabilities' endpoint no longer loads evidence unless requested with <code>get_evidence=true</code></li> <li>FIX now it is not possible to create workspace of name \"filter\"</li> <li>FIX bug with dates in the future</li> <li>FIX bug with click 8</li> <li>FIX bug using --port command</li> <li>FIX endpoints returning 500 as status code</li> <li>REMOVE the need tom CSRF token from evidence upload api</li> </ul>"},{"location":"RELEASE/#3150-may-18th-2021","title":"3.15.0 [May 18th, 2021]:","text":"<ul> <li>ADD <code>Basic Auth</code> support</li> <li>ADD support for GET method in websocket_tokens, POST will be deprecated in the future</li> <li>ADD CVSS(String), CWE(String), CVE(relationship) columns to vulnerability model and API</li> <li>ADD agent token's API says the renewal cycling duration</li> <li>MOD Improve database model to be able to delete workspaces fastly</li> <li>MOD Improve code style and uses (less flake8 exceptions, py3 <code>super</code> style, Flask app as singleton, etc)</li> <li>MOD workspaces' names regex to verify they cannot contain forward slash (<code>/</code>)</li> <li>MOD Improve bulk create logs</li> <li>FIX Own schema breaking Marshmallow 3.11.0+</li> <li>UPD flask_security_too to version 4.0.0+</li> </ul>"},{"location":"RELEASE/#3144-apr-15th-2021","title":"3.14.4 [Apr 15th, 2021]:","text":"<ul> <li>Updated plugins package, which update appscan plugin</li> </ul>"},{"location":"RELEASE/#3143-mar-30th-2021","title":"3.14.3 [Mar 30th, 2021]:","text":"<ul> <li>MOD MAYOR Breaking change: Use frontend from other repository</li> <li>ADD <code>last_run</code> to executors and agents</li> <li>ADD ignore info vulns option (from faraday-plugins 1.4.3)</li> <li>ADD invalid logins are registered in <code>audit.log</code></li> <li>ADD agent registration tokens are now 6-digit short and automatically regenerated every 30 seconds</li> <li>MOD Fix logout redirect loop</li> <li>REMOVE support for native SSL</li> </ul>"},{"location":"RELEASE/#3142-feb-26th-2021","title":"3.14.2 [Feb 26th, 2021]:","text":"<ul> <li>ADD New plugins:<ul> <li>microsoft baseline security analyzer</li> <li>nextnet</li> <li>openscap</li> </ul> </li> <li>FIX old versions of Nessus plugins bugs</li> </ul>"},{"location":"RELEASE/#3141-feb-17th-2021","title":"3.14.1 [Feb 17th, 2021]:","text":"<ul> <li>ADD forgot password</li> <li>ADD update services by bulk_create</li> <li>ADD FARADAY_DISABLE_LOGS varibale to disable logs to filesystem</li> <li>ADD security logs in <code>audit.log</code> file</li> <li>UPD security dependency Flask-Security-Too v3.4.4</li> <li>MOD rename total_rows field in filter host response</li> <li>MOD improved Export cvs performance by reducing the number of queries</li> <li>MOD sanitize the content of vulns' request and response</li> <li>MOD dont strip new line in description when exporting csv</li> <li>MOD improved threads management on exception</li> <li>MOD improved performance on vulnerability filter</li> <li>MOD improved </li> <li>FIX upload a report with invalid custom fields</li> <li>ADD v3 API, which includes:<ul> <li>All endpoints ends without <code>/</code></li> <li><code>PATCH {model}/id</code> endpoints</li> <li>~~Bulk update via PATCH <code>{model}</code> endpoints~~ In a future release</li> <li>~~Bulk delete via DELETE <code>{model}</code> endpoints~~ In a future release</li> <li>Endpoints removed:</li> <li><code>/v2/ws/&lt;workspace_id&gt;/activate/</code></li> <li><code>/v2/ws/&lt;workspace_id&gt;/change_readonly/</code></li> <li><code>/v2/ws/&lt;workspace_id&gt;/deactivate/</code></li> <li><code>/v2/ws/&lt;workspace_name&gt;/hosts/bulk_delete/</code></li> <li><code>/v2/ws/&lt;workspace_name&gt;/vulns/bulk_delete/</code></li> <li>Endpoints updated:</li> <li><code>/v2/ws/&lt;workspace_name&gt;/vulns/&lt;int:vuln_id&gt;/attachments/</code> =&gt; \\     <code>/v3/ws/&lt;workspace_name&gt;/vulns/&lt;int:vuln_id&gt;/attachment</code></li> </ul> </li> </ul>"},{"location":"RELEASE/#3140-dec-23th-2020","title":"3.14.0 [Dec 23th, 2020]:","text":"<ul> <li>ADD RESTless filter to multiples views, improving the searchs</li> <li>ADD \"extras\" modal in options menu, linking to other Faraday resources</li> <li>ADD <code>import vulnerability templates</code> command to faraday-manage</li> <li>ADD <code>generate nginx config</code> command to faraday-manage</li> <li>ADD vulnerabilities severities count to host</li> <li>ADD Active Agent columns to workspace</li> <li>ADD critical vulns count to workspace</li> <li>ADD <code>Remember me</code> login option</li> <li>ADD distinguish host flag</li> <li>ADD a create_date field to comments</li> <li>FIX to use new webargs version</li> <li>FIX Custom Fields view in KB (Vulnerability Templates)</li> <li>FIX bug on filter endpoint for vulnerabilities with offset and limit parameters</li> <li>FIX bug raising <code>403 Forbidden</code> HTTP error when the first workspace was not active</li> <li>FIX bug when changing the token expiration change</li> <li>FIX bug in Custom Fields type Choice when choice name is too long.</li> <li>FIX Vulnerability Filter endpoint Performance improvement using joinedload. Removed several nplusone uses</li> <li>MOD Updating the template.ini for new installations</li> <li>MOD Improve SMTP configuration</li> <li>MOD The agent now indicates how much time it had run (faraday-agent-dispatcher v1.4.0)</li> <li>MOD Type \"Vulnerability Web\" cannot have \"Host\" type as a parent when creating data in bulk</li> <li>MOD Expiration default time from 1 month to 12 hour</li> <li>MOD Improve data reference when uploading a new report</li> <li>MOD Refactor Knowledge Base's bulk create to take to take also multiple creation from vulns in status report.</li> <li>MOD All HTTP OPTIONS endpoints are now public</li> <li>MOD Change documentation and what's new links in about</li> <li>REMOVE Flask static endpoint</li> <li>REMOVE of our custom logger</li> </ul>"},{"location":"RELEASE/#312-sep-3rd-2020","title":"3.12 [Sep 3rd, 2020]:","text":"<ul> <li>Now agents can upload data to multiples workspaces</li> <li>Add agent and executor data to Activity Feed</li> <li>Add session timeout configuration to server.ini configuration file</li> <li>Add hostnames to already existing hosts when importing a report</li> <li>Add new faraday background image</li> <li>Display an error when uploading an invalid report</li> <li>Use minimized JS libraries to improve page load time</li> <li>Fix aspect ratio distortion in evidence tab of vulnerability preview</li> <li>Fix broken Knowledge Base upload modal</li> <li>Fix closing of websocket connections when communicating with Agents</li> <li>Change Custom Fields names in exported CSV to make columns compatible with    <code>faraday_csv</code> plugin</li> <li>Fix import CSV for vuln template: some values were overwritten with default values.</li> <li>Catch errors in faraday-manage commands when the connection string is not    specified in the server.ini file</li> <li>Fix bug that generated a session when using Token authentication</li> <li>Fix bug that requested to the API when an invalid filter is used</li> <li>Cleanup old sessions when a user logs in</li> <li>Remove unmaintained Flask-Restless dependency</li> <li>Remove pbkdf2_sha1 and plain password schemes. We only support bcrypt</li> </ul>"},{"location":"RELEASE/#3112","title":"3.11.2:","text":""},{"location":"RELEASE/#3111-jun-3rd-2020","title":"3.11.1 [Jun 3rd, 2020]:","text":"<ul> <li>Fix missing shodan icon and invalid link in dashboard and hosts list</li> <li>Upgrade marshmallow, webargs, werkzeug and flask-login dependencies to    latest versions in order to make packaging for distros easier</li> </ul>"},{"location":"RELEASE/#311-apr-22nd-2020","title":"3.11 [Apr 22nd, 2020]:","text":"<ul> <li>Move GTK client to another repository to improve release times.</li> <li>Fix formula injection vulnerability when exporting vulnerability data to CSV. This was considered a low impact vulnerability.</li> <li>Remove \"--ssl\" parameter. Read SSL information from the config file.</li> <li>Add OpenAPI autogenerated documentation support</li> <li>Show agent information in command history</li> <li>Add bulk delete endpoint for hosts API</li> <li>Add column with information to track agent execution data</li> <li>Add tool attribute to vulnerability to avoid incorrectly showing \"Web UI\" as creator tool</li> <li>Add sorting by target in credentials view</li> <li>Add creator information when uploading reports or using de bulk create api</li> <li>Add feature to disable rules in the searcher</li> <li>Add API endpoint to export Faraday data to Metasploit XML format</li> <li>Change websocket url route from / to /websockets</li> <li>Use run date instead of creation date when plugins report specifies it</li> <li>Improve knowledge base UX</li> <li>Improve workspace table and status report table UX.</li> <li>Improve format of exported CSV to include more fields</li> <li>Sort results in count API endpoint</li> <li>Limit description width in knowledge base</li> <li>Change log date format to ISO 8601</li> <li>Fix parsing server port config in server.ini</li> <li>Fix bug when _rev was send to the hosts API</li> <li>Send JSON response when you get a 500 or 404 error</li> <li>Fix bug parsing invalid data in NullToBlankString</li> </ul> <p>Changes in plugins (only available through Web UI, not in GTK client yet):</p> <p>New plugins:</p> <ul> <li>Checkmarx</li> <li>Faraday_csv (output of exported Faraday csv)</li> <li>Qualyswebapp</li> <li>Whitesource</li> </ul> <p>Updated plugins:</p> <ul> <li>Acunetix</li> <li>AppScan</li> <li>Arachni</li> <li>Nessus</li> <li>Netspaker</li> <li>Netspaker cloud</li> <li>Nexpose</li> <li>Openvas</li> <li>QualysGuard</li> <li>Retina</li> <li>W3af</li> <li>WPScan</li> <li>Webinspect</li> <li>Zap</li> </ul>"},{"location":"RELEASE/#3102-jan-30th-2020","title":"3.10.2 [Jan 30th, 2020]:","text":"<ul> <li>Fix Cross-Site Request Forgery (CSRF) vulnerability in all JSON API endpoints. This was caused because a third-party library doesn't implement proper Content-Type header validation. To mitigate the vulnerability, we set the session cookie to have the <code>SameSite: Lax</code> property.</li> <li>Fix Faraday Server logs were always in debug</li> <li>Add update date column when exporting vulnerabilities to CSV</li> <li>Fix unicode error when exporting vulnerabilities to CSV</li> </ul>"},{"location":"RELEASE/#3101-jan-10th-2020","title":"3.10.1 [Jan 10th, 2020]:","text":"<ul> <li>Fix installation with <code>pip install --no-binary :all: faradaysec</code></li> <li>Force usage of webargs 5 (webargs 6 broke backwards compatibility)</li> <li>Use latest version of faraday-plugins</li> <li>Fix broken \"Faraday Plugin\" menu entry in the GTK client</li> <li>Extract export csv to reuse for reports</li> </ul>"},{"location":"RELEASE/#310-dec-19th-2019","title":"3.10 [Dec 19th, 2019]:","text":"<ul> <li>Use Python 3 instead of Python 2 in the Faraday Server</li> <li>Add ability to manage agents with multiple executors</li> <li>Agents can be run with custom arguments</li> <li>Improved processing of uploaded reports. Now it is much faster!</li> <li>Add custom fields of type <code>choice</code></li> <li>Fix vuln status transition in bulk create API (mark closed vulns as re-opened when they are triggered again)</li> <li>Fix bug when using non-existent workspaces in Faraday GTK Client</li> <li>Set service name as required in the Web UI</li> <li>Validate the start date of a workspace is not greater than the end date</li> <li>Fix command API when year is invalid</li> <li>When SSL misconfigurations cause websockets to fails it doesn't block server from starting</li> <li>Check for invalid service port number in the Web UI</li> <li>Fix dashboard tooltips for vulnerability</li> <li>Fix bug when GTK client lost connection to the server</li> <li>Fix style issues in \"Hosts by Service\" modal of the dashboard</li> <li>Add API for bulk delete of vulnerabilities</li> <li>Add missing vuln attributes to exported CSV</li> <li><code>faraday-manage support</code> now displays the Operating System version</li> <li>Notify when <code>faraday-manage</code> can't run becasue of PostgreSQL HBA config error</li> </ul>"},{"location":"RELEASE/#393-nov-12th-2019","title":"3.9.3 [Nov 12th, 2019]:","text":"<ul> <li>Fix unicode error when exporting vulns to CSV</li> <li>Add vuln attributes to CSV</li> <li>Fix hostname parsing and add external ID to Qualys plugin</li> </ul>"},{"location":"RELEASE/#39-oct-3th-2019","title":"3.9 [Oct 3th, 2019]:","text":"<ul> <li>Add agents feature for distributed plugin execution</li> <li>Add an API endpoint to to perform a bulk create of many objects (hosts,    services, vulns, commands and credentials). This is used to avoid doing a lot    of API requests to upload data. Now one request should be enough</li> <li>Major style and color changes to the Web UI</li> <li>Add API token authentication method</li> <li>Use server side stored sessions to properly invalidate cookies of logged out users</li> <li>Add \"New\" button to create credentials without host or service assigned yet</li> <li>Allow filtering hosts by its service's ports in the Web UI</li> <li>Performance improvements in vulnerabilities and vulnerability templates API (they    were doing a lot of SQL queries because of a programming bug)</li> <li>Require being in the faraday-manage group when running faraday from a .deb or .rpm package</li> <li>Change the first page shown after the user logs in. Now it displays a workspace    selection dialog</li> <li>Add API endpoint to import Vuln Templates from a CSV file</li> <li>Create the exported CSV of the status report in the backend instead of in the problem, which was much slower</li> <li>Add API endpoint to import hosts from a CSV file</li> <li>Add <code>faraday-manage rename-user</code> command to change a user's username</li> <li>Allow resizing columns in Vulnerability Templates view</li> <li>Avoid copying technical details when a vuln template is generated from the status report</li> <li>Use exact matches when searching vulns by target</li> <li>Add API endpoint to get which tools impacted in a host</li> <li>Add pagination to activity feed</li> <li>Add ordering for date and creator to vuln templates view</li> <li>Modify tabs in vuln template, add Details tab</li> <li>Add copy IP to clipboard button in hosts view</li> <li>Add creator and create date columns to vuln template view</li> <li>When a plugin creates a host with its IP set to a domain name,    resolve the IP address of that domain</li> <li>Add support for logging in RFC5254 format</li> <li>Add active filter in workspaces view. Only show active workspaces    in other parts of the Web UI</li> <li>Enforce end date to be greater than start date in workspaces API</li> <li>Fix bug in <code>faraday-manage create-tables</code> that incorrectly marked schema    migrations as applied</li> <li>Fix bug in many plugins that loaded hostnames incorrectly (one hostname per chararcter)</li> <li>Improve references parsing in OpenVAS plugin</li> <li>Fix a bug in Nessus plugin when parsing reports without host_start</li> <li>Fix bug hostname search is now working in status-report</li> <li>Fix showing of services with large names in the Web UI</li> <li>Fix broken select all hosts checkbox</li> <li>Fix bug viewing an attachment/evidence when its filename contained whitespaces</li> <li>Fix \"Are you sure you want to quit Faraday?\" dialog showing twice in GTK</li> </ul>"},{"location":"RELEASE/#381-jun-19th-2019","title":"3.8.1 [Jun 19th, 2019]:","text":"<ul> <li>Add configurations for websocket ssl</li> </ul>"},{"location":"RELEASE/#38-jun-4th-2019","title":"3.8 [Jun 4th, 2019]:","text":"<ul> <li>Refactor the project to use absolute imports to make the installation easier (with a setup.py file). This also was a first step to make our codebase compatible with python 3.</li> <li>Change the commands used to run faraday. <code>./faraday-server.py</code>,    <code>./manage.py</code>, <code>./faraday.py</code> and <code>bin/flugin</code> are replaced for <code>faraday-server</code>, <code>faraday-manage</code>,    <code>faraday-client</code> and <code>fplugin</code> respectively</li> <li>Changed suggested installation method. Now we provide binary executables with all python dependencies    embedded into them</li> <li>Add admin panel to the Web UI to manage custom fields</li> <li>Fix slow host list when creating vulns in a workspace with many hosts</li> <li>Usability improvements in status report: change the way vulns are selected and confirmed</li> <li>Improve workspace workspace creation from the Web UI</li> <li>Fix attachment api when file was not found in .faraday/storage</li> <li>Fix visualization of the fields Policy Violations and References.</li> <li>Add a setting in server.ini to display the Vulnerability Cost widget of the Dashboard</li> <li>Fix status report resize when the browser console closes.</li> <li>Fix severity dropdown when creating vulnerability templates</li> <li>Update OS icons in the Web UI.</li> <li>Fix bug when using custom fields, we must use the field_name instead of the display_name</li> <li>Prevent creation of custom fields with the same name</li> <li>Add custom fields to vuln templates.</li> <li>Fix user's menu visibily when vuln detail is open</li> <li>Remove \"show all\" option in the status report pagination</li> <li>The activity feed widget of the dashboard now displays the hostname of the    machine that runned each command</li> <li>Add loading spinner in hosts report.</li> <li>Fix \"invalid dsn\" bug in sql-shell</li> <li>Fix hostnames bug in Nikto and Core Impact plugins</li> <li>Change Openvas plugin: Low and Debug threats are not taken as vulnerabilities.</li> <li>Add fplugin command to close vulns created after a certain time</li> <li>Add list-plugins command to faraday-manage to see all available plugins</li> <li>Fix a logging error in PluginBase class</li> <li>Fix an error when using NexposePlugin from command line.</li> <li>Add CSV parser to Dnsmap Plugin</li> <li>Fix bug when creating web vulnerabilities in dirb plugin</li> <li>Change Nexpose Severity Mappings.</li> </ul>"},{"location":"RELEASE/#373-may-3rd-2019","title":"3.7.3 [May 3rd, 2019]:","text":"<ul> <li>Add parser for connection string at PGCli connection</li> <li>Fix bug when using custom fields, we must use the field_name instead of the display_name</li> <li>Fix user's menu visibily when vuln detail is open.</li> <li>Fix bug in status report that incorrectly showed standard vulns like if they were vulnwebs</li> </ul>"},{"location":"RELEASE/#37","title":"3.7:","text":"<ul> <li>Add vulnerability preview to status report</li> <li>Update Fierce Plugin. Import can be done from GTK console.</li> <li>Update Goohost plugin and now Faraday imports Goohost .txt report.</li> <li>Update plugin for support WPScan v-3.4.5</li> <li>Update Qualysguard plugin to its 8.17.1.0.2 version</li> <li>Update custom fields with Searcher</li> <li>Update Recon-ng Plugin so that it accepts XML reports</li> <li>Add postres version to status-change command</li> <li>Couchdb configuration section will not be added anymore</li> <li>Add unit test for config/default.xml</li> </ul>"},{"location":"RELEASE/#36-feb-21th-2019","title":"3.6 [Feb 21th, 2019]:","text":"<ul> <li>Fix CSRF (Cross-Site Request Forgery) vulnerability in vulnerability attachments API.    This allowed an attacker to upload evidence to vulns. He/she required to know the    desired workspace name and vulnerability id so it complicated the things a bit. We    classified this vuln as a low impact one.</li> <li>Readonly and disabled workspaces</li> <li>Add fields 'impact', 'easeofresolution' and 'policyviolations' to vulnerability_template</li> <li>Add pagination in  'Command history', 'Last Vulnerabilities', 'Activity logs' into dashboard</li> <li>Add status_code field to web vulnerability</li> <li>Preserve selection after bulk edition of vulnerabilities in the Web UI</li> <li>Faraday's database will be created using UTF-8 encoding</li> <li>Fix bug of \"select a different workspace\" from an empty list loop.</li> <li>Fix bug when creating duplicate custom fields</li> <li>Fix bug when loading in server.ini with extra configs</li> <li>Fix <code>./manage.py command</code>. It wasn't working since the last schema migration</li> <li><code>./manage.py createsuperuser</code> command renamed to <code>./manage.py create-superuser</code></li> <li>Fix bug when non-numeric vulnerability IDs were passed to the attachments API</li> <li>Fix logic in search exploits</li> <li>Add ability to 'Searcher' to execute rules in loop with dynamic variables</li> <li>Send searcher alert with custom mail</li> <li>Add gitlab-ci.yml file to execute test and pylint on gitlab runner</li> <li>Fix 500 error when updating services and vulns with specific read-only parameters set</li> <li>Fix SQLMap plugin to support newer versions of the tool</li> <li>Improve service's parser for Lynis plugin</li> <li>Fix bug when parsing URLs in Acunetix reports</li> <li>Fix and update NetSparker Plugin</li> <li>Fix bug in nessus plugin. It was trying to create a host without IP. Enabled logs on the server for plugin processing (use --debug)</li> <li>Fix bug when parsing hostnames in Nessus reports</li> <li>Fix SSLyze report automatic detection, so reports can be imported from the web ui</li> <li>Update Dnsmap Plugin</li> </ul>"},{"location":"RELEASE/#35-jan-16th-2019","title":"3.5 [Jan 16th, 2019]:","text":"<ul> <li>Redesgin of new/edit vulnerability forms</li> <li>Add new custom fields feature to vulnerabilities</li> <li>Add ./manage.py migrate to perform alembic migrations</li> <li>Faraday will use webargs==4.4.1 because webargs==5.0.0 fails with Python2</li> <li>New system for online plugins using Threads, a few fixes for metasploit plugin online also.</li> <li>Fix Command \"python manage.py process-reports\" now stops once all reports have been processed</li> <li>Fix bug in query when it checks if a vulnerability or a workspace exists</li> <li>Fix Once a workspace is created through the web UI, a folder with its name is created inside ~/.faraday/report/</li> <li>The manage.py now has a new support funtionality that creates a .zip file with all the information faraday's support team will need to throubleshoot your issue</li> <li>Status-check checks PostgreSQL encoding</li> <li>Fix a bug when fail importation of reports, command duration say \"In Progress\" forever.</li> <li>Fix confirmed bug in vulns API</li> <li>Update websockets code to use latest lib version</li> <li>bootstrap updated to v3.4.0</li> <li>Manage.py support now throws a message once it finishes the process.</li> <li>Update Lynis to its version 2.7.1</li> <li>Updated arp-scan plugin, added support in the Host class for mac address which was deprecated before v3.0</li> <li>OpenVAS Plugin now supports OpenVAS v-9.0.3</li> </ul>"},{"location":"RELEASE/#34-december-6th-2018","title":"3.4 [December 6th, 2018]:","text":"<ul> <li>In GTK, check active_workspace its not null</li> <li>Add fbruteforce services fplugin</li> <li>Attachments can be added to a vulnerability through the API.</li> <li>Catch gaierror error on lynis plugin</li> <li>Add OR and NOT with parenthesis support on status report search</li> <li>Info API now is public</li> <li>Web UI now detects Appscan plugin</li> <li>Improve performance on the workspace using cusotm query</li> <li>Workspaces can be set as active/disable in welcome page.</li> <li>Change Nmap plugin, response field in VulnWeb now goes to Data field.</li> <li>Update code to support latest SQLAlchemy version</li> <li>Fix <code>create_vuln</code> fplugin bug that incorrectly reported duplicated vulns</li> <li>Attachments on a vulnerability can be deleted through the API.</li> <li>Improvement in the coverage of the tests.</li> </ul>"},{"location":"RELEASE/#33-novemeber-14th-2018","title":"3.3 [Novemeber 14th, 2018]:","text":"<ul> <li>Add workspace disable feature</li> <li>Add mac vendor to host and services</li> <li>Fix typos and add sorting in workspace name (workspace list view)</li> <li>Improve warning when you try to select hosts instead of services as targets of a Vulnerability Web</li> <li>Deleted old Nexpose plugin. Now Faraday uses Nexpose-Full.</li> <li>Update sqlmap plugin</li> <li>Add updated zap plugin</li> <li>Add hostnames to nessus plugin</li> <li>Python interpreter in SSLCheck plugin is not hardcoded anymore.</li> <li>Fix importer key error when some data from couchdb didn't contain the \"type\" key</li> <li>Fix AttributeError when importing vulns without exploitation from CouchDB</li> <li>Fix KeyError in importer.py. This issue occurred during the import of Vulnerability Templates</li> <li>Fix error when file config.xml doesn't exist as the moment of executing initdb</li> <li>Improve invalid credentials warning by indicating the user to run Faraday GTK with --login option</li> <li>Fix typos in VulnDB and add two new vulnerabilities (Default Credentials, Privilege Escalation)</li> <li>Improved tests performance with new versions of the Faker library</li> <li><code>abort()</code> calls were checked and changed to <code>flask.abort()</code></li> </ul>"},{"location":"RELEASE/#32-october-17th-2018","title":"3.2 [October 17th, 2018]:","text":"<ul> <li>Added logical operator AND to status report search</li> <li>Restkit dependency removed.</li> <li>Improvement on manage.py change-password</li> <li>Add feature to show only unconfirmed vulns.</li> <li>Add ssl information to manage.py status-check</li> <li>Update wpscan plugin to support latest version.</li> <li>Allow workspace names starting with numbers.</li> </ul>"},{"location":"RELEASE/#september-21-2018","title":"September 21, 2018:","text":"<ul> <li>Fix bug: manage.py status_check</li> <li>Fix bug: manage.py initdb</li> </ul>"},{"location":"RELEASE/#september-17-2018","title":"September 17, 2018:","text":"<ul> <li>Fix get exploits API</li> <li>New searcher feature</li> <li>Added host_os column to status report</li> <li>Fix and error while trying to execute server with --start</li> <li>Added option --choose-password to initdb</li> <li>Continous scan updated for Nessus 7</li> <li>Refactor on server.config to remove globals</li> <li>Added a directory for custom templates for executive reports (pro and corp)</li> <li>Activity feed shows more results and allows to filter empty results</li> <li>Allow ot create workspace that start with numbers</li> <li>Added more variables to executive reports (pro and corp)</li> <li>Fixed some value checking on tasks api (date field)</li> <li>OpenVas plugin updated</li> <li>Appscan plugin update</li> <li>Added no confirmed vulns to report api</li> <li>Fixed a bug on workspace API when the workspace already exists on database</li> <li>Fix owner filter on status report</li> <li>Fixes on import_csv fplugin when the api returned 409</li> <li>Fixes on status_check</li> <li>Fixed a bug on webui when workspace permission was changed (pro and corp)</li> <li>Update nexpose plugin</li> <li>uigrid library updated to latest version</li> <li>Bug fix on plugin automatic detection</li> <li>Fixed a bug on executive reports when multiple reports were scheduled</li> <li>Avoid closing the executive report and new vuln modal when the form has data</li> <li>Status report open new tab for evidence</li> <li>added change_password to manage.py</li> <li>Update wapiti plugin</li> <li>Fixed vuln count on executive report (pro and corp)</li> <li>Fixed css align in some tables</li> <li>Fixed No ports available error on the client</li> </ul>"},{"location":"RELEASE/#august-17-2018","title":"August 17, 2018:","text":"<ul> <li>Updated code to use Flask 1.0</li> <li>Add threadfix integration (corp only)</li> <li>Fix create_service fplugin</li> <li>Executive report bug fix on tags</li> <li>Persistence server bug fix on impact and ease of resolution</li> <li>Fix unicode error bug on executive reports</li> <li>Updated code to support latest Twisted version</li> <li>Updated all requirements to use &gt;=</li> <li>Fix dry run on create_host fplugin</li> <li>Fixed del_all_vulns_with and del_all_hosts</li> <li>Improved executive reports status update refresh</li> <li>Websocket port is configurable now</li> <li>Change minimum font size in tag cloud</li> <li>Fixed a problem with shodan icon on dashboard</li> <li>Updated license check on deleted users</li> <li>Users with role client was not able to change password, bug fixed</li> <li>Updated code to support pip 10</li> <li>Added ldap to status check</li> <li>Credentials icon aligned</li> <li>Deamon now allows to execute faraday sever in more than one port and more than one process for multiplexation</li> <li>All views now check for permissions on workspace</li> <li>Pull requests #229, #231, #239 and #240 are merged</li> <li>Avoid polling deleted executive reports</li> <li>Added documentation to project</li> <li>Fix self xss on webshell</li> <li>Add postgres locks check on status_check</li> <li>Vuln counter fix when confirmed is on</li> </ul>"},{"location":"RELEASE/#july-26-2018","title":"July 26, 2018:","text":"<ul> <li>Interface removed from model and from persistence server lib (fplugin)</li> <li>Performance iprovements on the backend</li> <li>Add quick change workspace name (from all views)</li> <li>Changed the scope field of a workspace from a free text input to a list of targets</li> <li>New faraday styles in all webui views</li> <li>Add search by id for vulnerabilities</li> <li>Add new plugin sslyze</li> <li>Add new plugin wfuzz</li> <li>Add xsssniper plugin</li> <li>Fix W3af, Zap plugins</li> <li>Add brutexss plugin</li> <li>Allow to upload report file from external tools from the web</li> <li>Fix sshcheck import file from GTK</li> <li>Add reconng plugin</li> <li>Add sublist3r plugin</li> <li>Add HP Webinspect plugin</li> <li>Add dirsearch plugin</li> <li>Add ip360 plugin</li> <li>CouchDB was replaced by PostgreSQL :)</li> <li>Host object changed, now the name property is called ip</li> <li>Interface object was removed</li> <li>Note object was removed and replaced with Comment</li> <li>Communication object was removed and replaced with Comment</li> <li>Show credentials count in summarized report on the dashboard</li> <li>Remove vuln template CWE fields, join it with references</li> <li>Allow to search hosts by hostname, os and service name</li> <li>Allow the user to specify the desired fields of the host list table</li> <li>Add optional hostnames, services, MAC and description fields to the host list</li> <li>Workspace names can be changed from the Web UI</li> <li>Exploitation and severity fields only allow certain values. CWE CVEs were fixed to be valid. A script to convert custom CSVs was added.</li> <li>Web UI path changed from /_ui/ to / (_ui has now a redirection to / for keeping backwards compatibility)</li> <li>dirb plugin creates an informational vulnerability instead of a note.</li> <li>Add confirmed column to exported csv from webui</li> <li>Fixes in Arachni plugin</li> <li>Add new parameters --keep-old and --keep-new for faraday CLI</li> <li>Add new screenshot fplugin which takes a screenshot of the ip:ports of a given protocol</li> <li>Add fix for net sparker regular and cloud fix on severity</li> <li>Removed Chat feature (data is kept inside notes)</li> <li>Add CVSS score to reference field in Nessus plugin.</li> <li>Fix unicode characters bug in Netsparker plugin.</li> <li>Fix qualys plugin.</li> <li>Fix bugs with MACOS and GTK.</li> </ul>"},{"location":"RELEASE/#april-10-2018","title":"April 10, 2018:","text":"<ul> <li>Fix bug with tornado version 5.0 and GTK client.</li> </ul>"},{"location":"RELEASE/#november-17-2017","title":"November 17, 2017:","text":"<ul> <li>Fix bug with tags in models.</li> </ul>"},{"location":"RELEASE/#november-5-2017","title":"November 5, 2017:","text":"<ul> <li>Added \"Last modified\" and \"Created\" in Hosts view</li> <li>Fixed bug when trying to run Faraday as second process and closing the terminal (&amp;!)</li> <li>Fixed bug where it asked for dependencies eternally when you have a different version than the one required</li> <li>Fixed small bug in the update_from_document method</li> <li>Fixed bug, makes the python library dependencies specific to the desired version</li> <li>Fixed GitHub language bar to reflect real code percentage</li> <li>Merge PR #195: Create gentoo_requirements_extras.txt (New Github wiki page)</li> <li>Merge PR #225: Add references to found vulnerabilities in nmap plugin</li> <li>New plugin: Netsparker cloud</li> <li>New plugin: Lynis (Winner of Faraday Challenge 2017)</li> <li>New Fplugin: changes the status of all vulnerabilities of an specific workspace to closed</li> <li>New Fplugin: combines the \"create_interface\" and \"create_host\" scripts into one (create_interface_and_host script)</li> <li>New Fplugin: import_csv , now you can import Faraday objects from a CSV</li> </ul>"},{"location":"RELEASE/#august-11-2017","title":"August 11, 2017:","text":"<ul> <li>Add check to the vuln creation modal for empty targets in the Web UI</li> </ul>"},{"location":"RELEASE/#august-9-2017","title":"August 9, 2017:","text":"<p>No changes</p>"},{"location":"RELEASE/#august-7-2017","title":"August 7, 2017:","text":"<ul> <li>Updated Core Impact plugin to be compatible with 2016 version</li> <li>Improved loading of fields request and website in Burp Plugin</li> <li>Improved Nexpose Full plugin</li> <li>Improved Acunetix plugin to avoid conflicts and missing imported data, and to correctly parse URLs and resolutions</li> </ul>"},{"location":"RELEASE/#july-19-2017","title":"July 19, 2017:","text":"<ul> <li>Added the ability to select more than one target when creating a vuln in the Web UI</li> <li>Merged PR #182 - problems with zonatransfer.me</li> <li>Fixed bug in Download CSV of Status report with old versions of Firefox.</li> <li>Fixed formula injection vulnerability in export to CSV feature</li> <li>Fixed DOM-based XSS in the Top Services widget of the dashboard</li> <li>Fix in AppScan plugin.</li> <li>Fix HTML injection in Vulnerability template.</li> <li>Add new plugin: Junit XML</li> <li>Improved pagination in new vuln modal of status report</li> <li>Added \"Policy Violations\" field for Vulnerabilities</li> </ul>"},{"location":"RELEASE/#may-24-2017","title":"May 24, 2017:","text":"<ul> <li>Fixed bug when editing workspaces created in GTK</li> <li>Improved host search in the WEB UI</li> <li>Extended the config to support different searching engines in the WEB UI</li> <li>Check that client and server versions match when connecting</li> <li>Adds the 'v' and 'version' argument for both the server and the client</li> <li>Fixed \"refresh\" button in the Web UI</li> <li>Fix API on /ws/ with duration object None <li>Added a CRUD for Credentials to the Web UI</li> <li>Bug fixes on the Burp Online Plugin</li> <li>Added a script to connect with Reposify</li> <li>Fixed Hostname import in Nessus Plugin</li> <li>Make plugin methods log() and devlog() work again</li> <li>Fixed bug in SQLMap plugin that made the client freeze</li> <li>Improved SQLMap plugin to support more options and to show errors in GTK log console</li> <li>Fixed bug when creating/updating Credentials</li> <li>Improve plugins usage of vulnweb URL fields</li> <li>Fixed order of Report Plugins in the GTK import list</li>"},{"location":"RELEASE/#march-17-2017","title":"March 17, 2017:","text":"<ul> <li>Added link to name column in Hosts list</li> <li>Created a requirements_extras.txt file to handle optional packages for specific features</li> <li>Fixed bug in SQLMap plugin that made the client freeze</li> <li>Fixed bug when creating/updating Credentials</li> <li>Fixed bug in the WEB UI - menu explanation bubbles were hidden behind inputs</li> <li>Fixed conflict resolution when the object was deleted from another client before resolving the conflict</li> <li>Improved fplugin</li> <li>Improved the installation process</li> <li>Improved SQLMap plugin to support --tables and --columns options</li> <li>Improved navigation in Web UI</li> <li>Merged PR #137 - CScan improvements: bug fixing, change plugin format and removed unnecessary file output</li> <li>Merged PR #173 - Hostnames: added hostnames to plugins</li> <li>Merged PR #105 - OSint: added the possibility of using a DB other than Shodan</li> <li>The Status Report now remembers the sorting column and order</li> </ul>"},{"location":"RELEASE/#february-8-2017","title":"February 8, 2017:","text":"<ul> <li>Fixed max amount of vulns pagination bug in Web UI</li> <li>Fixed Maltego plugin</li> </ul>"},{"location":"RELEASE/#january-30-2017","title":"January 30, 2017:","text":"<ul> <li>Added an activity feed panel in the Dashboard.</li> <li>Added AppScan plugin.</li> <li>Improved Burp's Online plugin. Added fields and removed HTML tags.</li> <li>Refactor remaining modules to be compatible with JS Strict Mode.</li> <li>Fixed bug that prevented GTK from closing when user clicked CANCEL on WS creation.</li> <li>Fixed size of Workspace creation dialog.</li> <li>New cwe databases: English and Spanish.</li> <li>Added Hping plugin.</li> <li>Enhancements to Wpscan plugin.</li> </ul>"},{"location":"RELEASE/#november-10-2016","title":"November 10, 2016:","text":"<ul> <li>New library to connect with Faraday Server.</li> <li>Fixed Fplugin, now it uses the new library to communicate with the Server.</li> <li>New field for Vulnerabilities: plugin creator and status.</li> <li>Refactor in Faraday Core and GTK Client.</li> <li>Bug fixing in Faraday Client and Server.</li> <li>Added Faraday news notifications in GTK and Web UI.</li> <li>New plugins: Dirb, Netdiscover, FruityWifi, Sentinel.</li> <li>Improvements on the WPscan plugin.</li> <li>Fixed Licenses search.</li> <li>Refactor Licenses module to be compatible with JS Strict Mode.</li> </ul>"},{"location":"RELEASE/#september-19-2016","title":"September 19, 2016:","text":"<ul> <li>Major refactor of Faraday Client: now we support massive workspaces (100.000+ hosts).</li> <li>Fixed more than 10 minor bugs on the Web UI.</li> <li>Fixed searching with spaces character on Web UI</li> <li>Updated URL shown when starting Faraday.</li> <li>Dashboard is now refreshed automatically every 60 seconds.</li> <li>Fixed Propecia plugin.</li> <li>New plugin: WPscan</li> <li>Host Sidebar on GTK now adds information more intelligently and will never block the application.</li> <li>Evidence screenshots in report generation is now bigger.</li> <li>Help menu in GTK with links to interesting links.</li> <li>Added Help section to WEB UI.</li> </ul>"},{"location":"RELEASE/#august-12-2016","title":"August 12, 2016:","text":"<ul> <li>Added Faraday Server</li> <li>Improved performance in web UI</li> <li>Added some basic APIs to Faraday Server</li> <li>Added licenses management section in web UI</li> <li>Totally removed QT3, GTK is now the only GUI</li> <li>Deprecated FileSystem databses: now Faraday works exclusively with Faraday Server and CouchDB</li> <li>Added a button to go to the Faraday Web directly from GTK</li> <li>Fixed bug when deleting objects from Faraday Web</li> <li>Fixed bug where icons where not copied to correct folder on initialization</li> <li>Fixed bug where current workspace wouldn't correspond to selected workspace on the sidebar on GTK</li> <li>Fixed bug in 'Refresh Workspace' button on GTK</li> <li>Fixed bug where Host Sidebar and Statusbar information wasn't correctly updated on GTK</li> <li>Fixed bug in service editing</li> <li>Fixed sqlmap plugin</li> <li>Fixed metapsloit plugin</li> </ul>"},{"location":"RELEASE/#jul-1-2016","title":"Jul 1, 2016:","text":"<ul> <li>GTK is the default interface now.</li> <li>Added new plugin : Ndiff.</li> <li>Added new plugin : Netcat (Gnu netcat - OpenBSD netcat - Original netcat)</li> <li>Added button to edit your host in the GTK interface.</li> <li>Hosts sidebar now can be sorted by amout of vulnerabilities and OS.</li> <li>Changes in installation: install.sh now installs only GTK, QT is considered deprecated.</li> <li>Changes in installation: Faraday now runs with the last versions of Python modules.</li> <li>Changes in installation: fixed names of packages in setup_server.sh</li> <li>Usability: Enter key in GTK dialogs works as OK button</li> <li>Improved handling of lost connection to CouchDB database</li> <li>First steps towards deprecating Filesystem databases</li> <li>Fixed a bug when workspace was changed</li> <li>Fixed a bug with Import Reports Dialog in GTK GUI on OS X.</li> <li>Fixed a bug with Ctrl+Shift+C and Ctrl+Shift+V in some desktops managers.</li> <li>Fixed a bug with mapper of vulnerabilities.</li> </ul>"},{"location":"RELEASE/#jun-13-2016","title":"Jun 13, 2016:","text":"<ul> <li>Added Import Report dialog to Faraday GTK</li> <li>Added a 'Loading workspace...' dialog to Faraday GTK</li> <li>Added host sidebar to Faraday GTK</li> <li>Added host information dialog to Faraday GTK with the full data about a host, its interfaces, services and vulnerabilities</li> <li>Added support for run faraday from other directories.</li> <li>Fixed log reapparing after being disabled if user created a new tab</li> <li>Fixed bug regarding exception handling in Faraday GTK</li> <li>Now Faraday GTK supports Ctrl+Shift+C / Ctrl+Shift+V to Copy/Paste</li> <li>Faraday will now not crash if you suddenly lose connection to your CouchDB</li> </ul>"},{"location":"RELEASE/#may-23-2016","title":"May 23, 2016:","text":"<ul> <li>Removed description from Hosts list in WEB UI</li> <li>Fixed sort in Hosts list in WEB UI</li> <li>Fixed ports sorting in Host view in WEB UI</li> <li>Added search link for OS in Hosts list in WEB UI</li> <li>Removed description from Services list in WEB UI</li> <li>Added version to Services list in WEB UI</li> <li>Modified false values in Hosts list in WEB UI</li> <li>Added search links in Services list in WEB UI</li> <li>Added scrollbar in Gtk Terminal.</li> <li>Added workspace status in Gtk interface</li> <li>Added conflict resolution support for the Gtk interface</li> <li>Added search entry for workspaces in Gtk</li> <li>Added support for 'exit' command inside Faraday's Gtk terminal</li> <li>Improved handling of uncaught exceptions in Gtk interface</li> <li>Improved text formatting in Gtk's log console</li> <li>Fixed several small bugs in Faraday GTK</li> <li>Added support for resize workspace bar.</li> <li>Added a quote for imported reports in WEB UI.</li> <li>Added support for a new type of report in Qualysguard plugin.</li> <li>Fixed bugs in plugins: Acunetix - Nmap - Nikto.</li> </ul>"},{"location":"RELEASE/#apr-29-2016","title":"Apr 29, 2016:","text":"<ul> <li>Added Open services count to Hosts list in WEB UI</li> <li>Improved zsh integration</li> <li>Added GTK3 interface prototype</li> <li>Added plugin detection through report name</li> <li>Fixed an error in wcscan script</li> <li>Fixed nikto plugin</li> <li>Fixed openvas plugin</li> </ul>"},{"location":"RELEASE/#apr-04-2016","title":"Apr 04, 2016","text":"<ul> <li>Added cli mode (see wiki for usage instructions)</li> <li>Support for multiple Faraday instances in the same host</li> <li>Fixed bug for editing web vulns in bulk</li> <li>Fixed bug for select all in web UI</li> <li>Fixed bugs in Qualys, ZAP, nikto, w3af, openVas plugins</li> <li>Added some new scripts and helpers</li> </ul>"},{"location":"RELEASE/#feb-26-2016","title":"Feb 26, 2016:","text":"<ul> <li>Fixed bug in pip debian</li> <li>BugFix pip install.</li> <li>Checks additionals about dependencies in installation.</li> <li>Warning about a upgrade to experimental in debian installation.</li> <li>Fixed small bug in CSV importing</li> <li>Fixed styles for Status Report</li> <li>Fixed bug on Status Report filter after editing</li> <li>Added support for Kali Rolling Edition</li> <li>Notify user when the current Workspace doesn't exist</li> <li>Show all evidence files in Status Report</li> <li>Added script to remove all vulns with a specific severity value (parameterized)</li> <li>Fixed Arachni Plugin bugs</li> <li>Added new version for Maltego Plugin</li> <li>Added support for Mint 17</li> </ul>"},{"location":"RELEASE/#dec-18-2015","title":"Dec 18, 2015:","text":"<ul> <li>Immunity Canvas plugin added</li> <li>Added Dig plugin</li> <li>Added Traceroute plugin</li> <li>Fixed bug in first run of Faraday with log path and API errors</li> <li>Added parametrization for port configuration on APIs</li> <li>Refactor Plugin Base to update active WS name in var</li> <li>Refactor Plugins to use current WS in temp filename under $HOME/.faraday/data. Affected Plugins:<ul> <li>amap</li> <li>dnsmap</li> <li>nmap</li> <li>sslcheck</li> <li>wcscan</li> <li>webfuzzer</li> <li>nikto</li> </ul> </li> <li>Fixed bug get_installed_distributions from handler exceptions</li> <li>Added Wiki information about running Faraday without configuring CouchDB</li> <li>Fixed Unicode bug in Nexpose-full Plugin</li> <li>Filter false-positives in Status Report</li> <li>Fixed bug that prevented the use of \"reports\" and \"cwe\" strings in Workspace names</li> <li>Added port to Service type target in new vuln modal</li> <li>Added new scripts for faraday plugin:<ul> <li>/bin/delAllVulnsWith.py - delete all vulns that match a regex</li> <li>/bin/getAllbySrv.py - get all IP addresses that have defined open port</li> <li>/bin/getAllIpsNotServices.py added - get all IPs from targets without services</li> </ul> </li> <li>Fixed bug null last workspace</li> <li>Fixed bugs in CSV export/import in QT</li> </ul>"},{"location":"RELEASE/#oct-2-2015","title":"Oct 2, 2015:","text":"<ul> <li>Continuous Scanning Tool cscan added to ./scripts/cscan</li> <li>Fix for saving objects without parent</li> <li>Hosts and Services views now have pagination and search</li> <li>Updates version number on Faraday Start</li> <li>Visual fixes on Firefox</li> <li>Migrate graphs from D3.js to Chart.js</li> <li>Added Services columns to Status Report</li> <li>Added sections of Commercial versions</li> <li>Converted references to links in Status Report. Support for CVE, CWE, Exploit Database and Open Source Vulnerability Database</li> <li>Added Peepingtom, SSHdefaultscan and pasteAnalyzer plugins</li> <li>Fixed Debian install</li> </ul>"},{"location":"RELEASE/#sep-10-2015","title":"Sep 10, 2015:","text":"<ul> <li>Adding filename path information of report imported in history command</li> <li>Remove old couchdb upgrade process</li> <li>Adding Iceweasel browser &gt; 38.2.0 support</li> <li>Adding more navigability in differents GUI Web (Dashboard/Services/Views)</li> <li>Fixed bug copy clipboard offline (update path of ngClip dependeces)</li> <li>Added class to set colors to severities in new/edit vuln view</li> <li>Medusa, Hydra &amp; Metasploit plug-in now added discovered weak credentials as a vulnerability</li> <li>Nmap plug-in applyies a severity depending on the result of a NSE script</li> <li>Fixed small bug for empty ease of resolution</li> <li>Adding more time to generation shells QT</li> <li>Added \"Search in Shodan\" links in different views (Status Report, Host View, Service View)</li> <li>Removed required of name field service bulk edition</li> <li>Added ng-disabled on Edit button if select more of 1 host on Host View WEB UI</li> <li>Refactored GUI Web:   Icon added for Modal Error   OS, Creator, Date for modal-services-by-host.html   Fixed typo in Host Edit, the popup message was wrong   First version for in estilos.css for clear mode   Also, added hover to grey boxes in the Dashboard.</li> <li>Added vulns count for Hosts in WEB UI</li> <li>Updated w3af plugin to support report version 1.7.6</li> <li>Ignored cwe database from updater and QT views</li> <li>Plugin for Nexpose XML Export 2.0</li> <li>Added masscan plugin (1.0.3)</li> </ul>"},{"location":"RELEASE/#aug-19-2015","title":"Aug 19, 2015:","text":"<ul> <li>Exported CSV contains filters and columns from Status Report in WEB UI</li> <li>Vulnerability counter on Status Report in WEB UI</li> <li>Added quick vuln edit and delete in WEB UI</li> <li>Expanded Unit Tests for WEB UI</li> <li>XML Cleaner</li> <li>Kali 2.0 support</li> <li>Improve plugins running status log (Adding log information on report importing)</li> <li>Clean dev log on plugins</li> <li>w3af plugin refactoring</li> <li>Fix Debian \u215e.1 install support</li> </ul>"},{"location":"RELEASE/#aug-05-2015","title":"Aug 05, 2015:","text":"<ul> <li>Added CWE database and integration with vulns creation</li> <li>Added ENTER shortcut on modals</li> <li>Progress bar for workspace in the dashboard</li> <li>Bug fixing in workspaces and status report components</li> <li>Unit testing for vulns, status report and workspaces components</li> <li>Debian 8.1 support</li> </ul>"},{"location":"RELEASE/#jun-30-2015","title":"Jun 30, 2015:","text":"<ul> <li>Added hosts CRUD</li> <li>Added services CRUD</li> <li>Fix ubuntu 15.04 installation bug</li> <li>Small bug in burp plugin \"Import new vulnerabilities\" checkbox issue</li> <li>Added an interactive visualization to calculate the value of a Workspace</li> <li>Fixed several bugs in WEB UI</li> <li>Added a URL filter functionality to the status report, allowing searches by fields</li> </ul>"},{"location":"RELEASE/#apr-17-2015","title":"Apr 17, 2015:","text":"<ul> <li>You can get the new version here:</li> <li>https://github.com/infobyte/faraday/archive/v1.0.10.tar.gz</li> </ul> <p>Changes:</p> <ul> <li>Styles changes in WEB UI: fancy component selection, improved workspaces selection.</li> </ul> <p>Bugfixes: * Date on Workspace creation * Tables in Firefox</p>"},{"location":"RELEASE/#apr-7-2015","title":"Apr 7, 2015:","text":"<p>You can get the new version here: * https://github.com/infobyte/faraday/archive/v1.0.9.tar.gz</p> <p>Changes:</p> <ul> <li>Performance improvement in the dashboard</li> <li>Fix bug OSX install</li> <li>Bug fixes</li> </ul>"},{"location":"RELEASE/#mar-9-2015","title":"Mar 9, 2015:","text":"<p>You can get the new version here:</p> <ul> <li>https://github.com/infobyte/faraday/archive/v1.0.8.tar.gz</li> </ul> <p>Changes:</p> <ul> <li>WcScan script and plugin (scripts/wcscan.py)</li> <li>New Dashboard D3 with AngularJS</li> <li>Easy access to Vulnerability pages in the Status Report</li> <li>Easy access to the Host pages on the dashboard</li> <li>Creation and Editing capabilities for the Workspace from the UI Web</li> <li>Support installation for the latest version of Debian/Ubuntu/Kali</li> <li>sqlmap version 1.0-dev support updated</li> <li>API Status Check in both ZSH &amp; QT GUI</li> <li>Field added for resolution of vulnerabilities classification with plug-ins updated to support the new function.</li> <li>Field added for rating \"ease of resolution\" for vulnerabilities</li> <li> <p>Adjustments for Resolution field</p> </li> <li> <p>New Faraday plugin for Burp. Version 1.2  -Corrections for the vulnerabilities duplication for the burp plugin  -New tab section to configure the new Vulnerabilities downloads for Faraday</p> </li> <li> <p>Automated backup for couch database</p> </li> <li>Ability to upload evidence of a vulnerability (as an attachment)</li> <li>Ability to assign Vulnerability Impact (confidentiality, integrity, availability).</li> </ul>"},{"location":"RELEASE/#dec-12-2014","title":"Dec 12, 2014:","text":"<p>You can get the new version here:</p> <ul> <li>https://github.com/infobyte/faraday/archive/v1.0.7.tar.gz</li> </ul> <p>Changes:</p> <ul> <li>Improved Vulnerability Edition usability, selecting a vuln will load it's content.</li> <li>ZSH UI now is showing notifications.</li> <li>ZSH UI now is showing active workspace.</li> <li>Faraday now asks confirmation on exit, If you have pending conflicts to solve it will show the number of each.</li> <li>Vulnerability creation is now suported in the status report.</li> <li>Introducing SSLCheck, a tool for verify bugs in SSL/TLS Certificates on remote hosts. This is integrated with Faraday with a plugin.</li> <li>Shodan Plugin is now working with the new API.</li> <li>Some cosmetic changes in the status report.</li> </ul> <p>Bugfixes:</p> <ul> <li>Sorting collumns in the Status Report now is working.</li> <li>Workspace icon is based on the type of the workspace.</li> <li>Opening the reports in QT UI now opens the active workspace.</li> <li>UI Web dates fixes, we were showing dates with a off-by-one error.</li> <li>Vulnerability edition was missing 'critical' severity.</li> <li>Objects merge bugfixing</li> <li>Metadata recursive save fix</li> </ul>"},{"location":"RELEASE/#nov-7-2014","title":"Nov 7, 2014:","text":"<p>You can get the new version here:</p> <ul> <li>https://github.com/infobyte/faraday/archive/v1.0.6.tar.gz</li> </ul> <p>Changes:</p> <ul> <li>Status report modifications:</li> <li>Web vulnerability edition support.</li> <li>Variable columns in status report.</li> <li>New field called \"Data\" with extra information about a vulnerability.</li> <li>Bug fixes</li> </ul>"},{"location":"RELEASE/#oct-17-2014","title":"Oct 17, 2014:","text":"<ul> <li>infobyte/faraday@a81c637</li> </ul> <p>Status report now have edition capabilities Introducing batch vulnerability edition and deletion. Now you can edit your status report.</p> <p>Lots of bug fixes</p> <p>Ubuntu 14.04 support fixes Mac support fixes</p>"},{"location":"RELEASE/#sep-26-2014","title":"Sep 26, 2014:","text":"<ul> <li>infobyte/faraday@440858e</li> </ul> <p>New Dashboard design with summarized information.</p> <p>D3.js Fancy visualizations.</p> <p>Vulnerability Status report.</p> <p>Command run user/host identification.</p> <p>Vulnerability Statistics.</p> <p>Optimization Refactor.</p>"},{"location":"RELEASE/#jun-06-2014","title":"Jun 06, 2014:","text":"<ul> <li>infobyte/faraday@e616bdb</li> </ul> <p>Notifications: Updating objets on faraday now results in a beautiful notification in the QT ui.</p> <p>Performance: Enhacing performance when lots of workspaces are available. We now load each workspace whe it's needed instead of loading ahead the full workspace list.</p> <p>UI: Workspace split, now you can select the workspace to visualize. We are now using bootstrap.</p> <p>API: New operations on the Rest API (this is just for the following UI modifications). Vulnerability update and delete operations.</p>"},{"location":"RELEASE/#may-14-2014","title":"May 14, 2014:","text":"<ul> <li>infobyte/faraday@9dfa9ad</li> </ul> <p>Improving (web interface, vulnerability classification)</p>"},{"location":"RELEASE/#apr-30-2014","title":"Apr 30, 2014:","text":"<ul> <li>infobyte/faraday@931865f</li> </ul> <p>MacOS Support</p>"},{"location":"RELEASE/#apr-04-2014","title":"Apr 04, 2014:","text":"<ul> <li>infobyte/faraday@0fe6978</li> </ul> <p>We are proud to present two new features that will enhace the Faraday experience. Taking feedback from our users we took account that each of them had particular needs from their consoles (completion, size, fonts, so on so forth)  and their need to be able to know what commands where run during an engagement.</p> <pre><code>* A brand new ZSH based Terminal UI\n* The Command Run execution history\n</code></pre>"},{"location":"Remote-PostgreSQL/","title":"Remote PostgreSQL configuration","text":"<p>Faraday uses a connection string stored in /home/faraday/.faraday/config/server.ini to connect to the database. You can use <code>faraday-manage initdb</code> to configure a localhost database (same server as Faraday Server runs). If you opt to use a remote database you will need to create a database role, database and create the schema.</p>"},{"location":"Remote-PostgreSQL/#step-0-install-postgresql","title":"Step 0: Install PostgreSQL","text":"<p><pre><code>sudo apt install postgresql-12\n</code></pre> or <pre><code>sudo yum install postgresql-12\n</code></pre></p>"},{"location":"Remote-PostgreSQL/#step-1-configure-postgresql-for-remote-connection","title":"Step 1: Configure PostgreSQL for remote connection","text":"<p>Warning</p> <p>Make sure you understand this step. Using the wrong settings could leave your database server insecure</p> <p>First, open the hba_config file, to locate the file execute:</p> <pre><code>sudo -u postgres psql -c \"show hba_file\"\n</code></pre> <p>Add a line for the faraday-server</p> <pre><code>host    all             all             192.168.1.2/24            md5\n</code></pre> <p>Then, open <code>/etc/postgresql/9.X/main/postgresql.conf</code></p> <p>Allow to listen on the interface or use <code>*</code> for all interfaces:</p> <pre><code>listen_addresses = '*'\n</code></pre>"},{"location":"Remote-PostgreSQL/#step-2-create-postgresql-role","title":"Step 2: Create PostgreSQL role","text":"<p>Login into the database server and execute:</p> <pre><code>createuser faraday_postgresql -P\n</code></pre> <p>Now, create the database:</p> <pre><code>createdb faraday\n</code></pre>"},{"location":"Remote-PostgreSQL/#step-3-configure-faraday-server","title":"Step 3: Configure Faraday Server","text":"<p>Now on the Faraday Server instance, open the file <code>/home/faraday/.faraday/config/server.ini</code> and append the database configuration:</p> <pre><code>[database]\nconnection_string = postgresql+psycopg2://faraday_postgresql:SECRET_PASSWORD@REMOTE_IP/faraday\n</code></pre>"},{"location":"Remote-PostgreSQL/#step-4-create-tables","title":"Step 4: Create tables","text":"<p>Now you are ready to create the tables:</p> <pre><code>faraday-manage create-tables\n</code></pre>"},{"location":"Report-v4/","title":"Executive Report","text":"<p>The Executive Report feature lets you create (as the name implies) reports using the results obtained in each workspace. When an Executive Report is created, all the data from the Status Report is automatically processed and placed in a Word compatible document or PDF that can then be downloaded from Faraday</p>"},{"location":"Report-v4/#managing-executive-reports","title":"Managing Executive Reports","text":"<p>To manage your reports you need to access Faraday's Web UI and go to the report icon on the left panel and hit on Create New Report.</p> <p>All the reports will be listed, including their information, status and link to download.</p>"},{"location":"Report-v4/#making-a-report","title":"Making a report","text":"<p>To create a new report, click on New. A form will open asking for the following fields:</p> <ul> <li> <p>Title - this is the name that will be used to create the cover of the report.</p> </li> <li> <p>Client Name - Client name to be used inside the report.</p> </li> <li> <p>Template - select the template to use as a base for your report. Depending on the selected dataset the options will change. </p> </li> </ul> <p>To edit a report, select it and click on the Edit button. A modal will appear allowing you to modify all the report fields. Save it and a brand new report will be generated, keeping the original version intact. </p> <p>If, instead, you want a new report that is exactly like an existing one but with the current data of your workspace, you can click on the Regenerate button in the reports list. Reports can only be regenerated one at a time, so the regeneration buttons are disabled while this action is being performed.</p>"},{"location":"Report-v4/#executive-and-technical-details-tabs","title":"Executive and Technical details tabs","text":"<p>The following are a sort of placeholder fields for information that's commonly added to most reports. They are text fields and can be used for any relevant information, not just for what they're named after:</p> <ul> <li>Summary   </li> <li>Conclusions   </li> <li>Recommendations   </li> <li>Scope   </li> <li>Objectives</li> </ul> <p></p> <p>Faraday processes all the information and spits out a shiny new report that is automatically available for download.</p> <p></p>"},{"location":"Report-v4/#filtering","title":"Filtering","text":"<p>If you need a custom report that includes only some findings in the workspace, you can also use the filters to bring those specific vulnerabilities.</p> <p>These filters can be mixed to create different outcomes.</p> <p></p>"},{"location":"Report-v4/#deleting-a-report","title":"Deleting a Report","text":"<p>From the Executive Report window, select the document and click on Delete. </p>"},{"location":"Report-v4/#templates","title":"Templates","text":"<p>We use Jinja2 to create Report Templates. Check this Article to get more information!</p>"},{"location":"Report-v4/#datasets","title":"Datasets","text":"<p>Faraday provides two different datasets to create Executive Reports - generic and grouped.</p> Generic <p>The  generic  dataset  provides one entry for each individual vulnerability with all of its fields readily available as a dictionary. The field parent contains an ID corresponding to the Vulnerability's parent (either a Host or a Service).</p> Grouped <p>The  grouped  dataset  groups vulnerabilities by name and description. If two or more vulnerabilities share the same name and description, they will be presented as one. The field parent contains a Python Dictionary-style object with the parent IDs as keys and a Python Dictionary-style object containing evidence_subdoc, data and target as values. Tags and references will be merged for vulnerabilities that are grouped and not separated by parent.</p>"},{"location":"Report-v4/#custom-reports","title":"Custom Reports","text":"<p>Faraday has the ability to use a custom report, to do so, in the create reports section, there is a selector for a template. For a uploading the report as admin user click on \"custom\" and \"upload template\".</p> <p>Select the file from your local and hit on open. A report will be generated with sample data to check on the report. Then select the report from the custom report view.</p> <p>Info</p> <p>Keep in mind that each template should be designed for a specific dataset and that these are not interchangeable. The default templates that come with your instance are located at <code>/home/faraday/.faraday/executive_reports_templates/</code></p>"},{"location":"SAML-Auth0/","title":"SAML with Auth0","text":"<p>Here are the steps to integrate SAML to Faraday using Auth0:</p> <p>Step 1: Navigate to Auth0 website.</p> <p>Step 2: Sing in with your admin account.</p> <p>Step 3: Navigate to Applications \u2192 Applications in the left Menu.</p> <p>Step 4: Click Create Application button.</p> <p>Step 5: On the Create application page: * Enter the name of the custom app. * (Optional) Choose an application type.</p> <p>Then click Create.</p> <p>Step 6: In your new app page, go to the Addons tab and turn on the SAML2 WEB APP plugin.</p> <p>The addon configuration page will pop up.</p> <p></p> <p>Step 7: On the Usage tab, you should copy the Issuer (Identity ID in Faraday settings) and the Identity Provider Login URL (SSO URL in Faraday settings). Also download the Identity Provider Certificate (IdP Certificate in Faraday settings). Paste them on Faraday's SAML configuration.</p> <p></p> <p>Step 8: Click on Settings tab. Here you should enter an Application Callback URL with following format: * Application Callback URL: https:///_api/saml/acs <p>Then click Save</p> <p></p> <p>Step 9: Back in your new app page, go to the Settings tab and scroll down to the Application URIs section. There you should enter the Application Login URI, the Allowed Logout URLs, the Allowed Web Origins and the Allowed Origins (CORS) with the following format: * Application Login URI: https:///_api/saml/login * Allowed Logout URLs: https:///_api/saml/logout * Allowed Web Origins: https:/// * Allowed Origins (CORS): https:/// <p>Then scroll all the way down and click Save Changes.</p> <p></p> <p>Step 10: Run this command at a Terminal:</p> <pre><code>openssl req -newkey rsa:2048 -nodes -keyout key.pem -x509 -days 1825 -out certificate.pem\n</code></pre> <p>This command will return a key that goes into SP Private Key field and a certificate that goes into SP Certificate field on Faraday's SAML configuration.</p> <p>For more information about configuring a custom SAML app in Auth0, please visit their documentation page about this topic.</p>"},{"location":"SAML-Google/","title":"SAML with Google","text":"<p>Here are the steps to integrate SAML to Faraday using Google:</p> <p>Step 1: Navigate to Google admin website.</p> <p>Step 2: Sign in using an account with super administrator privileges.</p> <p>Step 3: In the Admin console go to Menu \u2192 Apps \u2192 Web and mobile apps.</p> <p>Step 4: Click Add app \u2192 Add custom SAML app.</p> <p></p> <p>Step 5: On the App Details page: * Enter the name of the custom app. * (Optional) Upload an app icon.</p> <p>Then click Continue.</p> <p></p> <p>Step 6: From the Google Identity Provider details page copy the SSO URL, the Entity ID (Identity ID on Faraday's SAML configuration) and the IDP Certificate. Paste them on Faraday's SAML configuration.</p> <p>Click on Continue.</p> <p></p> <p>Step 7: Run this command at a Terminal:</p> <pre><code>openssl req -newkey rsa:2048 -nodes -keyout key.pem -x509 -days 1825 -out certificate.pem\n</code></pre> <p>This command will return a key that goes into SP Private Key field and a certificate that goes into SP Certificate field on Faraday's SAML configuration.</p> <p>Step 8: In the Service Provider Details, enter an ASC URL, Entity ID and Start URL with following format: * ASC URL: https:///_api/saml/acs * Entity ID: https:///_api/saml/metadata.xml * Start URL: https:///_api/saml/login <p>Finally, check the Signed response checkbox. Then configure your Name ID and click Continue.</p> <p></p> <p>Step 9: In Attributes mapping page you should select Primary email and define the App attribute as username.</p> <p>Then click Finish.</p> <p></p> <p>Step 10: In the Admin console go to Menu \u2192 Apps \u2192 Web and mobile apps. Select your SAML app and click User access.</p> <p></p> <p>Step 11: To turn on the service for everyone in your organization, click On for everyone, and then click Save.</p> <p></p> <p>For more information about configuring a custom SAML app in Google, please visit their support page about this topic.</p>"},{"location":"SAML-Okta/","title":"SAML with OKTA","text":"<p>Here are the steps to integrate SAML to Faraday using OKTA:</p> <p>Step 1: Navigate to OKTA's website.</p> <p>Step 2: Log in into your developer account as a user with administrative privileges.</p> <p>Step 3: In the Admin console go to Applications \u2192 Applications.</p> <p>Step 4: Click Create App Integration.</p> <p>Step 5: Select SAML 2.0 in the Sign-in method section. Click Next.</p> <p>Step 6: On the General Settings page: * Enter the name of your integration (e.g. Faraday). * (Optional) Upload a logo.</p> <p>Then click Next.</p> <p>Step 7: On the Configure SAML tab, enter the Assertion Consumer Service (ACS) URL into the Single Sign On URL field and the Entity ID into the Audience Restriction field with the following format: * Single Sign On URL: https:///_api/saml/acs * Audience Restriction: https:///_api/saml/metadata.xml <p>After that, in the Attribute Statements section, define the Name of the attribute as username and the Value as user.email.</p> <p>Then click Next.</p> <p></p> <p>Step 8: In the final creation step, you should select the options that suits your company and click Finish.</p> <p>Step 9: On the General tab, in the Application area, you can access to the Identity Provider Configuration. There you should copy the Identity Provider Single Sign-On URL (SSO URL in Faraday settings), the Identity Provider Issuer (Identity ID in Faraday settings) and the X.509 Certificate (IdP Certificate in Faraday settings). Paste them on Faraday's SAML configuration.</p> <p>Click on Save.</p> <p></p> <p>Step 10: Run this command at a Terminal:</p> <pre><code>openssl req -newkey rsa:2048 -nodes -keyout key.pem -x509 -days 1825 -out certificate.pem\n</code></pre> <p>This command will return a key that goes into SP Private Key field and a certificate that goes into SP Certificate field on Faraday's SAML configuration.</p> <p>For more information about configuring a custom SAML app in Okta, please visit their documentation page about this topic.</p>"},{"location":"SAML/","title":"SAML","text":"<p>You can configure SAML single sing-on and keep using local users. But you can't use both LDAP and SAML users at the same time.</p>"},{"location":"SAML/#configuration-by-command-line","title":"Configuration by command line","text":"<p>In order to configure SAML, run the following command:</p> <pre><code>faraday-manage settings -a update saml\n</code></pre> <p>Then update every field according to the configuration on-prem.</p> <pre><code>$ faraday-manage settings -a update saml\nUpdate settings for: saml\nenabled [False]:\ndisplay_name [Identity Provider]:\nuser_role [admin]:\nadmin_group []:\nattribute_identifier []:\nsso_url [http://localhost/saml/login]:\nsp_certificate []:\nsp_private_key []:\nidp_certificate []:\nDo you confirm your changes on saml?\n[Y/n]:\n</code></pre> <p>Remember to restart the server after doing changes!</p> <pre><code>systemctl restart faraday-server\n</code></pre>"},{"location":"SAML/#configuration-by-ui-preferences","title":"Configuration by UI Preferences","text":"<p>You can access to SAML configuration on the Authentication section in the menu of your <code>Preferences</code>.</p> <p></p>"},{"location":"SAML/#services-available-to-integrate-saml-to-faraday","title":"Services available to integrate SAML to Faraday","text":"<p>Here is a list of services with a link to its articles:</p> <ul> <li>Integrate SAML with Google</li> <li>Integrate SAML with Auth0</li> <li>Integrate SAML with Okta</li> </ul>"},{"location":"Scheduling/","title":"Scheduler","text":""},{"location":"Scheduling/#scheduling","title":"Scheduling","text":"<p>In order to arrange or plan an event to take place at a particular time we've created Scheduler, it will allow to use the POSIX local format, the execution will be made by an agent.</p> <p>To configure a schedule click on Automation button on the left navigation and then click on scheduler, to do a new schedule click on Create Schedule.</p> <p></p> <p>Provide a description, interval pattern, select a Tool to run, destination Workspace and click on the Accept button.</p> <p></p> <p>The POSIX cron format is the below:</p> Field Possible Values Syntax Description a - Minute 0-59 7 *  *  The cron job is initiated every time the system clock shows 7 in the minute\u2019s position. b - Hour 0-23 0 7 * * * The cron job runs any time the system clock shows 7am (7pm would be coded as 19). c - Day 0-31 0 0 7 * * The day of the month is 7 which means that the job runs every 7th day of the month. d - Month 0 = none and 12 = December 0 0 0 7 * The numerical month is 7 which determines that the job runs only in July. <p>In addition to running the agents manually with their \"Run\" button, you can also schedule them to run periodically. This can be done from the web if you have our Corporate/Pro version:</p> <p></p> <p>or with simple cronjobs using faraday-cli if you are using the Community version</p> <p>create an script.sh with this contents:</p> <pre><code>#!/bin/bash\necho '{\"target\": \"www.google.com\"}' | faraday-cli agent run -a 1 -e nmap --stdin\n</code></pre> <p>Edit your crontab using the bellow command </p> <pre><code>crontab -e \n1 0 * * 0 /pathtoyourscript/script.sh &gt; /dev/null 2&gt;&amp;1\n</code></pre>"},{"location":"Scripts/","title":"Scripts","text":"<p>The scripts located at <code>$FARADAY/scripts/</code> are tools shipped with Faraday and refined to work seamlessly with it. Nevertheless, at their core, they are standalone tools totally capable of performing their function on their own. </p> <p>Faraday ships with two of these scripts:</p> <ul> <li>Shodan Faraday</li> <li>SSL Check</li> </ul> <p></p>"},{"location":"Scripts/#shodan-faraday","title":"Shodan - Faraday","text":"<p>A command line tool to get information from Shodan located at <code>$FARADAY/scripts/shodan_faraday.py</code>. </p> <pre><code>usage: shodan_faraday [-h] -q SHODAN_QUERY [-c COUNT] [-a SKEY]\n                      [--faradayapi FARADAYAPI] [--debug DEBUG] [--version]\n</code></pre> <p>The following command will incorporate all the servers with Apache in Faraday</p> <pre><code>./shodan_faraday -q apache -a (SHODANKEY)\n</code></pre> <p>We provide a couple of wordlists to find specific queries using Shodan. <pre><code>ls -lha $faraday/scripts/shodan_strings/\nscada.txt\nwebcam.txt \n</code></pre></p> <p>You can see an sample usage of these queries in this video</p> <p></p>"},{"location":"Scripts/#ssl-check","title":"SSL Check","text":"<p>Located at <code>$FARADAY/scripts/sslcheck.py</code>, SSL Check is a tool to verify SSL/TLS errors in remote hosts. With code from OpenSSL, this scripts lets a user check the SSL/TLS remote server. The potential vulnerabilities appear in red on the analysis report, which can be easily exported to XML. </p> <p>As noted above, the preferred way of using these scripts is with Faraday, although it is not necessary. To run the script from Faraday, just open the program, cd to the scripts folders and run </p> <pre><code>./sslcheck.py TARGET1 TARGE2 TARGET3 ...\n</code></pre> <p>For example: <code>./sslcheck.py 192.168.10.254 google.com 192.168.5.210 facebook.com</code></p> <p></p>"},{"location":"Settings-v4/","title":"Settings","text":"<p>In order to make Faraday's usage smoother, we have created the Settings section. Here, you can create new Custom Fields, change the account settings, customize the output of the reports and edit Ticketing tools configuration.</p> <p>To go into Settings, click on User's menu and then click on Settings:</p> <p></p> <p>As you can see, for now we have two sections: Custom Fields and Preferences.</p>"},{"location":"Settings-v4/#custom-fields","title":"Custom Fields","text":"<p>You can create/edit/delete a Custom Field from Settings. Let's create one as an example:</p> <p></p> <p>You must fill the following fields in order to create a Custom Field:</p> <ul> <li> <p>Name: the name of the field (must be unique).</p> </li> <li> <p>Type: data type of the field, it can be: Integer, List, String, Markdown, Choice.</p> </li> </ul> <p>Inside the Custom Fields menu you can view the list of all custom fields</p>"},{"location":"Settings-v4/#preferences","title":"Preferences","text":"<p>Within the Preferences menu you will be able to modify the configuration of different tabs, such asAccount, Report and Ticketing Tools</p>"},{"location":"Settings-v4/#account","title":"Account","text":"<p>Inside account menu you would be able to modify your password, enable Two Factor Authentification and log in into the last used Workspace</p> <p></p>"},{"location":"Settings-v4/#report","title":"Report","text":"<p>On the Report menu you can customize the output of your reports</p> <p></p>"},{"location":"Settings-v4/#ticketing-tools","title":"Ticketing Tools","text":"<p>Inside this menu you would be able to choose your preferred Ticketing Tool, this will provide you an extended follow up capabilities</p> <p></p> <p>Each Ticketing Tools has different configurations.</p> <ul> <li>Jira</li> <li>Gitlab</li> <li>ServiceNow</li> <li>SolarWinds</li> </ul>"},{"location":"Tasks/","title":"Tasks","text":"<p>You can create your own custom Methodologies, add Tasks, tag them and keep track of your whole project directly from Faraday.</p> <p>Faraday comes with Methodologies loaded by default that allow you to get to work quickly without having to create your own.</p> <p>A few of our default Methodologies:</p> <p>PCI DSS 11.2 Hardware Top 10 Mobile Security Network Pentest Owasp Top 10 Loading a default Methodology All default Methodology files are available at the bottom of this page. Download them, then use the \"New\" button and select the option \"From template\", give this new methodology a name and that's it! </p> <p>You can download the methodologies at the bottom of this article.</p> <p></p>"},{"location":"Tasks/#creating-you-own-methodology","title":"Creating you own Methodology","text":"<p>Create a .csv file with the following fields:</p> <p>name description Then, use the \"Import\" button and select your new .csv to load your custom Methodology to Faraday.</p> <p></p>"},{"location":"Tasks/#downloading-your-preferred-methodology","title":"Downloading your preferred Methodology","text":"<p>Do you have a custom Methodology created from scratch? Click in \"Download CSV for current Methodology\" and you will download a .csv file with the information for it!</p>"},{"location":"Tasks/#kanban-view","title":"Kanban View","text":"<p>If you click on the Methodology name, you'll access the Kanban view for it.</p> <p>You can use drag and drop to change the status of the different Tasks, or you can create a new one. You can also edit or delete a task.</p>"},{"location":"Tasks/#task","title":"Task","text":"<p>Methodologies contain Tasks, which include the following fields:</p> <ul> <li>Name</li> <li>Description</li> <li>Due date</li> <li>Status</li> <li>Users assigned</li> <li>Tags</li> </ul> <p>With that, you can assign a specific Task with a due date to a pentester. Also, tag a chunk of Tasks for a better appreciation in the Kanban view. </p> <p></p>"},{"location":"Tasks/#download-links","title":"Download links","text":"<p>Methodology Hardware Top 10</p> <p>Methodology  Mobile Security</p> <p>Methodology Network Pentest</p> <p>Methodology OWASP Top 10</p> <p>Methodology PCI DSS 6.5</p> <p>Methodology PCI DSS 11.2</p>"},{"location":"Troubleshooting/","title":"Troubleshooting","text":""},{"location":"Troubleshooting/#intro","title":"Intro","text":"<p>This guide is intended to provide solutions for common problems. If your problem is not listed below, make sure to contact us!</p> <p>Before moving on, verify that you are using the latest available version running the Client and the Server using <code>--version</code> or <code>-v</code>.</p> <p>To get the latest available version visit GitHub</p> <p>We recommend upgrading to the latest version before proceeding.</p> <p>Also, to get a better understanding of most problems you can run the Faraday Client using <code>--debug</code> or <code>-d</code> option.</p>"},{"location":"Troubleshooting/#traceback-troubleshooting","title":"Traceback Troubleshooting","text":"<p>For traceback troubleshooting you need to open the Faraday logs and search for the string ERROR. Logs are located on /home/faraday/.faraday/logs.</p> <p>In this section we will show common errors and possible solutions. We recommend to search part of the error in this page and try to match the error with possible solutions.</p>"},{"location":"Troubleshooting/#index","title":"Index","text":"<ul> <li>I can't access the Web GUI</li> <li>Faraday is not importing my report</li> <li>A plugin added too much information to my database</li> <li>How to reset Faraday Server password</li> <li>Can't access Faraday Server remotely</li> <li>[Errno 2] No such file or directory: '/home/USERNAME/.faraday/config/config.xml'</li> <li>Updating Nginx Configuration</li> <li>Error while backing up the database</li> <li>No ports available</li> <li>UnicodeEncodeError: 'ascii' codec can't encode character</li> <li>Database encoding incompatibility executing initdb</li> </ul>"},{"location":"Troubleshooting/#answers","title":"Answers","text":""},{"location":"Troubleshooting/#i-cant-access-the-web-gui","title":"I can't access the Web GUI","text":"<p>Is Faraday Server running? Try running: <pre><code>$ faraday-manage status-check\n</code></pre> That will give some information about the state Faraday is in at the moment. If the Server is not running try: <pre><code>$ faraday-server\n</code></pre></p>"},{"location":"Troubleshooting/#faraday-is-not-importing-my-report","title":"Faraday is not importing my report","text":"<p>First let's make sure there is a Plugin to parse it so make sure your tool is listed in our Plugin List. Not there? Code your own or ask us to do it Community, Pro and Corp users</p> <p>You can also try to force Faraday to process a report with a certain plugin. For example, let's say you have a Metasploit report that Faraday is not detecting. You can change the report so that it ends with _faraday_Metasploit (first letter of the plugin in uppercase), so it ends up as myreport_faraday_Metasploit.xml, and then copy it to <code>/home/faraday/.faraday/reports/{workspacename}</code> in the Client. This of course works for any plugin, not only Metasploit.</p> <p>Keep in mind that Plugins don't run on the Server, so if you're trying to copy the report file, make sure you're doint it on the Client.</p>"},{"location":"Troubleshooting/#a-plugin-added-too-much-information-to-my-database","title":"A plugin added too much information to my database","text":"<p>You can go to your Activity Feed in the Web GUI, filter the vulnerabilities by whichever parameter you'd like, select them all and then click on Delete to remove them form the database.</p> <p></p>"},{"location":"Troubleshooting/#how-to-reset-faraday-server-password","title":"How to reset Faraday Server password","text":"<p>If you forgot the password, or you don't know your Faraday Server password, you can use the command <code>faraday-manage</code> to change it:</p> <pre><code>$ faraday-manage change-password\n</code></pre>"},{"location":"Troubleshooting/#cant-access-faraday-server-remotely","title":"Can't access Faraday Server remotely","text":"<p>In your Server machine, go to /home/faraday/.faraday/config/server.ini and check if you're listening only on the localhost. You should see something like this:</p> <pre><code>[faraday_server]\nport=5985\nbind_address=localhost\n</code></pre> <p>If your Clients are on different machines than the Server, then you'll need to change the bind_address to your private IP (or all your interfaces). For example:</p> <pre><code>bind_address=0.0.0.0\n</code></pre>"},{"location":"Troubleshooting/#updating-nginx-configuration","title":"Updating Nginx configuration","text":"<p>Note: This only applies if you are using Nginx and https.</p> <p>Please, make sure you have this settings on your Nginx config:</p> <pre><code>proxy_pass http://localhost:5985/;\nproxy_redirect http:// $scheme://;\n</code></pre>"},{"location":"Troubleshooting/#error-while-backing-up-the-database","title":"Error while backing up the database","text":"<p>If you get this error:</p> <p><code>\u201cpci_q1\u201d failed: FATAL: role \u201croot\u201d does not exist</code></p> <p>while trying to execute:</p> <p><code>pg_dump &lt;name of workspace&gt; &gt; &lt;name of what I want the backup file to be&gt;</code></p> <p>Run:</p> <p><code>sudo -u postgres -i</code></p> <p>And then try again.</p>"},{"location":"Troubleshooting/#no-ports-available","title":"No ports available","text":"<p>If you see this traceback:</p> <p>Traceback (most recent call last): File \"/usr/share/python-faraday/model/application.py\", line 145, in start CONF.getApiRestfulConInfoPort() File \"/usr/share/python-faraday/apis/rest/api.py\", line 67, in startAPIs raise Exception(\"No ports available!\") Exception: No ports available!</p> <p>Go into the file user.xml locates in /home/USERNAME/.faraday/config/</p> <p>~localhost~ 127.0.0.1 9876 9977</p> <p>Change localhost for 127.0.0.1 and try again.</p>"},{"location":"Troubleshooting/#unicodeencodeerror-ascii-codec-cant-encode-character","title":"UnicodeEncodeError: 'ascii' codec can't encode character","text":"<p>If you see a Traceback that ends something like this:</p> <p><code>UnicodeEncodeError: 'ascii' codec can't encode character u'\\xf3' in position 1: ordinal not in range(128)</code></p> <p>Go into your Faraday folder and run the following command:</p> <pre><code>$ faraday-manage sql-shell\n</code></pre> <p>Once inside the shell execute:</p> <p><code>SHOW SERVER_ENCODING</code></p> <p>If you are using symbols not supported by ASCII, you need to change database's encoding to UTF-8. 1. Dump your database 2. Drop your database, 3. Create new database with the different encoding 4. Reload your data.</p> <p>Make sure the client encoding is set correctly during this process.</p>"},{"location":"Troubleshooting/#database-encoding-incompatibility-executing-initdb","title":"Database encoding incompatibility executing initdb","text":"<p>If you got the following error when running the command <code>faraday-manage initdb</code>:</p> <pre><code>ERROR: createdb: database creation failed: ERROR:  new encoding (UTF8) is incompatible with the encoding of the template database (SQL_ASCII)\nHINT:  Use the same encoding as in the template database, or use template0 as template.\n</code></pre> <p>You can follow the instructions provided in this link.</p> <p>Once you get the solution above, you can try to initialize the database once more:</p> <pre><code>faraday-manage initdb\n</code></pre> <p>Is your question not listed here? Contact us</p>"},{"location":"Troubleshooting/#smtp-is-not-being-saved-from-the-ui","title":"SMTP is not being saved from the UI","text":"<p>For this is needed to update manually the configuration on the server side.</p> <pre><code>faraday-manage settings -a update smtp\n</code></pre> <p>properly set the configuration needed, actually faraday doesn't support accounts without password/user.</p>"},{"location":"Troubleshooting/#ldap-reconfigure-after-faraday-3150","title":"LDAP reconfigure after Faraday 3.15.0","text":"<p>As part of the constant grow there were introduced new security rules on LDAP and as a consequence when upgrading Faraday to 3.16 it LDAP needs to be reconfigured.</p> <p>Steps to do it: <pre><code>faraday-manage settings -a update ldap\n</code></pre></p> <p>Then update every field according to the on-prem configuration . <pre><code>$ faraday-manage settings -a update ldap\nUpdate settings for: ldap\nenabled [False]:\nuse_local_roles [True]:\ndefault_local_role [admin]:\nadmin_group []:\nasset_owner_group []:\nclient_group []:\npentester_group []:\ndisconnect_timeout [2.0]:\nserver []:\nport [389]:\nuse_ldaps [False]:\nuse_start_tls [False]:\ndomain []:\ndomain_dn []:\nbind_format [CN]:\nbind_dn []:\nuser_class [user]:\nuser_attribute [sAMAccountName]:\ngroup_class [group]:\npaginated_fetch [False]:\nDo you confirm your changes on ldap?\n----------------------\nenabled: False\nuse_local_roles: True\ndefault_local_role: admin\nadmin_group:\nasset_owner_group:\nclient_group:\npentester_group:\ndisconnect_timeout: 2.0\nserver:\nport: 389\nuse_ldaps: False\nuse_start_tls: False\ndomain:\ndomain_dn:\nbind_format: CN\nbind_dn:\nuser_class: user\nuser_attribute: sAMAccountName\ngroup_class: group\npaginated_fetch: False\n[Y/n]:\n</code></pre></p>"},{"location":"Troubleshooting/#my-reports-disappeaered-after-activating-markdown","title":"my reports disappeaered after activating markdown","text":"<p>remember that markdown reports are stored at:</p> <p>Generic: <pre><code>~/.faraday/executive_reports_templates/markdown_generic\n</code></pre> Grouped <pre><code>/.faraday/executive_reports_templates/markdown_grouped\n</code></pre></p>"},{"location":"Update/","title":"Updating Faraday","text":"<p>Faraday will be installed as a service if you use .deb or .rpm. </p> <p>To update Faraday, please follow these instructions:</p> <p>Download the latest .deb or .rpm Faraday Server Installer Community Edition from our GitHub Professional/Corporate version from the Faraday Portal </p> <p>Run: <pre><code>sudo service faraday-server stop\n</code></pre> <pre><code>sudo apt install ./faraday-amd64.deb\n</code></pre> or <pre><code>sudo yum install ./faraday-amd64.rpm\n</code></pre></p> <p>In order for the update to work, these steps must be followed in every instance of Faraday.</p> <p>Once you have updated Faraday, you can take a look at Faraday Server's status by running: <pre><code>sudo service faraday-server status\n</code></pre></p>"},{"location":"Upload-Report/","title":"Upload Report","text":"<p>This wiki will help you to learn the different ways that Faraday has to import a report.</p>"},{"location":"Upload-Report/#through-the-web-ui","title":"Through the Web UI.","text":"<ul> <li>Go to the tab Status Report and click on the button:  </li> <li>Click on Select File in order to select the report that you are going to upload.</li> <li>Once you have selected the report, click on Upload File and your file will be uploaded.</li> </ul>"},{"location":"Upload-Report/#through-faraday-cli","title":"Through Faraday-Cli","text":"<p>Faraday-Cli must be running in each case.</p>"},{"location":"Upload-Report/#faraday-cli-community","title":"Faraday-Cli (Community)","text":"<p>It's possible to use Faraday in Command-Line Interface (CLI) mode, allowing you to process your reports in batch. So lets say you want to process the XML output of an nmap scan located in /tmp/nmap_scan.xml and send the results to a workspace called project_one. The way to do it using CLI mode would be to run:</p> <pre><code>$ faraday-client --cli --workspace project_one --report /tmp/nmap_scan.xml\n</code></pre>"},{"location":"Upload-Report/#cli-professional-and-corporate-versions","title":"Cli (Professional and Corporate versions)","text":"<p>If you're using a Professional or Corporate version, you'll probably need to run Faraday as a certain user, with permissions to access your workspaces. You can pass your credentials using a simple json file that contains both your username and password. You have a template in the directory of your Faraday installation called credentials.json, but you are allowed to use any path and filename for this json file. The structure is this:</p> <pre><code>{\n    \"username\": \"your_user_here\",\n    \"password\": \"your_password_here\"\n}\n</code></pre> <p>And then run Faraday:</p> <pre><code>$ faraday-client --cli --workspace project_one --report /tmp/nmap_scan.xml --creds-file /path/to/file/credentials.json\n</code></pre>"},{"location":"Upload-Report/#through-the-api","title":"Through the API","text":"<p>In order to see information about uploading a report through the API, follow this link.</p>"},{"location":"Users/","title":"Users (V3 Deprecated)","text":"<p>During the Faraday Server setup process an administrator user is created. Default username is faraday and the password will be created randomly. Store this password to be able to change it later on if needed. </p> <p>Info</p> <p>If you wish to change your password, run faraday-manage change-password. </p> <p>To manage users start a session in the Web UI and then click on the Faraday slider menu on the right of the screen and then on Users : </p> <p></p> <p>A list containing all the users will show up, including buttons to create, edit or delete.</p>"},{"location":"Users/#roles","title":"Roles","text":"<p>Faraday supports four types of Roles with different levels of access to the application.</p> <ul> <li> <p>Admin: This role lets the administrator manipulate options regarding users, workspaces, vulnerabilities, reports, etc.</p> </li> <li> <p>Pentester: This role is allowed to access permitted workspaces and create, edit or erase vulnerabilities.</p> </li> <li> <p>Asset Owner: This role is similar to the Client role, but can modify Vulnerabilities' Status and add Comments, so it's useful for people working in remediation. </p> </li> <li> <p>Client: This role is allowed to access permitted workspaces without being able to modify anything.</p> </li> </ul> <p></p>"},{"location":"Users/#advanced-user-management","title":"Advanced user management","text":"<p>You have further options for user management available by using the  faraday-manage  command inside your Faraday Server instance. With said command, you can</p> <ul> <li> <p>change-password: Changes the password of a user.</p> </li> <li> <p>create-superuser: Create ADMIN user for your Faraday instance.</p> </li> <li> <p>rename-user: Change username of a user.</p> </li> </ul>"},{"location":"Users/#ldapad-integration","title":"LDAP/AD Integration","text":"<p>You can also enhance your User management inside Faraday with our LDAP/Active Directory integration. More information available here. </p>"},{"location":"Using-custom-fields-from-the-API/","title":"Custom Attributes usage with Faraday API","text":"<p>Custom Attributes allows you to extend the vulnerability's model by adding more fields. Custom Attributes type can be int, str or list. You can learn more about Custom Attributes creation on this wiki page.</p> <p>In this small tutorial, we are going to use Python's library Requests and Faraday's API to authenticate, create a vulnerability and modify its Custom Attributes.</p>"},{"location":"Using-custom-fields-from-the-API/#step-1-authentication","title":"Step 1: Authentication","text":"<p>To authenticate in Faraday, we are going to use a function called faraday_authentication(). This function will return an authenticated request session.</p> <pre><code>def faraday_authentication(host, username, password):\n\"\"\"\n       @host: Faraday server host, e.g: http://127.0.0.1:5985\n       @username: Faraday username\n       @password: username's password\n\n       Return requests session object\n    \"\"\"\n    session = requests.Session()\n    headers = {\n        'Content-Type': 'application/json', # Very important! send this content-type header!!\n    }\n    data = '{\"email\":username,\"password\": password}'\n    response = s.post('{0}/_api/login'.format(host), headers=headers, data=data)\n    assert response.status_code == 200\n    return session\n</code></pre>"},{"location":"Using-custom-fields-from-the-API/#step-2-create-custom-attributes","title":"Step 2: Create Custom Attributes","text":"<p>In order to create a new Custom Attribute, follow the steps specified in this wiki page.</p>"},{"location":"Using-custom-fields-from-the-API/#step-3-create-a-vulnerability-from-the-api","title":"Step 3: Create a vulnerability from the API","text":"<p>Before using the API, you need to understand how to send the data to the server. Faraday Server accepts JSON. Assuming that you created a custom attribute with the following data: <code>Field name: cvss</code>,  <code>Display name: CVSS</code> and assuming that this vulnerability has as CVSS, the score \"4\", the JSON format for creating this vulnerability is the following:</p> <pre><code>{\n  \"metadata\": {\n    \"update_time\": 1549569790.632,\n    \"update_user\": \"\",\n    \"update_action\": 0,\n    \"creator\": \"UI Web\",\n    \"create_time\": 1549569790.632,\n    \"update_controller_action\": \"UI Web New\",\n    \"owner\": \"faraday\"\n  },\n  \"obj_id\": \"\",\n  \"owner\": \"faraday\",\n  \"parent\": 24,\n  \"parent_type\": \"Host\",\n  \"type\": \"Vulnerability\",\n  \"ws\": \"demo_workspace\",\n  \"confirmed\": true,\n  \"data\": \"\",\n  \"desc\": \"Test\",\n  \"easeofresolution\": null,\n  \"impact\": {\n    \"accountability\": false,\n    \"availability\": false,\n    \"confidentiality\": false,\n    \"integrity\": false\n  },\n  \"name\": \"dsadsadsa\",\n  \"owned\": false,\n  \"policyviolations\": [],\n  \"refs\": [],\n  \"resolution\": \"\",\n  \"severity\": \"unclassified\",\n  \"issuetracker\": \"\",\n  \"status\": \"opened\",\n  \"custom_fields\": {\n    \"CVSS\" : \"4\"\n  },\n  \"_attachments\": {},\n  \"description\": \"\",\n  \"protocol\": \"\",\n  \"version\": \"\"\n}\n</code></pre> <p>Important * Note that we have a key called \"custom_fields\" (which contains our custom attributes) with its display name and its value: <pre><code>\"custom_fields\": {\n  \"CVSS\" : \"4\"\n}\n</code></pre></p> <ul> <li>Two important fields that we need to understand are parent_id and parent_type. In the JSON above, we specified them as follow: <pre><code> \"parent_type\" : \"Host\"\n \"parent_id\" : \"24\" \n</code></pre> This mean that in our database we have a Host with id 24. If you don't specify this two fields, you will get an invalid response.</li> </ul> <p>You can learn more about the API Server by following this link</p>"},{"location":"Using-custom-fields-from-the-API/#code-sample-for-creating-a-vulnerability","title":"Code sample for creating a vulnerability","text":"<p>Now, let's see a code sample that will create a new vulnerability called Test inside a workspace named demo_workspace. As vuln_payload we will use the JSON that we specified above:</p> <pre><code>faraday_host = 'http://127.0.0.1:5985'\nsession = faraday_authentication(faraday_host, 'faraday', 'secret')\nvulnerability_url = '{0}//_api/v3/ws/demo_workspace/vulns/386/'.format(faraday_host)\nvuln_payload = '{\"metadata\":{\"update_time\":1549569790.632,\"update_user\":\"\",\"update_action\":0,\"creator\":\"UI Web\",\"create_time\":1549569790.632,\"update_controller_action\":\"UI Web New\",\"owner\":\"faraday\"},\"obj_id\":\"\",\"owner\":\"faraday\",\"parent\":24,\"parent_type\":\"Host\",\"type\":\"Vulnerability\",\"ws\":\"demo_workspace\",\"confirmed\":true,\"data\":\"\",\"desc\":\"dsadsadsa\",\"easeofresolution\":null,\"impact\":{\"accountability\":false,\"availability\":false,\"confidentiality\":false,\"integrity\":false},\"name\":\"Test\",\"owned\":false,\"policyviolations\":[],\"refs\":[],\"resolution\":\"\",\"severity\":\"unclassified\",\"issuetracker\":\"\",\"status\":\"opened\",\"custom_fields\":{\"CVSS\" : \"4\"},\"_attachments\":{},\"description\":\"\",\"protocol\":\"\",\"version\":\"\"}'\nresponse = session.post(vulnerability_url, json=vuln_payload)\n</code></pre> <p>The server is going to answer with the created vulnerability and it will return status code \"201\" (if the creation was successfull) or \"409\" (if there was any conflict). In our case it returned the status code \"201\" and a JSON with the response. </p> <p>We can get the vulnerability id by getting the key \"id\" from the JSON response. In this case, the vulnerability id is _386. </p> <p>Important: If you didn't create the Custom Attribute (see step 2), it will not be seen in the vulnerability. Remember to create the custom attribute first.</p>"},{"location":"Using-custom-fields-from-the-API/#getting-the-vulnerability-by-its-id-using-the-api","title":"Getting the vulnerability by its ID using the API","text":"<p>Now you can do a GET request on the following url to see the vulnerability in JSON format. Note that we are using the same id as the one we get above (386):</p> <p><code>http://localhost:5985/_api/v3/ws/demo_workspace/vulns/386/</code></p>"},{"location":"Using-custom-fields-from-the-API/#step-4-update-custom-attributes","title":"Step 4: Update Custom Attributes","text":"<p>In the next example, we are going to update the Custom Attribute \"CVSS\" located in the vulnerability 386. The new value will be \"5\".</p> <p>Note: When you update a vulnerability, you need to send the full JSON body of the vulnerability.</p> <pre><code>faraday_host = 'http://127.0.0.1:5985'\nsession = faraday_authentication(faraday_host, 'faraday', 'secret')\nvulnerability_url = '{0}/_api/v3/ws/demo_workspace/vulns/386/'.format(faraday_host)\nvuln_payload = '{\"metadata\":{\"update_time\":1549569790.632,\"update_user\":\"\",\"update_action\":0,\"creator\":\"UI Web\",\"create_time\":1549569790.632,\"update_controller_action\":\"UI Web New\",\"owner\":\"faraday\"},\"obj_id\":\"\",\"owner\":\"faraday\",\"parent\":24,\"parent_type\":\"Host\",\"type\":\"Vulnerability\",\"ws\":\"demo_workspace\",\"confirmed\":true,\"data\":\"\",\"desc\":\"dsadsadsa\",\"easeofresolution\":null,\"impact\":{\"accountability\":false,\"availability\":false,\"confidentiality\":false,\"integrity\":false},\"name\":\"Test\",\"owned\":false,\"policyviolations\":[],\"refs\":[],\"resolution\":\"\",\"severity\":\"unclassified\",\"issuetracker\":\"\",\"status\":\"opened\",\"custom_fields\":\"CVSS\": \"5\",\"_attachments\":{},\"description\":\"\",\"protocol\":\"\",\"version\":\"\"}'\nresponse = session.put(vulnerability_url, json=vuln_payload)\n</code></pre> <p>Note that we have changed the value of \"CVSS\" on the JSON: ``` \"custom_fields\": {   \"CVSS\" : \"5\" }</p>"},{"location":"Vulnerability-Templates-KB/","title":"KB Vulnerability Templates","text":"<p>Find yourself writing the same descriptions over and over again? Tired of typos coming up in your reports? Faraday provides a simple solution: unify criteria for naming vulnerabilities and save time and effort to yourself and your team.</p> <p>Write vulns once and use them forever!</p> <p>Faraday Server allows you to import your own CWE Vulnerabilities DB for you to use as templates. Is a simple CSV made using Open Source projects based in the CWE standard and allows you to create vulnerabilities without worrying about finding references, description, etc.</p>"},{"location":"Vulnerability-Templates-KB/#populate-your-kb","title":"Populate your KB","text":""},{"location":"Vulnerability-Templates-KB/#import-csv-file","title":"Import csv file","text":"<p>Download our CWE example:</p> <ul> <li> <p>CWE EN </p> </li> <li> <p>CWE ES </p> </li> </ul> <p>Navigate into Vulnerability &gt; Vuln Template tab in your Faraday Instance Web UI and click on the Add Template Button:</p> <p></p> <p>A dropdown will appear and select Import From File.</p>"},{"location":"Vulnerability-Templates-KB/#adding-a-template-from-vuln","title":"Adding a Template from Vuln","text":"<p>You can also create templates manually from a vuln. In the Web UI, select a vuln and select Create template from the dropdown menu. </p> <p>You will get a list of the existing templates in your installation</p>"},{"location":"Vulnerability-Templates-KB/#adding-a-template-manually","title":"Adding a Template manually","text":"<p>Navigate into Vulenrabilty &gt; Vuln Template tab in your Faraday Instance Web UI and click on the Add Template button:</p> <p>You will get a form to generate the template.</p>"},{"location":"Vulnerability-Templates-KB/#usage","title":"Usage","text":""},{"location":"Vulnerability-Templates-KB/#creating-vuln-from-template","title":"Creating Vuln from Template","text":"<p>Click on new Vulnerability, on the name parameter Templates can be selected easily to select a Template form the name search.</p> <p>You can also duplicate vulnerabilities easily by saving them as a template and later on importing the template.</p> <p>Note</p> <p>Name, Description and Resolution fields are replaced with the information stored in the templates database.</p>"},{"location":"Vulns-v4/","title":"Vulnerability Management","text":"<p>To view a full list of yours findings you can access the Vulns view by clicking the Vulnerabilities button  on the left menu.</p> <p></p> <p>The Vulns View provides several options including vulnerability search, filtering and management.</p> <p>Personalize this view by adding or removing columns in the <code>Edit Column Order</code> view, where you can select or deselect them from their checkboxes. You can access this view by clicking this button  in the top right corner.</p> <p>Also, you can drag &amp; drop some labels of columns and change their order on the table.</p> <p></p> <p>These changes will be persisted in your browser from session to session, so you only have to apply them once.</p> <p>There are many ways to add vulnerabilities into Faraday, create them manually, import scan reports, with supported tools, Faraday Agents or using Faraday API.</p>"},{"location":"Vulns-v4/#import-scan-reports","title":"Import Scan Reports","text":"<p>You can upload a scan report of your favorite tool to Faraday and have a nice look at your findings through the Vulns View. You can see a list of the tools that Faraday supports by clicking on this link</p> <p></p> <p>In order to upload a report to Faraday, follow these instructions:</p> <ul> <li>Click on the button + Add Vulnerability. </li> <li>Click on the button Import from file and a prompt will be displayed. </li> <li>Click on Browse in order to select the report that you are going to upload, or just drag and drop the file into the box.</li> <li>Once you have selected the report, click on Upload and your file will be uploaded.</li> <li>Refresh the view with the top bar refresh icon.</li> </ul>"},{"location":"Vulns-v4/#create-a-vulnerability","title":"Create a Vulnerability","text":"<p>To create vulnerabilities manually, you can go to the Vulns View page and click the + Add Vulnerability button and then click on Manual Creation. You should see a dialog similar to this:</p> <p></p> <p>The image above shows the tab General that allows you to specify the name, description and severity of your vulnerability. Also, you can specify the ease of resolution, an external ID, its impact, a resolution, its policy violations and references.</p> <p>You also have another tabs in order to add more information to your vulnerability:</p> <ul> <li> <p>Technical Details: allows you to add the field data to your vulnerability. If you're creating a web vulnerability, you add information about request and response.</p> </li> <li> <p>Custom Fields: allows you to add information to a field that you have created. For more information about Custom Fields, you can check it here.</p> </li> <li> <p>Assets: when you fill at least the three mandatory fields of the General tab (name, description and severity), the Assets tab becomes available. Here you can select from a select box 1 to N targets (in order to create 1 to N vulnerabilities), or type a new target if it's not yet in the list.</p> </li> <li> <p>Evidence: allows you to add an evidence to the vulnerability. It can be a PNG or JPG image.</p> </li> </ul> <p>Make sure you select a host (and a service if the vulnerability applies to it), a name and a description. These fields are mandatory to create a vulnerability</p>"},{"location":"Vulns-v4/#edit-vulnerabilities","title":"Edit Vulnerabilities","text":"<p>You can edit the vulnerabilities that you have created or imported. You have multiple ways to edit them.</p>"},{"location":"Vulns-v4/#from-vuln-preview","title":"From Vuln Preview","text":"<p>You can see a preview of the vulnerability by click on the vuln's name. From here you can edit your vulnerability, and it will be saved automatically.</p> <p></p> <p>As you can see in the image above, there is a new tab named Comments where you can leave comments and mention other users to notify them about important events in real time. For more information about Comments, you can check it here</p>"},{"location":"Vulns-v4/#edit-button","title":"Edit Button","text":"<p>If you click on the Edit icon, the vulnerability edit mode will open</p> <p></p> <p>Once you finish updating click on SAVE at the end of the section you are changing.</p>"},{"location":"Vulns-v4/#edit-multiple-vulnerabilities","title":"Edit Multiple Vulnerabilities","text":"<p>You can select and edit multiple vulnerabilities with just one click. Next to the edit button, you will find a three dotted button that will show a dropdown with the multiple values that you can edit at once or actions like, Create vulnerability templates (KB)</p>"},{"location":"Vulns-v4/#delete-vulnerabilities","title":"Delete Vulnerabilities","text":"<p>Select one or more vulnerabilities and click Delete icon</p> <p></p>"},{"location":"Vulns-v4/#confirmed-vulnerabilities","title":"Confirmed Vulnerabilities","text":"<p>You can filter your vulnerabilities by confirmed, unconfirmed by clicking on the Flag icon button:</p> <p></p>"},{"location":"Vulns-v4/#tags","title":"Tags","text":"<p>Tags allow you to organize your vulnerabilities by letting you make and edit categories: environment, technology, state, language, projects, etc. You can also use Tags for Reports, allowing you to filter which vulnerabilities you want to generate a report for.</p>"},{"location":"Vulns-v4/#how-to-tag-vulnerabilities","title":"How to Tag Vulnerabilities","text":"<p>Select the vulnerabilities that you want to tag.</p> <p></p> <p>Click on the \"Tags\" icon and select if you have a preset tag or Create tag button if you need a new one.</p> <p></p> <p>If you are going to create one just put a relevant name and a dialogue will be displayed.</p> <p></p> <p>Now the vulnerability has tags that you can use for filtering, searching or reporting</p> <p></p>"},{"location":"Vulns-v4/#search-and-filter-vulnerabilities","title":"Search and Filter Vulnerabilities","text":"<p>Vulns View allows you to filter vulnerabilities, so you can have a better workflow.</p> <p>You can search or filter your data by specifying a keyword or multiple keywords.</p> <p>Field values are not case-sensitive</p>"},{"location":"Vulns-v4/#how-to-filter","title":"How To Filter","text":"<p>In order to perform a search, first click on the search bar and follow these steps:</p> <ol> <li>Select if you want to filter by Vulnerabilities or Assets.</li> <li>Enter the name of the field  (e.g. severity) and select from the list displayed.</li> <li>Select the connector type that you need to perform the wanted filter (these connectors vary according to the field selected).</li> <li>Finally, type your query or select an option from the list displayed, according to the field and connector selected.</li> <li>Repeat steps 2 to 4 if you want to filter by more than one field.</li> </ol> <p>Examples:</p> <p></p> <p>You can also click on blue fields of the vulnerability like Service, Hostnames, Target, Owner, etc. to trigger a search on the specific field</p>"},{"location":"Vulns-v4/#filter-fields","title":"Filter Fields","text":"<p>Now, let's take a look at which fields are available for filtering with an example. All of them are searched through the search field</p> <ul> <li>Name | = | TCP timestamps</li> <li>Description | contains | Vulnerability testing</li> <li>Severity | = | Medium</li> <li>Target | = | 127.0.0.1</li> <li>Service name | contains | https</li> <li>Service port | &gt;= | 5000</li> <li>Ease of Resolution | = | Moderate</li> <li>Status | != | Closed</li> <li>Resolution | contains | Resolution for testing vuln</li> <li>Data | contains | Search and filter</li> <li>Request | contains | json</li> <li>Response | = | OK</li> <li>Method | = | POST</li> <li>Path | = | Vulnerability Path</li> <li>Creator command id | != | 1</li> <li>Type | = | Vulnerability Web</li> <li>Confirmed | = | True</li> <li>ID | = | 57448</li> <li>Tag | = | my_tag</li> </ul> <p>From the Vulns view you will be able to find the information using the <code>tags</code> parameter For example: tags:\"MY TAG\" as shown in the image below</p> <p></p>"},{"location":"Vulns-v4/#saved-filters-and-quick-filters","title":"Saved Filters and Quick Filters","text":"<p>The filters that you create from the search bar, you can save them in order to use them in other opportunities.</p> <p>You can access to these saved filters from the filters button  in the top right corner.</p> <p>When you click that button, a dialog opens, in addition to selecting a saved filter, you will be able to select from a varied list of quick filters, as shown in the image below.</p> <p></p>"},{"location":"Vulns-v4/#download-a-filtered-workspace","title":"Download a Filtered Workspace","text":"<p>You can download a csv file of the filtered workspace (or the full workspace if no filters applied). In order to do so, you have to click on the <code>Download Filtered Workspace</code> button  located next to the filters button in the top right corner.</p>"},{"location":"Vulns-v4/#context-menu","title":"Context Menu","text":"<p>A new feature in Faraday is the Context Menu, which you can access by right-clicking on the Vulns view.</p>"},{"location":"Vulns-v4/#single-selection-context-menu","title":"Single selection context menu","text":"<p>If you have a single vulnerability selected you will access to the single selection context menu. It should be noted that if you don't have any vulnerability selected yet, the vulnerability of the row where you perform the right click will be selected in order to be used by the context menu.</p> <p>This menu allows the user to execute some actions in a faster manner, such as:</p> <p></p> <ul> <li>Filter By</li> <li>Name: creates and executes a filter of the form <code>Name | contains | {name_of_selected_vuln}</code>.</li> <li>Service name: creates and executes a filter of the form <code>Service name | = | {service_name_of_selected_vuln}</code>.</li> <li>Target: creates and executes a filter of the form <code>Target | = | {target_of_selected_vuln}</code>.</li> <li>Date: creates and executes a filter of the form <code>Creation Date | = | {creation_date_of_selected_vuln}</code>.</li> <li>Status: creates and executes a filter of the form <code>Status | = | {status_of_selected_vuln}</code>.</li> <li>Tags: creates and executes a filter for each tag the selected vulnerability has, of the form <code>Tag | = | {tag_of_selected_vuln}</code>.</li> <li>Copy Link: copies to the clipboard the link of the detailed view of the selected vulnerability.</li> <li>Copy Api Call Link: copies to the clipboard the path of the selected vulnerability in order to be managed through Faraday API.</li> <li>Edit: enables the edition of some fields of the selected vulnerability:</li> <li>Name</li> <li>Data</li> <li>Description</li> <li>Resolution</li> <li>References</li> <li>Impact</li> <li>Policy violation</li> <li>Ease of resolution</li> <li>Tag: enables the addition of a created tag to the selected vulnerability and the creation of a new tag.</li> <li>Severity: allows you to select a new severity for the selected vulnerability.</li> <li>Status: allows you to select a new status for the selected vulnerability.</li> <li>Add Comment: allows you to add a comment on the selected vulnerability.</li> <li>Add Evidence: allows you to add an evidence on the selected vulnerability.</li> <li>Create Template: allows you to create a vulnerability template from the selected vulnerability.</li> <li>Delete: deletes the selected vulnerability.</li> </ul>"},{"location":"Vulns-v4/#multiple-selection-context-menu","title":"Multiple selection context menu","text":"<p>If you selected more than one vulnerability, you will access to the multiple selection context menu. It's a shortened version of the regular context menu:</p> <p></p> <ul> <li>Edit: enables the bulk edition of some fields of the selected vulnerabilities:</li> <li>Name</li> <li>Data</li> <li>Description</li> <li>Resolution</li> <li>References</li> <li>Impact</li> <li>Policy violation</li> <li>Confirm/False positive</li> <li>Ease of resolution</li> <li>Tag: enables the addition of a created tag to the selected vulnerabilities and the creation of a new tag.</li> <li>Severity: allows you to select a new severity for the selected vulnerabilities.</li> <li>Status: allows you to select a new status for the selected vulnerabilities.</li> <li>Create Template: allows you to create a vulnerability template from each of the selected vulnerabilities.</li> <li>Bulk Delete: performs a bulk delete of the selected vulnerabilities.</li> </ul>"},{"location":"Workspace-Comparison/","title":"Workspace Comparison (V3 Deprecated)","text":"<p>Workspace Comparison</p> <p>This feature lets you easily see and assess the differences between two of your Workspaces.</p> <p>Select the workspaces you would like to compare.</p> <p></p> <p></p> <p></p> <p></p>"},{"location":"Workspaces-v4/","title":"Workspaces","text":"<p>Information is organized into various Workspaces. Each Workspace contains a pentest team's assignments and all the intel that is discovered.</p> <p>The workspaces are used to hold the information re-collected from the different tools and/ or commands used in the \"actions\" for each Penetration Test. Each workspace integrates all the results from pentesters from a given project in the Web console allowing you to identify and manage your information in one place.</p>"},{"location":"Workspaces-v4/#how-to-manage-workspaces","title":"How to Manage Workspaces","text":"<p>To manage your workspaces you need to access your Faraday Web UI and click on the Faraday Logo on the left top of the screen and then on Wokspaces</p> <p></p> <p>A list of workspaces and summary are displayed where you can create, edit or delete them </p> <p></p>"},{"location":"Workspaces-v4/#create-a-workspace","title":"Create a Workspace","text":"<p>From the workspaces window click on + Add Workspace button and complete below</p> <ul> <li>Workspace Name</li> <li>Start Date/ End Date</li> <li>Description</li> <li>Make Workspace public (all users can see it)</li> <li>Assign Users </li> </ul> <p></p>"},{"location":"Workspaces-v4/#edit-a-workspace","title":"Edit a Workspace","text":"<p>From the workspace window select the workspace and click on Edit icon</p> <p></p>"},{"location":"Workspaces-v4/#delete-a-workspace","title":"Delete a Workspace","text":"<p>From the workspaces window select the workspace and click on Delete trash icon</p> <p></p>"},{"location":"Workspaces-v4/#read-only-workspaces","title":"Read Only Workspaces","text":"<p>You can make a workspace READ ONLY from the Workspace View (padlock icon) When the padlock icon is closed, the workspace became READ ONLY Once a workspace is READ ONLY, you can't add/modify/delete Vulnerablities, Hosts or Services. You need click on the padlock (padlock open) to put the Workspace in write mode </p> <p>The amount of Workspaces allowed will depend on your license type, workspaces in READ ONLY state has not limits.    </p> <p></p>"},{"location":"Workspaces-v4/#active-workspaces","title":"Active Workspaces","text":"<p>Note: If you click on the green ACTIVE icon of a workspace, it will disapear from the list, basically making it Archived You need to click Show archived to displayed them, click on ACTIVE icon again to work on them</p> <p></p>"},{"location":"Workspaces/","title":"Workspaces","text":"<p>(V3 Deprecated)</p> <p>Information is organized into various Workspaces. Each Workspace contains a pentest team's assignments and all the intel that is discovered.</p> <p>The workspaces are used to hold the information re-collected from the different tools and/ or commands used in the \"actions\" for each Penetration Test. Each workspace integrates all the results from pentesters from a given project in the Web console allowing you to identify and manage your information in one place.</p>"},{"location":"Workspaces/#how-to-manage-workspaces","title":"How to Manage Workspaces","text":"<p>To manage your workspaces you need to access your Faraday Web UI and click on your User Name slider menu on the right top of the screen and then on Wokspaces</p> <p></p> <p>A list of workspaces and summary are displayed where you can create, edit or delete them </p> <p></p>"},{"location":"Workspaces/#create-a-workspace","title":"Create a Workspace","text":"<p>From the workspaces window click on New button and complete below</p> <ul> <li>Workspace Name</li> <li>Description</li> <li>Start Date / End Date</li> <li>Make it public (all users can see it)</li> <li>Scope </li> <li>Users Permission </li> </ul> <p></p>"},{"location":"Workspaces/#edit-a-workspace","title":"Edit a Workspace","text":"<p>From the workspace window select the workspace and click on Edit icon</p> <p></p>"},{"location":"Workspaces/#delete-a-workspace","title":"Delete a Workspace","text":"<p>From the workspaces window select the workspace and click on Delete trash icon</p> <p></p>"},{"location":"Workspaces/#read-only-workspaces","title":"Read Only Workspaces","text":"<p>You can make a workspace READ ONLY from the Workspace View (padlock icon) When the padlock icon is closed, the workspace became READ ONLY Once a workspace is READ ONLY, you can't add/modify/delete Vulnerablities, Hosts or Services. You need click on the padlock (padlock open) to put the Workspace in write mode </p> <p>The amount of Workspaces allowed will depend on your license type, workspaces in READ ONLY state has not limits.    </p> <p></p>"},{"location":"Workspaces/#active-workspaces","title":"Active Workspaces","text":"<p>Note: If you click on the green ACTIVE icon of a workspace, it will disapear from the list, basically making it Archived You need to click Show archived to displayed them, click on ACTIVE icon again to work on them</p> <p></p>"},{"location":"agents-v4/","title":"Agents","text":""},{"location":"agents-v4/#easier-integrations-with-faraday-agents","title":"Easier integrations with Faraday Agents","text":"<p>Integrating systems is a challenging yet essential task in the lifecycle of any software product. Developers often encounter unfamiliar languages, undocumented APIs, or new paradigms when attempting to integrate with external tools. Consequently, many product teams opt not to offer integration capabilities.</p> <p>In the case of Faraday, we recognize that seamless integrations with other security tools are crucial for our product. However, we realized that our existing Plugin system didn't provide the expected ease of use for developing integrations. It required a certain level of interactivity, such as executing commands from the console or importing a report, which made it cumbersome for periodic usage. Additionally, the reliance on our Python API posed difficulties for developers when integrating with tools that weren't programmed in Python.</p> <p>To address this challenge, we made the decision to introduce the Agents feature in the latest release of Faraday (v3.9). Recognizing its significance as a core feature, we are thrilled to offer it in both the Community and commercial versions of our product.</p>"},{"location":"agents-v4/#architecture","title":"Architecture","text":""},{"location":"agents-v4/#overview-of-the-agents-feature","title":"Overview of the Agents Feature","text":"<p>An Agent represents a process running continuously in a machine (not necessary the same running the Faraday Server). When a user decides to run an Agent (typically done through the Faraday Web UI), it will execute a code and send data back to a Workspace.</p> <p></p> <p>The image displayed showcases a workspace featuring several customized agents. These agents perform various tasks, such as utilizing nmap to discover hosts within the network, employing sublist3r to identify subdomains, and retrieving data from our services hosted on Heroku.</p> <p>Beyond manually executing the agents using their respective \"Run\" buttons, it is also possible to schedule them for periodic execution. However, please note that this scheduling capability is exclusively available through the web interface for users of our Corporate version.</p> <p>Now you can Run an Agent for a single use!</p> <p></p> <p></p> <p>or with simple cronjobs if you are using the Community or Paid version.</p>"},{"location":"agents-v4/#agents-technical-details","title":"Agents technical details","text":"<p>To simplify integrations with Faraday, we have developed the Faraday Agent Dispatcher. This project acts as a communication middleware between the Faraday Server and your custom agents.</p> <p>To create integrations, you can build an Executor script that outputs data in JSON format to the standard output. This script handles tasks like retrieving host information, vulnerabilities, and more. The Dispatcher abstracts the complexities of APIs and communication protocols, allowing you to focus on generating the necessary JSON data. By leveraging the standard output for data transfer, the Dispatcher seamlessly handles the integration process. For further insight into the project's concept, you can refer to the explanation provided by one of our developers here.</p> <p>This flexible approach enables you to employ a wide range of programming languages for your integrations. As long as the language supports standard output printing, you can develop agents in languages like Python, Bash, or even unconventional choices like Brainfuck.</p> <p>We offer official executors that are pre-configured and require minimal setup. Alternatively, you have the option to create and execute custom executors tailored to your specific requirements. For detailed instructions on developing and running custom executors, refer to our custom executor documentation!</p>"},{"location":"agents-v4/#how-to-start-using-agents","title":"How to start using agents","text":"<p>Lets try with an example with Nmap to check the Faraday Agents capabilities both as a custom executor, and run an official one.</p> <p>First of all you must install the Faraday Dispatcher inside the server you want to run the Agent on. You can do so running one of the following commands:</p> <pre><code>$ git clone https://github.com/infobyte/faraday_agent_dispatcher\n</code></pre> <pre><code>$ git clone https://github.com/infobyte/faraday_agent_parameter__types\n</code></pre> <p><pre><code>$ pip3 install faraday_agent_dispatcher\n</code></pre> After this, you can setup the agent through the Web UI by clicking the tab Create Agent, a windows like this will be displayed</p> <p></p> <p>Once you choose your desired configuration, you'll be able to select the tools that need to be run</p> <p> </p> <p>After selecting the tools, you'll be able to download the dispatcher.yaml</p> <p></p> <p>Please follow the instruccions depending on what you are working with, in this case we are using Python, so in order to make this work the dispatcher.yaml must be placed in the following folder </p> <pre><code>$HOME/.faraday/config\n</code></pre> <p>Now you would be able to run the agent in your server</p> <p></p> <p>If you have done this correctly, the new agent will be displayed in the Agent view</p> <p></p> <p>Or you can just do it in the manual way running the configuration wizard:</p> <pre><code>$ faraday-dispatcher config-wizard\n</code></pre> <pre><code>Do you want to edit the [A]gent or the [E]xecutors? Do you want to [Q]uit? (A, E, Q) [Q]: A\nSection: server\nhost [127.0.0.1]: server.faradaysec.com\nssl [True]:\nssl_port [443]:\nssl_cert []:\nTrying to save with empty value\nworkspace [workspace]:\nSection: tokens\nregistration [ACorrectTokenHas25CharLen]: ImalA8Cg1L6Z5Qbx2u9CFAsob\nSection: agent\nagent_name [agent]: nmap\nDo you want to edit the [A]gent or the [E]xecutors? Do you want to [Q]uit? (A, E, Q) [Q]: E\nThe actual configured executors are: []\nDo you want to [A]dd, [M]odify or [D]elete an executor? Do you want to [Q]uit? (A, M, D, Q) [Q]: A\nName: nmap\nIs a custom executor? (Y, N) [N]: Y\nCommand to execute [exit 1]: python3 /home/faraday/faraday_agent_dispatcher/static/executors/official/nmap.py\nMax data sent to server [65536]:\nThe actual nmap executor's environment variables are: []\nDo you want to [A]dd, [M]odify or [D]elete an environment variable? Do you want to [Q]uit? (A, M, D, Q) [Q]:\nThe actual nmap executor's arguments are: []\nDo you want to [A]dd, [M]odify or [D]elete an argument? Do you want to [Q]uit? (A, M, D, Q) [Q]: A\nArgument name: port_list\nIs mandatory? (Y, N): Y\nThe actual nmap executor's arguments are: ['port_list']\nDo you want to [A]dd, [M]odify or [D]elete an argument? Do you want to [Q]uit? (A, M, D, Q) [Q]: A\nArgument name: target\nIs mandatory? (Y, N): Y\nThe actual nmap executor's arguments are: ['port_list', 'target']\nDo you want to [A]dd, [M]odify or [D]elete an argument? Do you want to [Q]uit? (A, M, D, Q) [Q]: Q\nThe actual configured executors are: ['nmap']\nDo you want to [A]dd, [M]odify or [D]elete an executor? Do you want to [Q]uit? (A, M, D, Q) [Q]: A\nName: nmapOfficial\nIs a custom executor? (Y, N) [N]:\nThe executors are:\n1: wpscan.py\n2: sublist3r.sh\n3: nmap.py\n4: nikto2.py\n5: nessus.py\n+: Next page\nQ: Don't choose\nChoose one: 3\nMax data sent to server [65536]:\nThe actual configured executors are: ['nmap', 'nmapOfficial']\nDo you want to [A]dd, [M]odify or [D]elete an executor? Do you want to [Q]uit? (A, M, D, Q) [Q]:\nDo you want to edit the [A]gent or the [E]xecutors? Do you want to [Q]uit? (A, E, Q) [Q]:\n</code></pre> <p>All the information you added with the configuration wizard should appear on a new dispatcher.ini file at your <code>/.faraday/config/</code> directory:</p> <pre><code>$ cat  $HOME/.faraday/config/dispatcher.yaml\n[server]\nhost = server.faradaysec.com\nssl = True\napi_port = 443\nwebsocket_port = 443\nssl_cert =\nworkspace = agent_workspaces\n[tokens]\nregistration = ImalA8Cg1L6Z5Qbx2u9CFAsob\n[agent]\nagent_name = nmap\nexecutors = nmap,nmapOfficial\n[nmap]\ncmd = python3 /Users/famato/dev/faraday_agent_dispatcher/contrib/nmap.py\nmax_size = 65536\n[nmap_params]\nport_list = True\ntarget = True\n[nmap_varenvs]\n[nmapOfficial]\nmax_size = 65536\nrepo_executor = nmap.py\n[nmapOfficial_params]\nport_list = True\ntarget = True\n[nmapOfficial_varenvs]\n</code></pre> <p>Now you have to run the dispatcher to register the Agent on your Faraday Server:</p> <p><pre><code>$ faraday-dispatcher run\n</code></pre> <pre><code>2020-05-11 21:14:01,061 - faraday_agent_dispatcher - INFO {MainThread} [dispatcher.py:91 - register()]  token_registration_url: https://server.faradaysec.com:443/_api/v2/ws/agent_workspaces/agent_registration/\n2020-05-11 21:14:01,977 - faraday_agent_dispatcher - INFO {MainThread} [dispatcher.py:115 - register()]  Registered successfully\n2020-05-11 21:14:02,639 - faraday_agent_dispatcher - INFO {MainThread} [dispatcher.py:150 - connect()]  Connection to Faraday server succeeded\n</code></pre></p> <p>After this, you\u2019ll see your new Agent on the Web UI. The last step is that you just run the nmap Agent:</p> <p></p> <p>And the Dispatcher log will give you details about this action: <pre><code>2022-02-03 15:59:29,676 - faraday_agent_dispatcher - INFO {MainThread} [dispatcher.py:153 - register()]  token_registration_url: https://pro-staging.app3.faradaysec.com:443/_api/v3/agent_registration\n2022-02-03 15:59:30,479 - faraday_agent_dispatcher - INFO {MainThread} [dispatcher.py:192 - register()]  Registered successfully\n2022-02-03 15:59:31,434 - faraday_agent_dispatcher - INFO {MainThread} [dispatcher.py:235 - connect()]  Connection to Faraday server succeeded\n2022-02-03 16:10:11,385 - faraday_agent_dispatcher - INFO {MainThread} [dispatcher.py:256 - run_once()]  Parsing data: {\"execution_id\": 9, \"agent_id\": 3, \"workspace\": \"my_workspace\", \"action\": \"RUN\", \"executor\": \"nmap\", \"args\": {\"TARGET\": \"127.0.0.1\"}}\n2022-02-03 16:10:11,419 - faraday_agent_dispatcher - INFO {MainThread} [metadata_utils.py:59 - check_commands()]  Dependency check ended. Ready to go\n2022-02-03 16:10:11,419 - faraday_agent_dispatcher - INFO {MainThread} [dispatcher.py:415 - run_once()]  Running nmap executor\n{\"hosts\": [{\"ip\": \"127.0.0.1\", \"os\": \"unknown\", \"hostnames\": [\"localhost\"], \"description\": \"\", \"mac\": \"00:00:00:00:00:00\", \"credentials\": [], \"services\": [], \"vulnerabilities\": [], \"tags\": []}], \"command\": {\"tool\": \"Nmap\", \"command\": \"Nmap\", \"params\": \"\", \"user\": \"\", \"hostname\": \"\", \"start_date\": \"2022-02-03T19:10:11.665787\", \"duration\": 46861, \"import_source\": \"report\"}}\nstderr sent empty data, 2022-02-03 16:10:13,246 - faraday_agent_dispatcher - INFO {MainThread} [executor_helper.py:118 - processing()]  Data sent to bulk create\n2022-02-03 16:10:14,021 - faraday_agent_dispatcher - INFO {MainThread} [executor_helper.py:148 - end_f()]  Data sent to bulk create\nstdout sent empty data, 2022-02-03 16:10:14,021 - faraday_agent_dispatcher - INFO {MainThread} [dispatcher.py:456 - run_once()]  Executor nmap finished successfully\n</code></pre></p> <p>Right after the Agent executes these actions, return to your Workspace and you can review all the information that was found. Now you are ready to deploy your own Faraday Agents through your network! The Dispatcher README file has more detailed documentation to run and build your Agents. Also, we recommend you to check our examples and official executors to get an idea of what a custom integration looks like.</p>"},{"location":"agents-v4/#whats-next","title":"What's Next","text":"<p>Recently we added Appscan, Qualys and Tenable.io compatibility! try them out!</p> <p>We are committed to enhancing the features and usability of Agents while continuously adding new executors to the Dispatcher repository. In upcoming releases, our focus will also be on providing select Agents with read access to their Workspace. This access will enable them to leverage existing data for uncovering more valuable information.</p> <p>We hope you enjoy this feature and find it useful!</p>"},{"location":"agents/","title":"Agents","text":""},{"location":"agents/#easier-integrations-with-faraday-agents-v3-deprecated","title":"Easier integrations with Faraday Agents (V3 Deprecated)","text":"<p>Integrating systems is an elusive but mandatory job in any software product's life. Developers have to deal with languages they don't know, undocumented APIs or new paradigms. This leads to the fact that many product teams decide not to open the possibility to integrate to them.</p> <p>In Faraday\u2019s case, we are aware that integrations with other security tools are a critical part of our product. However, we\u2019ve realized that our existing Plugin system wasn\u2019t as easy as we expected to develop some integrations: it required some level of interactivity (either running a command from the console or importing a report), so it was hard to use on a periodic basis. It also forced integration developers to use our Python API, even when the tool to integrate with wasn\u2019t programmed in Python, making it harder for the developer.</p> <p>To solve this problem, we decided to implement the Agents feature in the already released Faraday v3.9. Since we expect this to be a core feature of our product, it will be available both in Community and commercial versions!.</p>"},{"location":"agents/#architecture","title":"Architecture","text":""},{"location":"agents/#overview-of-the-agents-feature","title":"Overview of the Agents Feature","text":"<p>An Agent represents a process running continuously in a machine (not necessary the same running the Faraday Server). When a user decides to run an Agent (typically done through the Faraday Web UI), it will execute a code and send data back to a Workspace.</p> <p></p> <p>In the image above, you can see a workspace with many custom agents. They're in charge of finding hosts in the network with nmap, finding subdomains with sublist3r, and provision data from our Heroku-hosted services.</p> <p>In addition to running the agents manually with their \"Run\" button, you can also schedule them to run periodically. This can be done from the web if you have our Corporate version:</p> <p>Now you can Run an Agent for a single use!</p> <p></p> <p></p> <p>or with simple cronjobs if you are using the Community or Paid version.</p>"},{"location":"agents/#agents-technical-details","title":"Agents technical details","text":"<p>To make integrations with Faraday as easy as possible, we developed a project we called Faraday Agent Dispatcher that is in charge of handling the communication between the Faraday Server and your own agents.</p> <p>The only thing you\u2019ll need to build your own integrations is a script (we call it an Executor) that prints to standard output all the data you want to send to Faraday (hosts info, vulnerabilities, etc.) encoded in JSON. There is no need to use complex APIs or communication methods, as all of this is abstracted by the Dispatcher. You just need to print JSON to standard out, and the Dispatcher will handle the rest! If you want to know a little bit about the idea behind build this project, one of our developers explain a little about it.</p> <p>This also means that you could use virtually any programming language you want to build your integrations, as long as they support printing data to standard output. We've already made agents in Python, Bash, and even a Brainfuckone!</p> <p>We have some official executors, which are ready to go with minimum configuration. If you want to develop and run your own executor, you can configure a custom one!</p>"},{"location":"agents/#how-to-start-using-agents","title":"How to start using agents","text":"<p>Lets try with an example with Nmap to check the Faraday Agents\u2019 capabilities both as a custom executor, and run an official one. First of all you have to get your Agent\u2019s token. On your Web UI go to Settings &gt; Agents.</p> <p></p> <p>Your token is: ImalA8Cg1L6Z5Qbx2u9CFAsob</p> <p>Now you must install the Faraday Dispatcher inside the server you want to run the Agent on. You can do so running one of the following commands:</p> <pre><code>$ git clone https://github.com/infobyte/faraday_agent_dispatcher\n</code></pre> <pre><code>$ git clone https://github.com/infobyte/faraday_agent_parameter__types\n</code></pre> <pre><code>$ pip3 install faraday_agent_dispatcher\n</code></pre> <p>After this, you need to run the configuration wizard:</p> <pre><code>$ faraday-dispatcher config-wizard\n</code></pre> <pre><code>Do you want to edit the [A]gent or the [E]xecutors? Do you want to [Q]uit? (A, E, Q) [Q]: A\nSection: server\nhost [127.0.0.1]: server.faradaysec.com\nssl [True]:\nssl_port [443]:\nssl_cert []:\nTrying to save with empty value\nworkspace [workspace]:\nSection: tokens\nregistration [ACorrectTokenHas25CharLen]: ImalA8Cg1L6Z5Qbx2u9CFAsob\nSection: agent\nagent_name [agent]: nmap\nDo you want to edit the [A]gent or the [E]xecutors? Do you want to [Q]uit? (A, E, Q) [Q]: E\nThe actual configured executors are: []\nDo you want to [A]dd, [M]odify or [D]elete an executor? Do you want to [Q]uit? (A, M, D, Q) [Q]: A\nName: nmap\nIs a custom executor? (Y, N) [N]: Y\nCommand to execute [exit 1]: python3 /home/faraday/faraday_agent_dispatcher/static/executors/official/nmap.py\nMax data sent to server [65536]:\nThe actual nmap executor's environment variables are: []\nDo you want to [A]dd, [M]odify or [D]elete an environment variable? Do you want to [Q]uit? (A, M, D, Q) [Q]:\nThe actual nmap executor's arguments are: []\nDo you want to [A]dd, [M]odify or [D]elete an argument? Do you want to [Q]uit? (A, M, D, Q) [Q]: A\nArgument name: port_list\nIs mandatory? (Y, N): Y\nThe actual nmap executor's arguments are: ['port_list']\nDo you want to [A]dd, [M]odify or [D]elete an argument? Do you want to [Q]uit? (A, M, D, Q) [Q]: A\nArgument name: target\nIs mandatory? (Y, N): Y\nThe actual nmap executor's arguments are: ['port_list', 'target']\nDo you want to [A]dd, [M]odify or [D]elete an argument? Do you want to [Q]uit? (A, M, D, Q) [Q]: Q\nThe actual configured executors are: ['nmap']\nDo you want to [A]dd, [M]odify or [D]elete an executor? Do you want to [Q]uit? (A, M, D, Q) [Q]: A\nName: nmapOfficial\nIs a custom executor? (Y, N) [N]:\nThe executors are:\n1: wpscan.py\n2: sublist3r.sh\n3: nmap.py\n4: nikto2.py\n5: nessus.py\n+: Next page\nQ: Don't choose\nChoose one: 3\nMax data sent to server [65536]:\nThe actual configured executors are: ['nmap', 'nmapOfficial']\nDo you want to [A]dd, [M]odify or [D]elete an executor? Do you want to [Q]uit? (A, M, D, Q) [Q]:\nDo you want to edit the [A]gent or the [E]xecutors? Do you want to [Q]uit? (A, E, Q) [Q]:\n</code></pre> <p>All the information you added with the configuration wizard should appear on a new dispatcher.ini file at your <code>/.faraday/config/</code> directory:</p> <pre><code>$ cat  $HOME/.faraday/config/dispatcher.ini\n[server]\nhost = server.faradaysec.com\nssl = True\napi_port = 443\nwebsocket_port = 443\nssl_cert =\nworkspace = agent_workspaces\n[tokens]\nregistration = ImalA8Cg1L6Z5Qbx2u9CFAsob\n[agent]\nagent_name = nmap\nexecutors = nmap,nmapOfficial\n[nmap]\ncmd = python3 /Users/famato/dev/faraday_agent_dispatcher/contrib/nmap.py\nmax_size = 65536\n[nmap_params]\nport_list = True\ntarget = True\n[nmap_varenvs]\n[nmapOfficial]\nmax_size = 65536\nrepo_executor = nmap.py\n[nmapOfficial_params]\nport_list = True\ntarget = True\n[nmapOfficial_varenvs]\n</code></pre> <p>Now you have to run the dispatcher to register the Agent on your Faraday Server:</p> <p><pre><code>$ faraday-dispatcher run\n</code></pre> <pre><code>2020-05-11 21:14:01,061 - faraday_agent_dispatcher - INFO {MainThread} [dispatcher.py:91 - register()]  token_registration_url: https://server.faradaysec.com:443/_api/v2/ws/agent_workspaces/agent_registration/\n2020-05-11 21:14:01,977 - faraday_agent_dispatcher - INFO {MainThread} [dispatcher.py:115 - register()]  Registered successfully\n2020-05-11 21:14:02,639 - faraday_agent_dispatcher - INFO {MainThread} [dispatcher.py:150 - connect()]  Connection to Faraday server succeeded\n</code></pre></p> <p>After this, you\u2019ll see your new Agent on the Web UI:</p> <p></p> <p>The last step is that you just run the nmap Agent:</p> <p></p> <p>And the Dispatcher log will give you details about this action: <pre><code>2020-05-11 21:16:33,691 - faraday_agent_dispatcher - INFO {MainThread} [dispatcher.py:260 - run_once()]  Running nmap executor\n{\"hosts\": [{\"ip\": \"127.0.0.1\", \"os\": \"unknown\", \"hostnames\": [\"localhost\"], \"description\": \"\", \"mac\": \"00:00:00:00:00:00\", \"credentials\": [], \"services\": [{\"name\": \"http\", \"protocol\": \"tcp\", \"port\": 80, \"status\": \"open\", \"version\": \"\", \"description\": \"http\", \"credentials\": [], \"vulnerabilities\": []}, {\"name\": \"https\", \"protocol\": \"tcp\", \"port\": 443, \"status\": \"open\", \"version\": \"\", \"description\": \"https\", \"credentials\": [], \"vulnerabilities\": []}], \"vulnerabilities\": []}], \"command\": {\"tool\": \"Nmap\", \"command\": \"Nmap\", \"params\": \"\", \"user\": \"\", \"hostname\": \"\", \"start_date\": \"2020-05-11T21:16:33.867017\", \"duration\": 1029, \"import_source\": \"report\"}}\nstderr sent empty data,\n2020-05-11 21:16:34,596 - faraday_agent_dispatcher - INFO {MainThread} [executor_helper.py:97 - processing()]  Data sent to bulk create\nstdout sent empty data,\n2020-05-11 21:16:34,596 - faraday_agent_dispatcher - INFO {MainThread} [dispatcher.py:281 - run_once()]  Executor nmap\nfinished successfully\n</code></pre></p> <p>Right after the Agent executes these actions, return to your Workspace and you can review all the information that was found. Now you are ready to deploy your own Faraday Agents through your network! The Dispatcher README file has more detailed documentation to run and build your Agents. Also, we recommend you to check our examples and official executors to get an idea of what a custom integration looks like.</p>"},{"location":"agents/#whats-next","title":"What's Next","text":"<p>We will continue to improve Agents\u2019 features, usability, and adding new executors into the Dispatcher repository. In the next few releases we would also like to give some Agents read access to their Workspace, so they can benefit from the existing data in order to find more valuable information.</p> <p>We hope you enjoy this feature and find it useful!</p>"},{"location":"api-swagger/","title":"Openapi","text":""},{"location":"beef/","title":"Beef","text":"<p>This plugin can be set from Faraday's Plugin Configuration, where the information of the BeEF's server and RESTful AuthKey:</p> <p>[AuthKey] [Host]  </p> <p></p> <p>By default this plugin is disabled, change the enable boolean in order to use it  </p> <p>The information required for connecting to BeEF is generated when you start it:</p> <p></p>"},{"location":"faraday-cli/","title":"Faraday CLI","text":"<p>Use Faraday directly from your favorite terminal. faraday-cli is the official client that make automating your security workflows, easier.</p> <p>Check our documentation to get more information.</p>"},{"location":"faraday-dispatcher-v4/","title":"Faraday Dispatcher","text":"<p>Faraday Agents Dispatcher helps user develop integrations with Faraday written in any language.</p> <p>Integrating systems is an elusive but mandatory job in any software product's life. Developers have to deal with languages they don't know, undocumented APIs or new paradigms. This leads to the fact that many product teams decide not to open the possibility to integrate to them.</p> <p>The following documentation will allow the users to integrate using agents with other tools.</p>"},{"location":"faraday-dispatcher-v4/#documentation","title":"Documentation","text":"<p>For more info on how to use it, check our [documentation][doc]</p> <ul> <li> <p>Doc</p> </li> <li> <p>API</p> </li> </ul>"},{"location":"import/","title":"Importing","text":"<p>There are many ways to add vulnerabilities into Faraday, create them manually, import scan reports, with supported tools, Faraday Agents or using Faraday API.</p>"},{"location":"import/#import-your-tool-reports","title":"Import your tool Reports","text":"<p>You can upload a scan report of your favorite tool to Faraday and have a nice look at your findings through the Vulns View. You can see a list of the tools that Faraday supports by clicking on this link</p> <p></p> <p>In order to upload a report to Faraday, follow these instructions:</p> <ul> <li>Click on the button + Add Vulnerability. </li> <li>Click on the button Import from file and a prompt will be displayed. </li> <li>Click on Browse in order to select the report that you are going to upload, or just drag and drop the file into the box.</li> <li>Once you have selected the report, click on Upload and your file will be uploaded.</li> <li>Refresh the view with the top bar refresh icon.</li> </ul>"},{"location":"import/#supported-file-formats","title":"Supported File formats","text":"<p>There is a variety of tools and they all have multiple export formats, to make it more simple we list the tool in order + the filetype</p> <ul> <li>Acunetix (REPORT) (XML, JSON)</li> <li>Appscan (REPORT) (XML, CSV)</li> <li>AppSpider (REPORT) (XML)</li> <li>Arachni (REPORT) (XML)</li> <li>AWS Prowler (REPORT) (JSON)</li> <li>Bandit (REPORT, XML)</li> <li>Brutexss (REPORT)</li> <li>Burp, BurpPro (REPORT, API) (XML)</li> <li>Core Impact, Core Impact (REPORT) (XML)</li> <li>Dirsearch (REPORT) (JSON)</li> <li>Fierce (REPORT, CONSOLE)</li> <li>Fortify (REPORT, XML)</li> <li>Goohost (REPORT) (XML)</li> <li>Hydra (REPORT) (XML)</li> <li>Ip360 (REPORT) (CSV)</li> <li>Junit (REPORT) (XML)</li> <li>Lynis (REPORT) (DAT)</li> <li>Maltego (REPORT) (MTGX &amp; MTGL)</li> <li>Microsoft Baseline Security Analyzer (REPORT) (LOG)</li> <li>Metasploit, (REPORT) (XML)</li> <li>Naabu (REPORT) (JSON)</li> <li>Ncrack (REPORT) </li> <li>Nessus, (REPORT) (XML .nessus)</li> <li>Netsparker (REPORT) (XML)</li> <li>Netsparker Cloud (REPORT)</li> <li>Nexpose, Nexpose Enterprise, (REPORT) (simple XML, XML Export plugin (2.0))</li> <li>Nikto (REPORT) (XML)</li> <li>Nipper (REPORT)</li> <li>Nmap (REPORT) (XML)</li> <li>Nuclei (REPORT)</li> <li>OpenScap (REPORT)</li> <li>Openvas (REPORT) (XML)</li> <li>Qualysguard (REPORT) (XML)</li> <li>QualysWebApp (REPORT)</li> <li>Recon-NG (REPORT)</li> <li>Retina (REPORT) (XML)</li> <li>Shodan (API)</li> <li>SonarQube (REPORT)</li> <li>SourceClear (REPORT)</li> <li>SSL Labs (REPORT)</li> <li>SSLyze (REPORT) (XML)</li> <li>Sublist3r (REPORT)</li> <li>W3af (REPORT) (XML)</li> <li>WebInspect (REPORT)</li> <li>WhatWebPlugin (REPORT)</li> <li>WhiteSource (REPORT)</li> <li>Xsssniper (REPORT)</li> <li>X1, Onapsis (REPORT) (XML)</li> <li>Zap (REPORT) (XML)</li> </ul>"},{"location":"integration-gitlab/","title":"GitLab","text":"<p>This is a feature that allows you to send vulnerabilities from Faraday to GitLab.</p>"},{"location":"integration-gitlab/#initial-configuration","title":"Initial Configuration","text":""},{"location":"integration-gitlab/#gitlabs-configuration","title":"GitLab's Configuration","text":"<p>Login into GitLab and navigate to Settings &gt; Access Tokens</p> <p></p> <p></p> <p>Create a Personal Access Token with the API Scope active:</p> <p></p> <p></p> <p>Copy and keep your generated personal access token</p> <p>Now, select a Project from GitLab to connect with Faraday</p> <p></p>"},{"location":"integration-gitlab/#faradays-configuration","title":"Faraday's Configuration","text":"<p>Login into Faraday's Web UI and go to Setting clicking on your username at the top-rigth corner:</p> <p></p> <p>Inside Settings, navigate to Ticketing Tools and Select GitLab from the dropdown menu:</p> <p></p> <p>Now, complete those fields with your GitLab Project information. </p> <p>Access Token (example): 4WRurWXnftGRbqCbJVUG</p> <p>Project (example): TEST-PROJECT</p> <p>template : choose a template from the dropdown menu (templates should be inside Faraday's Server at <code>/home/faraday/.faraday/integrations_templates/</code>)</p> <pre><code>{# This is a Template for Faraday Gitlab Integration #}\n{# Pre-Flight Adjustments #}\n{% set issuetracker_config = 'gitlab' %}\n{% set http_size_config = 4096 %}\n{% if 'med' in vuln.severity %}\n{% set corrected_severity = 'Medium' %}\n{% else %}\n{% set corrected_severity = vuln.severity %}\n{% endif %}\n{# Issue template structure should go under this comment #}\n{% if 'VulnerabilityWeb' in vuln.type %}\n# [{{ corrected_severity | capitalize}}] {{vuln.name}} - ({{vuln.path}})\n{% else %}\n# [{{ corrected_severity | capitalize}}] {{vuln.name}}\n{% endif %}\n## Description\n{{ vuln.desc }}\n#### This issue has been rated as: `{{ corrected_severity | capitalize }}`\nAffected Asset: {{vuln.target}}\n{%  if vuln.website %}\nAffected URL: {{ vuln.website }}{{ vuln.path }}\n{% endif %}\n{% if vuln.hostnames %}\n#### Hostnames\n{% for hostname in vuln.hostnames %}\n- {{hostname}}\n{% endfor %}\n{% endif %}\n## Recommendations\n{{ vuln.resolution }}\n{%for ref in vuln.refs%}\n- {{ref}}\n{%endfor%}\n{%if vuln.easeofresolution%}\n#### Estimated ease of resolution\n{{ vuln.easeofresolution | capitalize }}\n{%endif%}\n### Technical Details\n{%if vuln.data%}\n#### Proof of Concept\n{{vuln.data}}\n{%endif%}\n{%if vuln.request%}\n#### Request\n\n{{vuln.request|truncate(http_size_config, False, '...', 0) }}\n\n{%endif%}\n{% if vuln.response %}\n#### Response\n\n{{ vuln.response|truncate(http_size_config, False, '...', 0) }}\n\n{%endif%}\n## Issue [{{ vuln.id }}] {{vuln.name}} [{{vuln.status}}]\n{# A vulnerability might be associated with more tha one issuetracker id #}\n{% for key, value in vuln.issuetracker_json.items() %}\n{% if issuetracker_config in key%}\nThis issue has already been reported in this platform:\n- {{ key | capitalize}}\n{% for line in value %}\n- Issue: {{line.url}}\n{% endfor %}\n{% endif %}\nsource: created by {{vuln.owner or \"faraday\"}} using {{vuln.tool}} - {{vuln.external_id}} - {{vuln.date}}\n{% endfor %}\n{# end of file #}\n</code></pre> <p>If everything is Ok, click on the green Save button and you should see a pop-up like this:</p> <p></p>"},{"location":"integration-gitlab/#send-vulnerability-to-gitlab","title":"Send vulnerability to GitLab","text":"<p>Access your Faraday's Web UI and go to Manage &gt; Vulns.</p> <p></p> <p>Click on the dropdown menu Add columns and add the issuetracker column.</p> <p></p> <p></p> <p>Now, select the vulnerability you want to export and click on Tools &gt; Gitlab</p> <p></p> <p></p> <p>Click Ok.</p> <p>You should see the word Gitlab appearing on the issuetracker column at your vuln, you can click on it to see the issue that has been created on gitlab!</p> <p></p>"},{"location":"integration-jira/","title":"Jira","text":"<p>This is a feature that allows you to send vulnerabilities from Faraday to JIRA. Through this process you will see how to </p>"},{"location":"integration-jira/#jiras-configuration","title":"JIRA's Configuration","text":""},{"location":"integration-jira/#1-follow-the-instructions-based-on-you-jira-instance-on-prem-or-cloud","title":"1. Follow the instructions based on you JIRA Instance (On-prem or Cloud)","text":"JIRA On Prem Software <p>Copy your instance URL and Project Key from your JIRA instance information:</p> <p></p> <p>URL (example): https://localhost:8080/</p> <p>Project Key (example): FARADAYPRO</p> <p>template : choose a template from the dropdown menu (templates should be inside Faraday's Server at <code>/home/faraday/.faraday/integrations_templates/</code>)</p> <p>Click here to download an example template.</p> JIRA Cloud <p>Copy your JIRA Instance URL and Project Key information:</p> <p></p> <p>URL (example): https://example.atlassian.net/</p> <p>Project Key (example): FARADAYPRO</p> <p>template : choose a template from the dropdown menu (templates should be inside Faraday's Server at <code>/home/faraday/.faraday/integrations_templates/</code>)</p> <p>Click here to download an example template.</p> <p>Now, we need to activate OAuth Authentication:</p> <p>Inside your JIRA Cloud click on the gear icon at the top-right corner (left side of your profile icon) and click on Products, then, on the left-side bar, click on Application links</p> <p></p> <p></p> <p>On the input bar at JIRA, enter your Faraday's URL (example: http://localhost:5985)</p> <p>If this message appears and the URL is correct, just click Continue</p> <p></p> <p>Fill the application fields, in this case, Faraday as the Application Name, you must select the option Generic Application as the Application Type and Mark the option Create incoming link. Then, click Continue.</p> <p></p> <p>Now, you will need to create a:</p> <ul> <li> <p>Consumer Key: you should copy and save this for after configuration at Faraday.</p> </li> <li> <p>Consumer Name: In this case, we use Faraday.</p> </li> <li> <p>Public Key: To create this Public Key, you will need to execute the following command on your Faraday Server: <code>faraday-manage generate-rsa-keys --integration jira</code> you will receive something like this:</p> <p><pre><code>-----BEGIN PUBLIC KEY-----\n9YxXl4D/aL/iE94MsUc9t3FFoNCP97Sfel7o+1q5YOF79qlKGbP3mXgbel/LUaSj\nVd91dnpg1OS1PH0p6YMDsCQfXSVBpC2OUY2hDkEwPUT/OKeAq+XE5sqEqoUeDdrS\nOOWVuEYlWZl6ghS2TABFN5VXPgWg30Ne4L0nlDqJh2BD7RACa+Wpzbr2b/HmIxSf\nWOj6mu7eK7Vx38CyrnOci8u59Mv/IXsEppU6nGgMZ7/Hw1ojaeSn0W6wF0Wsk3EG\nRY/wYngdCYQEQx0rDnannBnP6EuYaqwBtNjcPpp9zvsZt+d1qmOWbii4rbqfY4BR\nn42R05zamkSNqbwdoQ1JDyv90D6lrG+JLq/BjHaIJlAhnDIWfX6DtqgUOD3VUQfC\nGQvvguRA\n-----END PUBLIC KEY-----\n</code></pre> Just copy and paste it inside your Publick Key field at JIRA.</p> </li> </ul> <p></p> <p>Then, click Continue to generate the application.</p> <p>If everything is Ok, you should see this screen:</p> <p></p> <p>Faraday authenticates to Jira using OAuth 1.0 A</p>"},{"location":"integration-jira/#3-faradays-configuration","title":"3. Faraday's Configuration","text":"<p>Login into Faraday's Web UI and go to Setting clicking on your username at the top-rigth corner:</p> <p></p> <p>Inside Settings, navigate to Ticketing Tools and Select JIRA from the dropdown menu:</p> <p></p> JIRA On-Premise <p>Paste your JIRA instance information and paste it on the correct fields.</p> <p>If everything is Ok, click on the green Save button and you should see a pop-up like this:</p> <p></p> JIRA Cloud <p>Inside the ticketing tool at Faraday, paste your instance URL and Project Key, then, add your Consumer Key into the OAuth Authentication field, after this, click the round button to authenticate!</p> <p></p> <p>You should see this, click on Redirect to JIRA, once on JIRA website, click on Allow and wait until receive an Access Approved message, once received, close the tab.</p> <p></p> <p></p> <p>Once in Faraday, click on Authorized.</p> <p></p>"},{"location":"integration-jira/#4-send-vulnerability-to-jira","title":"4. Send vulnerability to JIRA","text":"<p>Navigate to the Manage &gt; Vulns view inside Faraday's Web UI</p> <p>To send vulnerabilities to JIRA, select the desired vulnerabilities, click on the Tools button at the top-right corner and then click on JIRA.</p> <p></p> <p>Click on the dropdown menu Add columns and add the issuetracker column.</p> <p></p> <p></p> <p>Now, select the vulnerability you want to export and click on Tools &gt; JIRA</p> <p>Keep in mind that only confirmed vulnerabilities can be sent.</p> <p></p> <p>Once the JIRA dialog opens, you have two options:</p> <p>You can use the default data saved in the Ticketing Tools section of Settings (see Save JIRA's Configuration for more information):</p> <p>You can overwrite JIRA default data by clicking on the checkbox button and then manually input your JIRA credentials. Then click OK:</p> <p>If you overwrite only one field, Faraday will fill the others fields with the default data. E.g: if you overwrite Project Key, Faraday will fill URL field with the information you have saved in Settings.</p> <p></p> <p>Click Ok.</p> <p>You should see the word JIRA appearing on the issuetracker column at your vuln, you can click on it to see the issue that has been created on JIRA!</p> <p></p> <p></p> <p>Template The template is preloaded in description but you can use the fields described in our jinja2 context doc Link The template's name where you'll define the issue's description. You can call any attribute of the vulnerability object using Jinja2 syntax. E.g., if you want your issue in JIRA to have as description the target, the hostnames, and the severity of the vulnerability, the template would be as follows:</p> <pre><code>{# This is a Template for Faraday Jira Integration #}\n{# Pre-Flight Adjustments #}\n{% set issuetracker_config = 'jira' %}\n{% set http_size_config = 4096 %}\n{% if 'med' in vuln.severity %}\n{% set corrected_severity = 'Medium' %}\n{% else %}\n{% set corrected_severity = vuln.severity %}\n{% endif %}\n{# Issue template structure should go under this comment #}\n{% if 'VulnerabilityWeb' in vuln.type %}\n# [{{ corrected_severity | capitalize}}] {{vuln.name}} - ({{vuln.path}})\n{% else %}\n# [{{ corrected_severity | capitalize}}] {{vuln.name}}\n{% endif %}\n## Description\n{{ vuln.desc }}\n#### This issue has been rated as: `{{ corrected_severity | capitalize }}`\nAffected Asset: {{vuln.target}}\n{%  if vuln.website %}\nAffected URL: {{ vuln.website }}{{ vuln.path }}\n{% endif %}\n{% if vuln.hostnames %}\n#### Hostnames\n{% for hostname in vuln.hostnames %}\n- {{hostname}}\n{% endfor %}\n{% endif %}\n## Recommendations\n{{ vuln.resolution }}\n{%for ref in vuln.refs%}\n- {{ref}}\n{%endfor%}\n{%if vuln.easeofresolution%}\n#### Estimated ease of resolution\n{{ vuln.easeofresolution | capitalize }}\n{%endif%}\n### Technical Details\n{%if vuln.data%}\n#### Proof of Concept\n{{vuln.data}}\n{%endif%}\n{%if vuln.request%}\n#### Request\n\n{{vuln.request|truncate(http_size_config, False, '...', 0) }}\n\n{%endif%}\n{% if vuln.response %}\n#### Response\n\n{{ vuln.response|truncate(http_size_config, False, '...', 0) }}\n\n{%endif%}\n## Issue [{{ vuln.id }}] {{vuln.name}} [{{vuln.status}}]\n{# A vulnerability might be associated with more tha one issuetracker id #}\n{% for key, value in vuln.issuetracker_json.items() %}\n{% if issuetracker_config in key%}\nThis issue has already been reported in this platform:\n- {{ key | capitalize}}\n{% for line in value %}\n- Issue: {{line.url}}\n{% endfor %}\n{% endif %}\nsource: created by {{vuln.owner or \"faraday\"}} using {{vuln.tool}} - {{vuln.external_id}} - {{vuln.date}}\n{% endfor %}\n{# end of file #}\n</code></pre> <p>This template must be located inside the folder </p> <p><code>/home/faraday/.faraday/integrations_templates/</code></p> <p>You can also link an issue to an Epic. To do so, look after the custom field Epic Link of your instance and add it to your issue\u2019s configuration (just as the example above). Once you add it, you need to type in the input field the issue keys of the epic.</p>"},{"location":"integration-servicenow/","title":"ServiceNow","text":"<p>This feature allows you to send vulnerabilities from Faraday to ServiceNow as an incident (using ServiceNow's Incident table).</p>"},{"location":"integration-servicenow/#send-vulnerabilities-to-servicenow","title":"Send vulnerabilities to ServiceNow","text":"<p>To send vulnerabilities to ServiceNow, go into our Status Report, select the desired vulnerabilities, click on the Tools button and then click on the ServiceNow option. </p> <p>Info</p> <p>Keep in mind that only confirmed vulnerabilities can be sent.</p> <p></p>"},{"location":"integration-servicenow/#sending-to-servicenow","title":"Sending To ServiceNow","text":"<p>Once the ServiceNow dialog opens, you have two options:</p> <p>1: You can use the default data saved in the Ticketing Tools section of Settings (see Save ServiceNow's Configuration for more information):</p> <p></p> <p>2: You can overwrite ServiceNow default data by clicking on the checkbox button and then manually input your ServiceNow credentials. Then click OK:</p> <p></p>"},{"location":"integration-servicenow/#issuetracker","title":"Issuetracker","text":"<p>Once the vulnerability has been sent to ServiceNow, add the column issuetracker, so you can see a link that will lead you to the incident in ServiceNow.</p> <p></p>"},{"location":"integration-servicenow/#issuetrackers-json","title":"Issuetracker's JSON","text":"<p>We added the issuetracker_json field which, if you\u2019re using our ServiceNow integration, will give you details about the issue you created from Faraday to your ticketing instance. You can also use this field on your Executive Reports, and can render either the URL of your issue or just the ID for it.</p>"},{"location":"integration-servicenow/#sending-vulnerabilitys-evidence","title":"Sending vulnerability\u2019s evidence","text":"<p>You can send the vulnerability\u2019s evidence to ServiceNow. The evidence will be sent as an incident\u2019s attachments. Keep in mind the following considerations:</p> <ul> <li>You should have the right permissions to add attachments to an incident.</li> <li>The attachment size allowed by your ServiceNow\\'s instance must be greater than the size of the attachment that you want to send.</li> </ul>"},{"location":"integration-servicenow/#save-servicenows-configuration","title":"Save ServiceNow's Configuration","text":"<p>To save ServiceNow's configuration, go to Settings:</p> <p></p> <p>Then go to the Ticketing Tools section:</p> <p></p>"},{"location":"integration-servicenow/#url","title":"URL","text":"<p>Use this field to save the URL of the ServiceNow's instance where you want the vulnerability to be sent.</p>"},{"location":"integration-servicenow/#incidents-configuration","title":"Incident's configuration","text":"<p>In the Incident's Configuration section, you can set the way you want the vulnerabilities to be parsed as ServiceNow\u2019s incident. You can set the incident\u2019s category and subcategory in which the vulnerabilities will be sent or you can even use Jinja2 syntax to create your own templates to parse the vulnerabilities\u2019 information and use these templates as the incident\u2019s description in ServiceNow.</p>"},{"location":"integration-servicenow/#incidents-category-and-subcategory","title":"Incident\u2019s category and subcategory","text":"<p>In these dropdown menus, you can set the category and the subcategory of the incident. Once you send the vulnerability to ServiceNow, you\u2019ll see the same category and subcategory that you defined in Faraday. To check which category and subcategory you can choose, take a look at the following ServiceNow\u2019s link.</p>"},{"location":"integration-servicenow/#template","title":"Template","text":"<p>The template's name where you'll define the incident\u2019s description. You can call any attribute of the vulnerability object using Jinja2 syntax. E.g., if you want your incident in ServiceNow to have as description the target, the hostnames, and the severity of the vulnerability, the template would be as follows:</p>"},{"location":"integration-servicenow/#simple-template","title":"Simple template","text":"<pre><code>{# Service now integration #}\nName: {{ vuln.name }}\nTarget: {{target}}\nHostnames:\n{%for hostname in hostnames%}\n    - {{hostname}}\n{%endfor%}\nSeverity: {{severity}}\n</code></pre>"},{"location":"integration-servicenow/#complex-template","title":"Complex template","text":"<pre><code>{# This is a Template for Faraday service now Integration #}\n{# Pre-Flight Adjustments #}\n{% set issuetracker_config = 'service now' %}\n{% set http_size_config = 4096 %}\n{% if 'med' in vuln.severity %}\n{% set corrected_severity = 'Medium' %}\n{% else %}\n{% set corrected_severity = vuln.severity %}\n{% endif %}\n{# Issue template structure should go under this comment #}\n{% if 'VulnerabilityWeb' in vuln.type %}\n# [{{ corrected_severity | capitalize}}] {{vuln.name}} - ({{vuln.path}})\n{% else %}\n# [{{ corrected_severity | capitalize}}] {{vuln.name}}\n{% endif %}\n## Description\n{{ vuln.desc }}\n#### This issue has been rated as: `{{ corrected_severity | capitalize }}`\nAffected Asset: {{vuln.target}}\n{%  if vuln.website %}\nAffected URL: {{ vuln.website }}{{ vuln.path }}\n{% endif %}\n{% if vuln.hostnames %}\n#### Hostnames\n{% for hostname in vuln.hostnames %}\n- {{hostname}}\n{% endfor %}\n{% endif %}\n## Recommendations\n{{ vuln.resolution }}\n{%for ref in vuln.refs%}\n- {{ref}}\n{%endfor%}\n{%if vuln.easeofresolution%}\n#### Estimated ease of resolution\n{{ vuln.easeofresolution | capitalize }}\n{%endif%}\n### Technical Details\n{%if vuln.data%}\n#### Proof of Concept\n{{vuln.data}}\n{%endif%}\n{%if vuln.request%}\n#### Request\n\n{{vuln.request|truncate(http_size_config, False, '...', 0) }}\n\n{%endif%}\n{% if vuln.response %}\n#### Response\n\n{{ vuln.response|truncate(http_size_config, False, '...', 0) }}\n\n{%endif%}\n## Issue [{{ vuln.id }}] {{vuln.name}} [{{vuln.status}}]\n{# A vulnerability might be associated with more tha one issuetracker id #}\n{% for key, value in vuln.issuetracker_json.items() %}\n{% if issuetracker_config in key%}\nThis issue has already been reported in this platform:\n- {{ key | capitalize}}\n{% for line in value %}\n- Issue: {{line.url}}\n{% endfor %}\n{% endif %}\nsource: created by {{vuln.owner or \"faraday\"}} using {{vuln.tool}} - {{vuln.external_id}} - {{vuln.date}}\n{% endfor %}\n{# end of file #}\n</code></pre> <p>This template must be located inside the folder </p> <pre><code>/home/faraday/.faraday/integrations_templates/*\n</code></pre>"},{"location":"integration-solarwinds/","title":"WHD - SolarWinds","text":"<p>This feature allows you to send vulnerabilities from Faraday to Web Help Desk from Solar Winds as an incident (using Web Help Desk from Solar Winds's Incident table).</p>"},{"location":"integration-solarwinds/#send-vulnerabilities-to-web-help-desk-from-solar-winds","title":"Send vulnerabilities to Web Help Desk from Solar Winds","text":"<p>To send vulnerabilities to Web Help Desk from Solar Winds, go into our Vulnerability View, select the desired vulnerabilities, click on the Tools button and then click on the Web Help Desk from Solar Winds option. </p> <p>Info</p> <p>Keep in mind that only confirmed vulnerabilities can be sent.</p> <p></p>"},{"location":"integration-solarwinds/#sending-to-web-help-desk-from-solar-winds","title":"Sending To Web Help Desk from Solar Winds","text":"<p>Once the Web Help Desk from Solar Winds dialog opens, you have two options:</p> <p>1: You can use the default data saved in the Ticketing Tools section of Settings (see Save Web Help Desk from Solar Winds's Configuration for more information):</p> <p></p> <p>2: You can overwrite Web Help Desk from Solar Winds default data by clicking on the checkbox button and then manually input your Web Help Desk from Solar Winds credentials. Then click OK:</p> <p></p>"},{"location":"integration-solarwinds/#issuetracker","title":"Issuetracker","text":"<p>Once the vulnerability has been sent to Web Help Desk from Solar Winds, add the column issuetracker, so you can see a link that will lead you to the incident in Web Help Desk.</p> <p></p>"},{"location":"integration-solarwinds/#issuetrackers-json","title":"Issuetracker's JSON","text":"<p>We added the issuetracker_json field which, if you\u2019re using our Web Help Desk from Solar Winds integration, will give you details about the issue you created from Faraday to your ticketing instance. You can also use this field on your Executive Reports, and can render either the URL of your issue or just the ID for it.</p>"},{"location":"integration-solarwinds/#save-web-help-desk-from-solar-windss-configuration","title":"Save Web Help Desk from Solar Winds's Configuration","text":"<p>To save Web Help Desk from Solar Winds's configuration, go to Settings:</p> <p></p> <p>Then go to the Ticketing Tools section:</p> <p></p>"},{"location":"integration-solarwinds/#url","title":"URL","text":"<p>Use this field to save the URL of the Web Help Desk from Solar Winds's instance where you want the vulnerability to be sent.</p>"},{"location":"integration-solarwinds/#api-key","title":"API Key","text":"<p>Use the field to fill the Api key created in Solar Winds instance.</p>"},{"location":"integration-solarwinds/#template","title":"Template","text":"<p>Select The first Template, there is a default template already loaded in your faraday instance.</p> <pre><code>{# This is a Template for Faraday solar winds Integration #}\n{# Pre-Flight Adjustments #}\n{% set issuetracker_config = 'solar winds' %}\n{% set http_size_config = 4096 %}\n{% if 'med' in vuln.severity %}\n{% set corrected_severity = 'Medium' %}\n{% else %}\n{% set corrected_severity = vuln.severity %}\n{% endif %}\n{# Issue template structure should go under this comment #}\n{% if 'VulnerabilityWeb' in vuln.type %}\n# [{{ corrected_severity | capitalize}}] {{vuln.name}} - ({{vuln.path}})\n{% else %}\n# [{{ corrected_severity | capitalize}}] {{vuln.name}}\n{% endif %}\n## Description\n{{ vuln.desc }}\n#### This issue has been rated as: `{{ corrected_severity | capitalize }}`\nAffected Asset: {{vuln.target}}\n{%  if vuln.website %}\nAffected URL: {{ vuln.website }}{{ vuln.path }}\n{% endif %}\n{% if vuln.hostnames %}\n#### Hostnames\n{% for hostname in vuln.hostnames %}\n- {{hostname}}\n{% endfor %}\n{% endif %}\n## Recommendations\n{{ vuln.resolution }}\n{%for ref in vuln.refs%}\n- {{ref}}\n{%endfor%}\n{%if vuln.easeofresolution%}\n#### Estimated ease of resolution\n{{ vuln.easeofresolution | capitalize }}\n{%endif%}\n### Technical Details\n{%if vuln.data%}\n#### Proof of Concept\n{{vuln.data}}\n{%endif%}\n{%if vuln.request%}\n#### Request\n\n{{vuln.request|truncate(http_size_config, False, '...', 0) }}\n\n{%endif%}\n{% if vuln.response %}\n#### Response\n\n{{ vuln.response|truncate(http_size_config, False, '...', 0) }}\n\n{%endif%}\n## Issue [{{ vuln.id }}] {{vuln.name}} [{{vuln.status}}]\n{# A vulnerability might be associated with more tha one issuetracker id #}\n{% for key, value in vuln.issuetracker_json.items() %}\n{% if issuetracker_config in key%}\nThis issue has already been reported in this platform:\n- {{ key | capitalize}}\n{% for line in value %}\n- Issue: {{line.url}}\n{% endfor %}\n{% endif %}\nsource: created by {{vuln.owner or \"faraday\"}} using {{vuln.tool}} - {{vuln.external_id}} - {{vuln.date}}\n{% endfor %}\n{# end of file #}\n</code></pre>"},{"location":"requirements/","title":"Hardware Requirements for Faraday","text":"<p>Faraday is a powerful vulnerability management tool that allows you to easily identify, track, and manage vulnerabilities in your network. To get the most out of Faraday, it's important to have the right hardware in place. In this article, we'll take a look at the hardware requirements for Faraday and how to ensure that your system is set up to run Faraday smoothly and efficiently.</p>"},{"location":"requirements/#operating-system","title":"Operating System","text":"<p>Faraday requires a 64-bit operating system. This can be Linux, Ubuntu-based, or Red Hat-based. The operating system should also be up-to-date and have the latest security patches installed.</p> Requirement Recommended Operating System 64-bit Operating System Type Linux, Ubuntu-based, or Red Hat-based Operating System Version Up-to-date with latest security patches"},{"location":"requirements/#processor-and-memory","title":"Processor and Memory","text":"<p>Faraday requires at least a 2GHz quad-core processor and 8GB of RAM. However, for larger networks and more complex environments, it is recommended to have an octa-core processor and 16GB of RAM. This will ensure that Faraday runs smoothly and can handle large amounts of data without any performance issues.</p> Requirement Recommended Processor 2GHz quad-core Memory 8GB RAM Processor (for larger networks) Octa-core Memory (for larger networks) 16GB RAM"},{"location":"requirements/#disk-space","title":"Disk Space","text":"<p>Faraday also requires a minimum of 10GB of free disk space. This includes space for the Faraday server, the database, and any other files that Faraday may need to store. For larger networks and more complex environments, it is recommended to have at least 20GB of free disk space.</p> Requirement Recommended Disk Space 10GB Disk Space (for larger networks) 20GB"},{"location":"requirements/#network-connectivity","title":"Network Connectivity","text":"<p>Faraday requires a stable internet connection. This is necessary for Faraday to communicate with the Faraday server and to access any necessary updates or patches. Faraday also requires a stable and fast connection to the network that it is scanning. This will ensure that Faraday can quickly and efficiently scan the network and identify any vulnerabilities.</p> Requirement Description Internet Connection Stable Network Connectivity Stable and fast connection to the network being scanned"},{"location":"requirements/#database","title":"Database","text":"<p>For the database, it is required PostgreSQL 9.6 or higher.</p> Requirement Description Database PostgreSQL 9.6 or higher"},{"location":"requirements/#python","title":"Python","text":"<p>Faraday requires Python 3.7 or higher to be installed. Python is a programming language that Faraday uses to communicate with the Faraday server and to run various scripts and plugins. It is important to ensure that the correct version of Python is installed and that it is up-to-date.</p> Requirement Description Python 3.7 or higher Minimum Requirements Processor quadcore 2Ghz Intel/AMD CPU Operating System We recommend using Ubuntu Server 18.04 (LTS) RAM 4 GB or more (8 GB recommended) Hard Disk Space 40 GB (depends on usage, PostgreSQL could consume up to 80 GB) Internet Internet connection is necessary for installation and license (Commercial)"}]}